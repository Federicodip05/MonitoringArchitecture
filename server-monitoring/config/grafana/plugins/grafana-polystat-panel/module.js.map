{"version":3,"file":"module.js","mappings":"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","sources":["webpack://grafana-polystat-panel/../node_modules/lru-cache/index.js","webpack://grafana-polystat-panel/../node_modules/lru-cache/node_modules/yallist/iterator.js","webpack://grafana-polystat-panel/../node_modules/lru-cache/node_modules/yallist/yallist.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/comparator.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/range.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/semver.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/clean.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/cmp.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/coerce.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare-build.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare-loose.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/diff.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/eq.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/gt.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/gte.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/inc.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/lt.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/lte.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/major.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/minor.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/neq.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/parse.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/patch.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/prerelease.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/rcompare.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/rsort.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/satisfies.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/sort.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/valid.js","webpack://grafana-polystat-panel/../node_modules/semver/index.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/constants.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/debug.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/identifiers.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/parse-options.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/re.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/gtr.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/intersects.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/ltr.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/max-satisfying.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/min-satisfying.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/min-version.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/outside.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/simplify.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/subset.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/to-comparators.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/valid.js","webpack://grafana-polystat-panel/external amd \"@emotion/css\"","webpack://grafana-polystat-panel/external amd \"@grafana/data\"","webpack://grafana-polystat-panel/external amd \"@grafana/runtime\"","webpack://grafana-polystat-panel/external amd \"@grafana/ui\"","webpack://grafana-polystat-panel/external amd \"d3\"","webpack://grafana-polystat-panel/external amd \"lodash\"","webpack://grafana-polystat-panel/external amd \"react\"","webpack://grafana-polystat-panel/../node_modules/classnames/index.js","webpack://grafana-polystat-panel/webpack/bootstrap","webpack://grafana-polystat-panel/webpack/runtime/compat get default export","webpack://grafana-polystat-panel/webpack/runtime/define property getters","webpack://grafana-polystat-panel/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-polystat-panel/webpack/runtime/make namespace object","webpack://grafana-polystat-panel/./components/types.ts","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/rng.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/regex.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/stringify.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/validate.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/v4.js","webpack://grafana-polystat-panel/./components/thresholds/types.ts","webpack://grafana-polystat-panel/./components/thresholds/ThresholdItem.tsx","webpack://grafana-polystat-panel/./components/gradients/color.ts","webpack://grafana-polystat-panel/./components/defaults.ts","webpack://grafana-polystat-panel/./components/thresholds/ThresholdsEditor.tsx","webpack://grafana-polystat-panel/./components/metric_hints.ts","webpack://grafana-polystat-panel/./components/overrides/OverrideItem.tsx","webpack://grafana-polystat-panel/./components/overrides/OverrideEditor.tsx","webpack://grafana-polystat-panel/../node_modules/d3-hexbin/src/hexbin.js","webpack://grafana-polystat-panel/../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://grafana-polystat-panel/../node_modules/react-tooltip/dist/react-tooltip.min.mjs","webpack://grafana-polystat-panel/./components/gradients/Gradients.tsx","webpack://grafana-polystat-panel/./components/layout/layoutManager.ts","webpack://grafana-polystat-panel/./components/styles.ts","webpack://grafana-polystat-panel/./components/tooltips/Tooltip.tsx","webpack://grafana-polystat-panel/./utils.ts","webpack://grafana-polystat-panel/./components/auto_font_scaler.ts","webpack://grafana-polystat-panel/./components/Polystat.tsx","webpack://grafana-polystat-panel/./components/alignment.ts","webpack://grafana-polystat-panel/./data/deframer.ts","webpack://grafana-polystat-panel/./data/threshold_processor.ts","webpack://grafana-polystat-panel/./data/clickThroughTransformer.ts","webpack://grafana-polystat-panel/./data/types.ts","webpack://grafana-polystat-panel/./data/time_formatter.ts","webpack://grafana-polystat-panel/./data/composite_processor.ts","webpack://grafana-polystat-panel/./data/stats.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v7/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/fieldColor.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/thresholds.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/index.ts","webpack://grafana-polystat-panel/./data/override_processor.ts","webpack://grafana-polystat-panel/./data/processor.ts","webpack://grafana-polystat-panel/./components/PolystatPanel.tsx","webpack://grafana-polystat-panel/./components/composites/types.ts","webpack://grafana-polystat-panel/./components/composites/CompositeMetricItem.tsx","webpack://grafana-polystat-panel/./components/composites/CompositeItem.tsx","webpack://grafana-polystat-panel/./components/composites/CompositeEditor.tsx","webpack://grafana-polystat-panel/./components/thresholds/GlobalThresholdEditor.tsx","webpack://grafana-polystat-panel/./migrations.ts","webpack://grafana-polystat-panel/./module.ts","webpack://grafana-polystat-panel/./components/suggestions.ts"],"sourcesContent":["'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4201__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { SelectableValue } from '@grafana/data';\nimport { CompositeItemType } from 'components/composites/types';\nimport { OverrideItemType } from './overrides/types';\nimport { PolystatThreshold } from './thresholds/types';\n\nexport interface PolystatOptions {\n  autoSizeColumns: boolean;\n  autoSizeRows: boolean;\n  autoSizePolygons: boolean;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  globalAutoScaleFonts: boolean;\n  globalClickthrough: string;\n  globalClickthroughNewTabEnabled: boolean;\n  globalClickthroughSanitizedEnabled: boolean;\n  globalClickthroughCustomTargetEnabled: boolean;\n  globalClickthroughCustomTarget: string;\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalFillColor: string;\n  globalFontSize: number;\n  globalGradientsEnabled: boolean;\n  globalOperator: string;\n  globalPolygonBorderSize: number;\n  globalPolygonBorderColor: string;\n  globalPolygonSize: number;\n  globalRegexPattern: string;\n  globalShape: PolygonShapes;\n  globalShowValueEnabled: boolean;\n  globalShowTimestampEnabled: boolean;\n  globalShowTimestampFormat: string;\n  globalShowTimestampFontSize: number;\n  globalShowTimestampPosition: TimestampPositions;\n  globalShowTimestampYOffset: number;\n  globalShowTooltipColumnHeadersEnabled: boolean;\n  globalTextFontAutoColor: string;\n  globalTextFontAutoColorEnabled: boolean;\n  globalTextFontColor: string;\n  globalTextFontFamily: string;\n  globalThresholdsConfig: PolystatThreshold[];\n  globalTooltipsEnabled: boolean;\n  globalTooltipsShowTimestampEnabled: boolean;\n  globalTooltipsFontFamily: string,\n  globalUnitFormat: string;\n  layoutDisplayLimit: number;\n  layoutNumColumns: number;\n  layoutNumRows: number;\n  processedData?: PolystatModel[] | null;\n  panelHeight: any;\n  panelWidth: any;\n  panelId: number;\n  radius: number | null;\n  renderTime?: Date;\n  sortByField: string;\n  sortByDirection: number;\n  overrideConfig: {\n    overrides: OverrideItemType[];\n  };\n  compositeGlobalAliasingEnabled: boolean;\n  compositeConfig: {\n    animationSpeed: string;\n    composites: CompositeItemType[];\n    enabled: boolean;\n  };\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortByField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortByField: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n}\n\nexport interface PolystatModel {\n  displayMode?: string;\n  thresholdLevel?: number; // 0 = ok, 1 = warn, 2 = crit, 3 = unknown (same as sensu)\n  value: number;\n  valueFormatted: string;\n  valueRounded: number;\n  stats: any;\n  name: string;\n  displayName: string; // Used for composites\n  timestamp: number;\n  prefix: string;\n  suffix: string;\n  color: string;\n  clickThrough: string;\n  operatorName: string;\n  newTabEnabled: boolean;\n  customClickthroughTargetEnabled: boolean;\n  customClickthroughTarget: string;\n  sanitizedURL: string;\n  sanitizeURLEnabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showTimestamp: boolean;\n  timestampFormatted: string;\n  isComposite: boolean;\n  members: PolystatModel[];\n  triggerCache?: any; // holds animation frame info\n}\n\nexport enum PolygonShapes {\n  HEXAGON_POINTED_TOP = 'hexagon_pointed_top',\n  CIRCLE = 'circle',\n  SQUARE = 'square',\n}\n\nexport const PolygonNamedShapes = [\n  { value: 'hexagon_pointed_top', label: 'Hexagon Pointed Top' },\n  { value: 'circle', label: 'Circle' },\n  { value: 'square', label: 'Square' },\n];\n\nexport interface PolystatDiameters {\n  diameterX: number;\n  diameterY: number;\n}\n\nexport const OperatorOptions: SelectableValue[] = [\n  { value: 'mean', label: 'Mean (avg)' },\n  { value: 'sum', label: 'Sum' },\n  { value: 'min', label: 'Min' },\n  { value: 'max', label: 'Max' },\n  { value: 'last', label: 'Last' },\n  { value: 'lastNotNull', label: 'Last Not Null' },\n  { value: 'first', label: 'First' },\n  { value: 'firstNotNull', label: 'First Not Null' },\n  { value: 'count', label: 'Count' },\n  { value: 'allIsNull', label: 'All Is Null (boolean)' },\n  { value: 'allIsZero', label: 'All Is Zero (boolean)' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'diff', label: 'Difference' },\n  { value: 'diffperc', label: 'Difference (Percent)' },\n  { value: 'last_time', label: 'Time of Last Point' },\n  { value: 'logmin', label: 'Log Min' },\n  { value: 'name', label: 'Name' },\n  { value: 'nonNullCount', label: 'Non Null Count' },\n  { value: 'previousDeltaUp', label: 'Previous Delta Up' },\n  { value: 'range', label: 'Range' },\n  { value: 'step', label: 'Step' },\n];\n\nexport const SortOptions = [\n  { value: 0, label: 'Disabled' },\n  { value: 1, label: 'Alphabetical (asc)' },\n  { value: 2, label: 'Alphabetical (desc)' },\n  { value: 3, label: 'Numerical (asc)' },\n  { value: 4, label: 'Numerical (desc)' },\n  { value: 5, label: 'Alphabetical (case-insensitive, asc)' },\n  { value: 6, label: 'Alphabetical (case-insensitive, desc)' },\n];\n\nexport const SortOptionOperators = ['disabled', 'asc', 'desc', 'asc', 'desc', 'iasc', 'idesc'];\n\nexport const SortByFieldOptions = [\n  { value: 'name', label: 'Name' },\n  { value: 'thresholdLevel', label: 'Threshold Level' },\n  { value: 'value', label: 'Value' },\n];\n\nexport const DisplayModes = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport const AnimationModes = [\n  { value: 'all', text: 'Show All' },\n  { value: 'triggered', text: 'Show Triggered' },\n];\n\nexport enum FontFamilies {\n  ARIAL = 'Arial',\n  HELVETICA = 'Helvetica',\n  HELVETICA_NEUE = 'Helvetica Neue',\n  INTER = 'Inter',\n  ROBOTO = 'Roboto',\n  ROBOTO_MONO = 'Roboto Mono',\n}\n\nexport const FontFamilyOptions = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.INTER, label: 'Inter' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\nexport const FontFamilyOptionsLegacy = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.ROBOTO, label: 'Roboto' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\n\nexport const ShowTimestampFormats = [\n  { value: 'HH:mm:ss', label: 'HH:mm:ss' },\n  { value: 'YYYY-MM-DD HH:mm', label: 'YYYY-MM-DD HH:mm' },\n  { value: 'YYYY-MM-DD HH:mm:ss', label: 'YYYY-MM-DD HH:mm:ss' },\n  { value: 'YYYY-MM-DD HH:mm:ss.SSS', label: 'YYYY-MM-DD HH:mm:ss.SSS' },\n  { value: 'MM/DD/YY h:mm:ss a', label: 'MM/DD/YY h:mm:ss a' },\n  { value: 'MMMM D, YYYY LT', label: 'MMMM D, YYYY LT' },\n  { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\n];\n\nexport enum TimestampPositions {\n  BELOW_VALUE = 'below_value',\n  ABOVE_VALUE = 'above_value',\n}\n\nexport const ShowTimestampPositions = [\n  { value: TimestampPositions.ABOVE_VALUE, label: 'Above Value' },\n  { value: TimestampPositions.BELOW_VALUE, label: 'Below Value' },\n];\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { SelectableValue } from '@grafana/data';\n\nexport interface PolystatThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface ThresholdItemTracker {\n  threshold: PolystatThreshold;\n  order: number;\n  ID: string;\n}\n\nexport const ThresholdStates: SelectableValue[] = [\n  { value: 0, label: 'ok' },\n  { value: 1, label: 'warning' },\n  { value: 2, label: 'critical' },\n  { value: 3, label: 'custom' },\n];\n","import React, { useState } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Input, ColorPicker, IconButton, useStyles2, Select } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nimport { PolystatThreshold, ThresholdStates } from './types';\n\ninterface ThresholdItemProps {\n  threshold: PolystatThreshold;\n  key: string;\n  ID: string;\n  valueSetter: any;\n  colorSetter: any;\n  stateSetter: any;\n  remover: any;\n  index: number;\n  disabled: boolean;\n}\n\nexport const ThresholdItem: React.FC<ThresholdItemProps> = (options: ThresholdItemProps) => {\n  const styles = useStyles2(getThresholdStyles);\n  const getThreshold = (thresholdId: number) => {\n    const keys = ThresholdStates.keys();\n    for (const aKey of keys) {\n      if (ThresholdStates[aKey].value === thresholdId) {\n        return ThresholdStates[aKey];\n      }\n    }\n    // no match, return current by default\n    return ThresholdStates[0];\n  };\n\n  const [threshold, setThreshold] = useState<SelectableValue>(getThreshold(options.threshold.state));\n\n  return (\n    <Input\n      disabled={options.disabled}\n      type=\"number\"\n      step=\"1.0\"\n      key={options.ID}\n      onChange={(e) => options.valueSetter(options.index, Number(e.currentTarget.value))}\n      value={options.threshold.value}\n      prefix={\n        <div className={styles.inputPrefix}>\n          <div className={styles.colorPicker}>\n            <ColorPicker\n              color={options.threshold.color}\n              onChange={(color) => options.colorSetter(options.index, color)}\n              enableNamedColors={true}\n            />\n          </div>\n        </div>\n      }\n      suffix={\n        <>\n          <Select\n            disabled={options.disabled}\n            menuShouldPortal={true}\n            value={threshold}\n            onChange={(v) => {\n              setThreshold(v);\n              options.stateSetter(options.index, v.value);\n            }}\n            options={ThresholdStates}\n          />\n          <IconButton\n            disabled={options.disabled}\n            key=\"deleteThreshold\"\n            variant=\"destructive\"\n            name=\"trash-alt\"\n            tooltip=\"Delete Threshold\"\n            onClick={() => options.remover(options.index)}\n          />\n        </>\n      }\n    />\n  );\n};\n\nconst getThresholdStyles = (theme: GrafanaTheme2) => {\n  return {\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    colorPicker: css`\n      padding: 0 ${theme.spacing(1)};\n    `,\n  };\n};\n","/*\n  Generic class to provide gradient colors\n\n  Based on https://codepen.io/anon/pen/wWxGkr\n\n*/\nexport class Color {\n  r: number;\n  g: number;\n  b: number;\n\n  constructor(r: number, g: number, b: number) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  asHex() {\n    return '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1);\n  }\n\n  asRGB() {\n    return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  blendWith(col: Color, a: number) {\n    const r = Math.round(col.r * (1 - a) + this.r * a);\n    const g = Math.round(col.g * (1 - a) + this.g * a);\n    const b = Math.round(col.b * (1 - a) + this.b * a);\n    return new Color(r, g, b);\n  }\n\n  Mul(col: Color, a: number) {\n    const r = Math.round((col.r / 255) * this.r * a);\n    const g = Math.round((col.g / 255) * this.g * a);\n    const b = Math.round((col.b / 255) * this.b * a);\n    return new Color(r, g, b);\n  }\n\n  RGBToHex(rgb: any) {\n    let sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n    // Convert %s to 0–255\n    for (let R in rgb) {\n      let r = rgb[R];\n      if (r.indexOf('%') > -1) {\n        rgb[R] = Math.round((r.substr(0, r.length - 1) / 100) * 255);\n      }\n    }\n  }\n\n  static RGBAToHex(orig: string) {\n    const rgb = orig.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\n    const alpha = ((rgb && rgb[4]) || '').trim();\n    let hex = rgb\n      ? (parseInt(rgb[1], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[2], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[3], 10) | (1 << 8)).toString(16).slice(1)\n      : orig;\n\n    let a = '1';\n    if (alpha !== '') {\n      const alphaVal = parseFloat(alpha);\n      // multiply before convert to HEX\n      a = ((alphaVal * 255) | (1 << 8)).toString(16).slice(1);\n    }\n    return '#' + hex + a;\n  }\n\n  fromHex(hex: string) {\n    // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    hex = hex.substring(1, 7);\n    const bigint = parseInt(hex, 16);\n    this.r = (bigint >> 16) & 255;\n    this.g = (bigint >> 8) & 255;\n    this.b = bigint & 255;\n  }\n}\n","import { Color } from './gradients/color';\nimport { FontFamilies } from './types';\n\n/**\n * Color to use when rendering without any thresholds/overrides\n */\nexport const GLOBAL_FILL_COLOR_RGBA = 'rgba(10, 85, 161, 1)'; // \"#0a55a1\"\nexport const GLOBAL_FILL_COLOR_HEX = '#0a55a1';\nexport const GLOBAL_FILL_COLOR = new Color(10, 85, 161);\n\nexport const GLOBAL_BORDER_COLOR_RGBA = 'rgba(0, 0, 0, 0)'; // \"#000000\"\n/**\n * Color for threshold OK state\n */\nexport const DEFAULT_OK_COLOR_RGBA = 'rgba(41, 156, 70, 1))'; // #299c46\nexport const DEFAULT_OK_COLOR_HEX = '#299c46';\nexport const DEFAULT_OK_COLOR = new Color(41, 156, 70);\n/**\n * Color for threshold Warning state\n */\nexport const DEFAULT_WARNING_COLOR_RGBA = 'rgba(237, 129, 40, 1)'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR_HEX = '#ed8128'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR = new Color(237, 129, 40);\n/**\n * Color for threshold Critical state\n */\nexport const DEFAULT_CRITICAL_COLOR_RGBA = 'rgba(245, 54, 54, 1)';\nexport const DEFAULT_CRITICAL_COLOR_HEX = '#f53636';\nexport const DEFAULT_CRITICAL_COLOR = new Color(245, 54, 54);\n\nexport const DEFAULT_NO_THRESHOLD_COLOR_RGBA = GLOBAL_FILL_COLOR_RGBA;\nexport const DEFAULT_NO_THRESHOLD_COLOR_HEX = GLOBAL_FILL_COLOR_HEX;\nexport const DEFAULT_NO_THRESHOLD_COLOR = new Color(64, 64, 160);\n\nexport const DEFAULT_NO_DATA_COLOR_HEX = '#808080'; // \"grey\"\n\n/**\n * Unit to apply to all metrics without overrides\n */\nexport const GLOBAL_UNIT_FORMAT = 'short';\n/**\n * Number of decimals to display in polygon\n */\nexport const GLOBAL_DISPLAY_DECIMALS = 2;\n/**\n * Show all metrics\n */\nexport const GLOBAL_DISPLAY_MODE = 'all';\n/**\n * Display OK when global mode is set to triggered and there are no triggers\n */\nexport const GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY = 'OK';\n/**\n * Display average (mean) stat for metric\n */\nexport const GLOBAL_OPERATOR_NAME = 'mean'; // mean\n\nexport const GLOBAL_OVERRIDE_COLORS = [\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n];\n\nexport const GLOBAL_TEXT_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TEXT_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\n","import React, { useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { Button, useTheme, useTheme2 } from '@grafana/ui';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { PolystatThreshold, ThresholdItemTracker } from './types';\nimport { ThresholdItem } from './ThresholdItem';\nimport { DEFAULT_OK_COLOR_HEX, DEFAULT_WARNING_COLOR_HEX, DEFAULT_CRITICAL_COLOR_HEX } from '../defaults';\nimport { getColorForTheme } from '@grafana/data';\ninterface Props {\n  thresholds: PolystatThreshold[];\n  setter: any;\n  disabled?: boolean;\n}\nexport const ThresholdsEditor: React.FC<Props> = (options) => {\n  const [tracker, _setTracker] = useState((): ThresholdItemTracker[] => {\n    if (!options.thresholds) {\n      return [] as ThresholdItemTracker[];\n    }\n    const items: ThresholdItemTracker[] = [];\n    options.thresholds.forEach((value: PolystatThreshold, index: number) => {\n      items[index] = {\n        threshold: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n  // v9 compatible\n  const theme2 = useTheme2();\n  const oldTheme = useTheme();\n\n  const setTracker = (v: ThresholdItemTracker[]) => {\n    _setTracker(v);\n    const allThresholds: PolystatThreshold[] = [];\n    v.forEach((element) => {\n      allThresholds.push(element.threshold);\n    });\n    options.setter(allThresholds);\n  };\n\n  const updateThresholdValue = (index: number, value: number) => {\n    tracker[index].threshold.value = Number(value);\n    // reorder\n    const allThresholds = [...tracker];\n    const orderedThresholds = orderBy(allThresholds, ['threshold.value'], ['asc']);\n    setTracker([...orderedThresholds]);\n  };\n\n  const updateThresholdColor = (index: number, color: string) => {\n    let useColor: string;\n    if (typeof theme2.visualization !== 'undefined') {\n      useColor = theme2.visualization.getColorByName(color);\n    } else {\n      // intentional use of deprecated function for v8 compat\n      // eslint-disable-next-line deprecation/deprecation\n      useColor = getColorForTheme(color, oldTheme);\n    }\n    tracker[index].threshold.color = useColor;\n    setTracker([...tracker]);\n  };\n\n  const updateThresholdState = (index: number, state: any) => {\n    tracker[index].threshold.state = state;\n    // set the color if it is not a custom state\n    if (state < 3) {\n      tracker[index].threshold.color = colorForThresholdState(state);\n    }\n    setTracker([...tracker]);\n  };\n\n  const colorForThresholdState = (state: number) => {\n    switch (state) {\n      case 0:\n        return DEFAULT_OK_COLOR_HEX;\n      case 1:\n        return DEFAULT_WARNING_COLOR_HEX;\n      case 2:\n        return DEFAULT_CRITICAL_COLOR_HEX;\n      default:\n        return DEFAULT_OK_COLOR_HEX;\n    }\n  };\n\n  const removeThreshold = (index: number) => {\n    const allThresholds = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allThresholds.length; i++) {\n      if (allThresholds[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allThresholds.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allThresholds.length; i++) {\n      allThresholds[i].order = i;\n    }\n    setTracker([...allThresholds]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aThreshold: PolystatThreshold = {\n      color: DEFAULT_OK_COLOR_HEX, // \"rgba(50, 172, 45, 1)\",  // green\n      state: 0,\n      value: 0,\n    };\n    const aTracker: ThresholdItemTracker = {\n      threshold: aThreshold,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n  };\n\n  return (\n    <>\n      <Button disabled={options.disabled} fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Threshold\n      </Button>\n      {tracker &&\n        tracker.map((tracker: ThresholdItemTracker, index: number) => {\n          return (\n            <ThresholdItem\n              disabled={options.disabled || false}\n              key={`threshold-item-index-${tracker.ID}`}\n              ID={tracker.ID}\n              threshold={tracker.threshold}\n              valueSetter={updateThresholdValue}\n              colorSetter={updateThresholdColor}\n              stateSetter={updateThresholdState}\n              remover={removeThreshold}\n              index={index}\n            />\n          );\n        })}\n    </>\n  );\n};\n","import { FieldType } from '@grafana/data';\n\n// builds unique metric names to shorten the list displayed\nexport const getMetricHints = (frames: any) => {\n  let metricHints = new Set<string>();\n  for (let i = 0; i < frames.length; i++) {\n    // start with empty hint\n    let hintValue = '';\n    // the frame may have a name defined, start with it, fields will change it as needed\n    if (frames[i]?.name) {\n      hintValue = frames[i].name;\n    }\n    // iterate over fields, get all number types and provide as hints\n    for (const aField of frames[i].fields) {\n      if (aField.type === FieldType.number) {\n        // update the hint to use the field Name if we didn't get a value from above\n        if ((aField.name) && (hintValue === '')) {\n          hintValue = aField.name;\n        }\n        // check for a label with __name__ and use it instead\n        if (aField?.labels && ('__name__' in aField.labels)) {\n          hintValue = aField.labels['__name__'];\n          // append the rest of the labels\n          const appendLabels: string[] = [];\n          for (const aLabel in aField.labels) {\n            if (aLabel !== '__name__') {\n              appendLabels.push(`${aLabel}=\"${aField.labels[aLabel]}\"`);\n            }\n          }\n          if (appendLabels.length > 0) {\n            // sort them first\n            appendLabels.sort();\n            hintValue += '{' + appendLabels.join('') + '}';\n          }\n        }\n        // update the hint to use the displayNameFromDS value\n        // (the query has a specified a naming convention)\n        if (aField?.config && aField.config?.displayNameFromDS) {\n          hintValue = aField.config?.displayNameFromDS;\n        }\n        metricHints.add(hintValue);\n      }\n    }\n  }\n  return metricHints;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  IconName,\n  Input,\n  Field,\n  FieldSet,\n  Switch,\n  Card,\n  IconButton,\n  UnitPicker,\n  Select,\n  Cascader,\n  CascaderOption,\n} from '@grafana/ui';\nimport { OverrideItemProps, OverrideItemType } from './types';\nimport { ThresholdsEditor } from '../thresholds/ThresholdsEditor';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions, ShowTimestampFormats } from '../types';\nimport { SelectableValue } from '@grafana/data';\nimport { getMetricHints } from '../metric_hints';\n\nexport const OverrideItem: React.FC<OverrideItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n  const [override, _setOverride] = useState(props.override);\n\n  const setOverride = (value: OverrideItemType) => {\n    _setOverride(value);\n    props.setter(override.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n\n  const getOperator = (operatorName: string) => {\n    const keys = OperatorOptions.keys();\n    for (const aKey of keys) {\n      if (OperatorOptions[aKey].value === operatorName) {\n        return OperatorOptions[aKey];\n      }\n    }\n    // no match, return last not null by default\n    return OperatorOptions[5];\n  };\n  const [operatorName, setOperatorName] = useState<SelectableValue>(getOperator(props.override.operatorName));\n  const removeItem = () => {\n    props.remover(override.order);\n  };\n\n  const moveUp = () => {\n    props.moveUp(override.order);\n  };\n  const moveDown = () => {\n    props.moveDown(override.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(override.order);\n  };\n\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setOverride({ ...override, thresholds: val });\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <Card key={`override-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field\n            label=\"Label\"\n            description=\"Sets the name of the override in the configuration editor.\"\n            disabled={!override.enabled}\n          >\n            <Input\n              value={override.label}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, label: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Metric/RegEx\" disabled={!override.enabled}>\n            <Cascader\n              initialValue={override.metricName}\n              allowCustomValue\n              placeholder=\"\"\n              options={metricHints}\n              onSelect={(val: string) => setOverride({ ...override, metricName: val })}\n            />\n          </Field>\n          <Field label=\"Alias\" disabled={!override.enabled} hidden={true}>\n            <Input\n              value={override.alias}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, alias: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Decimals\" disabled={!override.enabled}>\n            <Input\n              value={override.decimals}\n              type=\"number\"\n              step={1}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, decimals: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Stat\" description=\"The statistic to be displayed\" disabled={!override.enabled}>\n            <Select\n              menuShouldPortal={true}\n              value={operatorName}\n              onChange={(v) => {\n                setOperatorName(v);\n                setOverride({ ...override, operatorName: v.value });\n              }}\n              options={OperatorOptions}\n            />\n          </Field>\n          <Field label=\"Unit Format\" disabled={!override.enabled}>\n            {override.enabled ? (\n              <UnitPicker\n                value={override.unitFormat}\n                onChange={(val: any) => setOverride({ ...override, unitFormat: val })}\n              />\n            ) : (\n              <span>{override.unitFormat}</span>\n            )}\n          </Field>\n          {/*\n          <Field label=\"Show Timestamp\" description=\"Toggle Display of Timestamp\" disabled={!override.enabled}>\n            <Switch\n              transparent={true}\n              value={override.showTimestampEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, showTimestampEnabled: !override.showTimestampEnabled })}\n            />\n          </Field>\n          <Field label=\"Timestamp Format\" description=\"Format of timestamp to display\" disabled={!override.enabled} hidden={!override.showTimestampEnabled}>\n            <Cascader\n              initialValue={override.showTimestampFormat}\n              allowCustomValue\n              placeholder=\"\"\n              options={ShowTimestampFormats}\n              onSelect={(val: string) => setOverride({ ...override, showTimestampFormat: val })}\n            />\n          </Field>\n          <Field label=\"Timestamp Y Offset\" description=\"Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down\" disabled={!override.enabled} hidden={!override.showTimestampEnabled}>\n            <Input\n              value={override.showTimestampYOffset}\n              type=\"number\"\n              step={1}\n              placeholder=\"0\"\n              onChange={(v) => setOverride({ ...override, showTimestampYOffset: v.currentTarget.valueAsNumber })}\n            />\n          </Field>\n          */}\n\n          <Field label=\"Thresholds\" disabled={!override.enabled}>\n            <ThresholdsEditor disabled={!override.enabled} thresholds={override.thresholds} setter={setThresholds} />\n          </Field>\n          <Field label=\"Prefix\" description=\"Apply text to beginning of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.prefix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, prefix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Suffix\" description=\"Apply text to end of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.suffix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, suffix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!override.enabled}>\n            <Input\n              value={override.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setOverride({ ...override, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              disabled={!override.enabled}\n              value={override.clickThroughSanitize}\n              onChange={() => setOverride({ ...override, clickThroughSanitize: !override.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughOpenNewTab}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, clickThroughOpenNewTab: !override.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!override.enabled} hidden={override.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughCustomTargetEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override,\n                clickThroughCustomTargetEnabled: !override.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: override.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!override.enabled} hidden={!override.clickThroughCustomTargetEnabled}>\n            <Input\n              value={override.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!override.enabled}\n              onChange={(e) => setOverride({ ...override, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n        </FieldSet>\n      </Card.Meta>\n\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"overrideEnabled\"\n          name={override.enabled ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Override\"\n          onClick={() => setOverride({ ...override, enabled: !override.enabled })}\n        />\n        <IconButton key=\"copyOverride\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteOverride\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Override\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { OverrideItem } from './OverrideItem';\nimport { OverrideItemType, OverrideItemTracker } from './types';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { Button, Collapse } from '@grafana/ui';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions, ShowTimestampFormats } from '../types';\nimport {\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n} from '../defaults';\n\nexport interface OverrideEditorSettings {\n  overrides: OverrideItemType[];\n  enabled: boolean;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, OverrideEditorSettings> {}\n\nexport const OverrideEditor: React.FC<Props> = ({ item, context, onChange }) => {\n  const [settings] = useState(context.options.overrideConfig);\n  const [tracker, _setTracker] = useState((): OverrideItemTracker[] => {\n    if (!settings.overrides) {\n      return [] as OverrideItemTracker[];\n    }\n    const items: OverrideItemTracker[] = [];\n    settings.overrides.forEach((value: OverrideItemType, index: number) => {\n      items[index] = {\n        override: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n\n  const setTracker = (v: OverrideItemTracker[]) => {\n    _setTracker(v);\n    const allOverrides: OverrideItemType[] = [];\n    v.forEach((element) => {\n      allOverrides.push(element.override);\n    });\n    const overrideConfig = {\n      overrides: allOverrides,\n      enabled: settings.enabled,\n    };\n    onChange(overrideConfig as any);\n  };\n\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [] as boolean[];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  const updateOverride = (index: number, value: OverrideItemType) => {\n    tracker[index].override = value;\n    // works ... setTracker(tracker);\n    setTracker([...tracker]);\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].override;\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `${original.label} Copy`,\n      enabled: original.enabled,\n      metricName: original.metricName,\n      alias: original.alias,\n      thresholds: original.thresholds,\n      prefix: original.prefix,\n      suffix: original.suffix,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      unitFormat: original.unitFormat,\n      scaledDecimals: original.scaledDecimals,\n      decimals: original.decimals,\n      colors: original.colors,\n      operatorName: original.operatorName,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const removeOverride = (index: number) => {\n    const allOverrides = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allOverrides.length; i++) {\n      if (allOverrides[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allOverrides.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allOverrides.length; i++) {\n      allOverrides[i].order = i;\n      allOverrides[i].override.order = i;\n    }\n    setTracker([...allOverrides]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const currentState = [...isOpen];\n    currentState[index] = !currentState[index];\n    setIsOpen([...currentState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `Override-${order}`,\n      enabled: true,\n      metricName: '',\n      alias: '',\n      thresholds: [] as PolystatThreshold[],\n      prefix: '',\n      suffix: '',\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      unitFormat: 'short',\n      scaledDecimals: null,\n      decimals: '2',\n      colors: [\n        DEFAULT_OK_COLOR_HEX,\n        DEFAULT_WARNING_COLOR_HEX,\n        DEFAULT_CRITICAL_COLOR_HEX,\n        DEFAULT_NO_THRESHOLD_COLOR_HEX,\n      ],\n      operatorName: OperatorOptions[0].value,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Override\n      </Button>\n      {tracker &&\n        tracker.map((tracker: OverrideItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${tracker.ID}`}\n              label={tracker.override.label}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <OverrideItem\n                key={`override-item-index-${tracker.ID}`}\n                ID={tracker.ID}\n                override={tracker.override}\n                enabled={tracker.override.enabled}\n                setter={updateOverride}\n                remover={removeOverride}\n                moveDown={moveDown}\n                moveUp={moveUp}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n","/*\n* React Tooltip\n* {@link https://github.com/ReactTooltip/react-tooltip}\n* @copyright ReactTooltip Team\n* @license MIT\n*/\nimport e,{useLayoutEffect as t,useEffect as o,createContext as r,useState as l,useCallback as n,useMemo as c,useContext as i,useRef as s,useImperativeHandle as a}from\"react\";import{arrow as u,computePosition as d,offset as p,flip as v,shift as m,autoUpdate as f}from\"@floating-ui/dom\";import y from\"classnames\";const h=\"react-tooltip-core-styles\",w=\"react-tooltip-base-styles\",b={core:!1,base:!1};function S({css:e,id:t=w,type:o=\"base\",ref:r}){var l,n;if(!e||\"undefined\"==typeof document||b[o])return;if(\"core\"===o&&\"undefined\"!=typeof process&&(null===(l=null===process||void 0===process?void 0:process.env)||void 0===l?void 0:l.REACT_TOOLTIP_DISABLE_CORE_STYLES))return;if(\"base\"!==o&&\"undefined\"!=typeof process&&(null===(n=null===process||void 0===process?void 0:process.env)||void 0===n?void 0:n.REACT_TOOLTIP_DISABLE_BASE_STYLES))return;\"core\"===o&&(t=h),r||(r={});const{insertAt:c}=r;if(document.getElementById(t))return void console.warn(`[react-tooltip] Element with id '${t}' already exists. Call \\`removeStyle()\\` first`);const i=document.head||document.getElementsByTagName(\"head\")[0],s=document.createElement(\"style\");s.id=t,s.type=\"text/css\",\"top\"===c&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e)),b[o]=!0}function E({type:e=\"base\",id:t=w}={}){if(!b[e])return;\"core\"===e&&(t=h);const o=document.getElementById(t);\"style\"===(null==o?void 0:o.tagName)?null==o||o.remove():console.warn(`[react-tooltip] Failed to remove 'style' element with id '${t}'. Call \\`injectStyle()\\` first`),b[e]=!1}const g=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:o=null,place:r=\"top\",offset:l=10,strategy:n=\"absolute\",middlewares:c=[p(Number(l)),v({fallbackAxisSideDirection:\"start\"}),m({padding:5})],border:i})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{},place:r};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{},place:r};const s=c;return o?(s.push(u({element:o,padding:5})),d(e,t,{placement:r,strategy:n,middleware:s}).then((({x:e,y:t,placement:o,middlewareData:r})=>{var l,n;const c={left:`${e}px`,top:`${t}px`,border:i},{x:s,y:a}=null!==(l=r.arrow)&&void 0!==l?l:{x:0,y:0},u=null!==(n={top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"}[o.split(\"-\")[0]])&&void 0!==n?n:\"bottom\",d=i&&{borderBottom:i,borderRight:i};let p=0;if(i){const e=`${i}`.match(/(\\d+)px/);p=(null==e?void 0:e[1])?Number(e[1]):1}return{tooltipStyles:c,tooltipArrowStyles:{left:null!=s?`${s}px`:\"\",top:null!=a?`${a}px`:\"\",right:\"\",bottom:\"\",...d,[u]:`-${4+p}px`},place:o}}))):d(e,t,{placement:\"bottom\",strategy:n,middleware:s}).then((({x:e,y:t,placement:o})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{},place:o})))},A=(e,t)=>!(\"CSS\"in window&&\"supports\"in window.CSS)||window.CSS.supports(e,t),_=(e,t,o)=>{let r=null;const l=function(...l){const n=()=>{r=null,o||e.apply(this,l)};o&&!r&&(e.apply(this,l),r=setTimeout(n,t)),o||(r&&clearTimeout(r),r=setTimeout(n,t))};return l.cancel=()=>{r&&(clearTimeout(r),r=null)},l},O=e=>null!==e&&!Array.isArray(e)&&\"object\"==typeof e,T=(e,t)=>{if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every(((e,o)=>T(e,t[o])));if(Array.isArray(e)!==Array.isArray(t))return!1;if(!O(e)||!O(t))return e===t;const o=Object.keys(e),r=Object.keys(t);return o.length===r.length&&o.every((o=>T(e[o],t[o])))},k=e=>{if(!(e instanceof HTMLElement||e instanceof SVGElement))return!1;const t=getComputedStyle(e);return[\"overflow\",\"overflow-x\",\"overflow-y\"].some((e=>{const o=t.getPropertyValue(e);return\"auto\"===o||\"scroll\"===o}))},C=e=>{if(!e)return null;let t=e.parentElement;for(;t;){if(k(t))return t;t=t.parentElement}return document.scrollingElement||document.documentElement},L=\"undefined\"!=typeof window?t:o,R=\"DEFAULT_TOOLTIP_ID\",x={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},N=r({getTooltipData:()=>x}),$=({children:t})=>{const[o,r]=l({[R]:new Set}),[i,s]=l({[R]:{current:null}}),a=(e,...t)=>{r((o=>{var r;const l=null!==(r=o[e])&&void 0!==r?r:new Set;return t.forEach((e=>l.add(e))),{...o,[e]:new Set(l)}}))},u=(e,...t)=>{r((o=>{const r=o[e];return r?(t.forEach((e=>r.delete(e))),{...o}):o}))},d=n(((e=R)=>{var t,r;return{anchorRefs:null!==(t=o[e])&&void 0!==t?t:new Set,activeAnchor:null!==(r=i[e])&&void 0!==r?r:{current:null},attach:(...t)=>a(e,...t),detach:(...t)=>u(e,...t),setActiveAnchor:t=>((e,t)=>{s((o=>{var r;return(null===(r=o[e])||void 0===r?void 0:r.current)===t.current?o:{...o,[e]:t}}))})(e,t)}}),[o,i,a,u]),p=c((()=>({getTooltipData:d})),[d]);return e.createElement(N.Provider,{value:p},t)};function I(e=R){return i(N).getTooltipData(e)}const j=({tooltipId:t,children:r,className:l,place:n,content:c,html:i,variant:a,offset:u,wrapper:d,events:p,positionStrategy:v,delayShow:m,delayHide:f})=>{const{attach:h,detach:w}=I(t),b=s(null);return o((()=>(h(b),()=>{w(b)})),[]),e.createElement(\"span\",{ref:b,className:y(\"react-tooltip-wrapper\",l),\"data-tooltip-place\":n,\"data-tooltip-content\":c,\"data-tooltip-html\":i,\"data-tooltip-variant\":a,\"data-tooltip-offset\":u,\"data-tooltip-wrapper\":d,\"data-tooltip-events\":p,\"data-tooltip-position-strategy\":v,\"data-tooltip-delay-show\":m,\"data-tooltip-delay-hide\":f},r)};var B={tooltip:\"core-styles-module_tooltip__3vRRp\",fixed:\"core-styles-module_fixed__pcSol\",arrow:\"core-styles-module_arrow__cvMwQ\",noArrow:\"core-styles-module_noArrow__xock6\",clickable:\"core-styles-module_clickable__ZuTTB\",show:\"core-styles-module_show__Nt9eE\",closing:\"core-styles-module_closing__sGnxF\"},z={tooltip:\"styles-module_tooltip__mnnfp\",arrow:\"styles-module_arrow__K0L3T\",dark:\"styles-module_dark__xNqje\",light:\"styles-module_light__Z6W-X\",success:\"styles-module_success__A2AKt\",warning:\"styles-module_warning__SCK0X\",error:\"styles-module_error__JvumD\",info:\"styles-module_info__BWdHW\"};const D=({forwardRef:t,id:r,className:c,classNameArrow:i,variant:u=\"dark\",anchorId:d,anchorSelect:p,place:v=\"top\",offset:m=10,events:h=[\"hover\"],openOnClick:w=!1,positionStrategy:b=\"absolute\",middlewares:S,wrapper:E,delayShow:A=0,delayHide:O=0,float:k=!1,hidden:R=!1,noArrow:x=!1,clickable:N=!1,closeOnEsc:$=!1,closeOnScroll:j=!1,closeOnResize:D=!1,openEvents:q,closeEvents:H,globalCloseEvents:M,imperativeModeOnly:W,style:P,position:V,afterShow:F,afterHide:K,content:U,contentWrapperRef:X,isOpen:Y,defaultIsOpen:G=!1,setIsOpen:Z,activeAnchor:J,setActiveAnchor:Q,border:ee,opacity:te,arrowColor:oe,role:re=\"tooltip\"})=>{var le;const ne=s(null),ce=s(null),ie=s(null),se=s(null),ae=s(null),[ue,de]=l({tooltipStyles:{},tooltipArrowStyles:{},place:v}),[pe,ve]=l(!1),[me,fe]=l(!1),[ye,he]=l(null),we=s(!1),be=s(null),{anchorRefs:Se,setActiveAnchor:Ee}=I(r),ge=s(!1),[Ae,_e]=l([]),Oe=s(!1),Te=w||h.includes(\"click\"),ke=Te||(null==q?void 0:q.click)||(null==q?void 0:q.dblclick)||(null==q?void 0:q.mousedown),Ce=q?{...q}:{mouseenter:!0,focus:!0,click:!1,dblclick:!1,mousedown:!1};!q&&Te&&Object.assign(Ce,{mouseenter:!1,focus:!1,click:!0});const Le=H?{...H}:{mouseleave:!0,blur:!0,click:!1,dblclick:!1,mouseup:!1};!H&&Te&&Object.assign(Le,{mouseleave:!1,blur:!1});const Re=M?{...M}:{escape:$||!1,scroll:j||!1,resize:D||!1,clickOutsideAnchor:ke||!1};W&&(Object.assign(Ce,{mouseenter:!1,focus:!1,click:!1,dblclick:!1,mousedown:!1}),Object.assign(Le,{mouseleave:!1,blur:!1,click:!1,dblclick:!1,mouseup:!1}),Object.assign(Re,{escape:!1,scroll:!1,resize:!1,clickOutsideAnchor:!1})),L((()=>(Oe.current=!0,()=>{Oe.current=!1})),[]);const xe=e=>{Oe.current&&(e&&fe(!0),setTimeout((()=>{Oe.current&&(null==Z||Z(e),void 0===Y&&ve(e))}),10))};o((()=>{if(void 0===Y)return()=>null;Y&&fe(!0);const e=setTimeout((()=>{ve(Y)}),10);return()=>{clearTimeout(e)}}),[Y]),o((()=>{if(pe!==we.current)if(ae.current&&clearTimeout(ae.current),we.current=pe,pe)null==F||F();else{const e=(e=>{const t=e.match(/^([\\d.]+)(ms|s)$/);if(!t)return 0;const[,o,r]=t;return Number(o)*(\"ms\"===r?1:1e3)})(getComputedStyle(document.body).getPropertyValue(\"--rt-transition-show-delay\"));ae.current=setTimeout((()=>{fe(!1),he(null),null==K||K()}),e+25)}}),[pe]);const Ne=e=>{de((t=>T(t,e)?t:e))},$e=(e=A)=>{ie.current&&clearTimeout(ie.current),me?xe(!0):ie.current=setTimeout((()=>{xe(!0)}),e)},Ie=(e=O)=>{se.current&&clearTimeout(se.current),se.current=setTimeout((()=>{ge.current||xe(!1)}),e)},je=e=>{var t;if(!e)return;const o=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;if(!(null==o?void 0:o.isConnected))return Q(null),void Ee({current:null});A?$e():xe(!0),Q(o),Ee({current:o}),se.current&&clearTimeout(se.current)},Be=()=>{N?Ie(O||100):O?Ie():xe(!1),ie.current&&clearTimeout(ie.current)},ze=({x:e,y:t})=>{var o;const r={getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})};g({place:null!==(o=null==ye?void 0:ye.place)&&void 0!==o?o:v,offset:m,elementReference:r,tooltipReference:ne.current,tooltipArrowReference:ce.current,strategy:b,middlewares:S,border:ee}).then((e=>{Ne(e)}))},De=e=>{if(!e)return;const t=e,o={x:t.clientX,y:t.clientY};ze(o),be.current=o},qe=e=>{var t;if(!pe)return;const o=e.target;if(!o.isConnected)return;if(null===(t=ne.current)||void 0===t?void 0:t.contains(o))return;[document.querySelector(`[id='${d}']`),...Ae].some((e=>null==e?void 0:e.contains(o)))||(xe(!1),ie.current&&clearTimeout(ie.current))},He=_(je,50,!0),Me=_(Be,50,!0),We=e=>{Me.cancel(),He(e)},Pe=()=>{He.cancel(),Me()},Ve=n((()=>{var e,t;const o=null!==(e=null==ye?void 0:ye.position)&&void 0!==e?e:V;o?ze(o):k?be.current&&ze(be.current):(null==J?void 0:J.isConnected)&&g({place:null!==(t=null==ye?void 0:ye.place)&&void 0!==t?t:v,offset:m,elementReference:J,tooltipReference:ne.current,tooltipArrowReference:ce.current,strategy:b,middlewares:S,border:ee}).then((e=>{Oe.current&&Ne(e)}))}),[pe,J,U,P,v,null==ye?void 0:ye.place,m,b,V,null==ye?void 0:ye.position,k]);o((()=>{var e,t;const o=new Set(Se);Ae.forEach((e=>{o.add({current:e})}));const r=document.querySelector(`[id='${d}']`);r&&o.add({current:r});const l=()=>{xe(!1)},n=C(J),c=C(ne.current);Re.scroll&&(window.addEventListener(\"scroll\",l),null==n||n.addEventListener(\"scroll\",l),null==c||c.addEventListener(\"scroll\",l));let i=null;Re.resize?window.addEventListener(\"resize\",l):J&&ne.current&&(i=f(J,ne.current,Ve,{ancestorResize:!0,elementResize:!0,layoutShift:!0}));const s=e=>{\"Escape\"===e.key&&xe(!1)};Re.escape&&window.addEventListener(\"keydown\",s),Re.clickOutsideAnchor&&window.addEventListener(\"click\",qe);const a=[],u=e=>{pe&&(null==e?void 0:e.target)===J||je(e)},p=e=>{pe&&(null==e?void 0:e.target)===J&&Be()},v=[\"mouseenter\",\"mouseleave\",\"focus\",\"blur\"],m=[\"click\",\"dblclick\",\"mousedown\",\"mouseup\"];Object.entries(Ce).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:We}):m.includes(e)&&a.push({event:e,listener:u}))})),Object.entries(Le).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:Pe}):m.includes(e)&&a.push({event:e,listener:p}))})),k&&a.push({event:\"pointermove\",listener:De});const y=()=>{ge.current=!0},h=()=>{ge.current=!1,Be()};return N&&!ke&&(null===(e=ne.current)||void 0===e||e.addEventListener(\"mouseenter\",y),null===(t=ne.current)||void 0===t||t.addEventListener(\"mouseleave\",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var r;null===(r=o.current)||void 0===r||r.addEventListener(e,t)}))})),()=>{var e,t;Re.scroll&&(window.removeEventListener(\"scroll\",l),null==n||n.removeEventListener(\"scroll\",l),null==c||c.removeEventListener(\"scroll\",l)),Re.resize?window.removeEventListener(\"resize\",l):null==i||i(),Re.clickOutsideAnchor&&window.removeEventListener(\"click\",qe),Re.escape&&window.removeEventListener(\"keydown\",s),N&&!ke&&(null===(e=ne.current)||void 0===e||e.removeEventListener(\"mouseenter\",y),null===(t=ne.current)||void 0===t||t.removeEventListener(\"mouseleave\",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var r;null===(r=o.current)||void 0===r||r.removeEventListener(e,t)}))}))}}),[J,Ve,me,Se,Ae,q,H,M,Te,A,O]),o((()=>{var e,t;let o=null!==(t=null!==(e=null==ye?void 0:ye.anchorSelect)&&void 0!==e?e:p)&&void 0!==t?t:\"\";!o&&r&&(o=`[data-tooltip-id='${r}']`);const l=new MutationObserver((e=>{const t=[],l=[];e.forEach((e=>{if(\"attributes\"===e.type&&\"data-tooltip-id\"===e.attributeName){e.target.getAttribute(\"data-tooltip-id\")===r?t.push(e.target):e.oldValue===r&&l.push(e.target)}if(\"childList\"===e.type){if(J){const t=[...e.removedNodes].filter((e=>1===e.nodeType));if(o)try{l.push(...t.filter((e=>e.matches(o)))),l.push(...t.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}t.some((e=>{var t;return!!(null===(t=null==e?void 0:e.contains)||void 0===t?void 0:t.call(e,J))&&(fe(!1),xe(!1),Q(null),ie.current&&clearTimeout(ie.current),se.current&&clearTimeout(se.current),!0)}))}if(o)try{const r=[...e.addedNodes].filter((e=>1===e.nodeType));t.push(...r.filter((e=>e.matches(o)))),t.push(...r.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}}})),(t.length||l.length)&&_e((e=>[...e.filter((e=>!l.includes(e))),...t]))}));return l.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:[\"data-tooltip-id\"],attributeOldValue:!0}),()=>{l.disconnect()}}),[r,p,null==ye?void 0:ye.anchorSelect,J]),o((()=>{Ve()}),[Ve]),o((()=>{if(!(null==X?void 0:X.current))return()=>null;const e=new ResizeObserver((()=>{setTimeout((()=>Ve()))}));return e.observe(X.current),()=>{e.disconnect()}}),[U,null==X?void 0:X.current]),o((()=>{var e;const t=document.querySelector(`[id='${d}']`),o=[...Ae,t];J&&o.includes(J)||Q(null!==(e=Ae[0])&&void 0!==e?e:t)}),[d,Ae,J]),o((()=>(G&&xe(!0),()=>{ie.current&&clearTimeout(ie.current),se.current&&clearTimeout(se.current)})),[]),o((()=>{var e;let t=null!==(e=null==ye?void 0:ye.anchorSelect)&&void 0!==e?e:p;if(!t&&r&&(t=`[data-tooltip-id='${r}']`),t)try{const e=Array.from(document.querySelectorAll(t));_e(e)}catch(e){_e([])}}),[r,p,null==ye?void 0:ye.anchorSelect]),o((()=>{ie.current&&(clearTimeout(ie.current),$e(A))}),[A]);const Fe=null!==(le=null==ye?void 0:ye.content)&&void 0!==le?le:U,Ke=pe&&Object.keys(ue.tooltipStyles).length>0;return a(t,(()=>({open:e=>{if(null==e?void 0:e.anchorSelect)try{document.querySelector(e.anchorSelect)}catch(t){return void console.warn(`[react-tooltip] \"${e.anchorSelect}\" is not a valid CSS selector`)}he(null!=e?e:null),(null==e?void 0:e.delay)?$e(e.delay):xe(!0)},close:e=>{(null==e?void 0:e.delay)?Ie(e.delay):xe(!1)},activeAnchor:J,place:ue.place,isOpen:Boolean(me&&!R&&Fe&&Ke)}))),me&&!R&&Fe?e.createElement(E,{id:r,role:re,className:y(\"react-tooltip\",B.tooltip,z.tooltip,z[u],c,`react-tooltip__place-${ue.place}`,B[Ke?\"show\":\"closing\"],Ke?\"react-tooltip__show\":\"react-tooltip__closing\",\"fixed\"===b&&B.fixed,N&&B.clickable),onTransitionEnd:e=>{ae.current&&clearTimeout(ae.current),pe||\"opacity\"!==e.propertyName||(fe(!1),he(null),null==K||K())},style:{...P,...ue.tooltipStyles,opacity:void 0!==te&&Ke?te:void 0},ref:ne},Fe,e.createElement(E,{className:y(\"react-tooltip-arrow\",B.arrow,z.arrow,i,x&&B.noArrow),style:{...ue.tooltipArrowStyles,background:oe?`linear-gradient(to right bottom, transparent 50%, ${oe} 50%)`:void 0},ref:ce})):null},q=({content:t})=>e.createElement(\"span\",{dangerouslySetInnerHTML:{__html:t}}),H=e.forwardRef((({id:t,anchorId:r,anchorSelect:n,content:c,html:i,render:a,className:u,classNameArrow:d,variant:p=\"dark\",place:v=\"top\",offset:m=10,wrapper:f=\"div\",children:h=null,events:w=[\"hover\"],openOnClick:b=!1,positionStrategy:S=\"absolute\",middlewares:E,delayShow:g=0,delayHide:_=0,float:O=!1,hidden:T=!1,noArrow:k=!1,clickable:C=!1,closeOnEsc:L=!1,closeOnScroll:R=!1,closeOnResize:x=!1,openEvents:N,closeEvents:$,globalCloseEvents:j,imperativeModeOnly:B=!1,style:z,position:H,isOpen:M,defaultIsOpen:W=!1,disableStyleInjection:P=!1,border:V,opacity:F,arrowColor:K,setIsOpen:U,afterShow:X,afterHide:Y,role:G=\"tooltip\"},Z)=>{const[J,Q]=l(c),[ee,te]=l(i),[oe,re]=l(v),[le,ne]=l(p),[ce,ie]=l(m),[se,ae]=l(g),[ue,de]=l(_),[pe,ve]=l(O),[me,fe]=l(T),[ye,he]=l(f),[we,be]=l(w),[Se,Ee]=l(S),[ge,Ae]=l(null),[_e,Oe]=l(null),Te=s(P),{anchorRefs:ke,activeAnchor:Ce}=I(t),Le=e=>null==e?void 0:e.getAttributeNames().reduce(((t,o)=>{var r;if(o.startsWith(\"data-tooltip-\")){t[o.replace(/^data-tooltip-/,\"\")]=null!==(r=null==e?void 0:e.getAttribute(o))&&void 0!==r?r:null}return t}),{}),Re=e=>{const t={place:e=>{var t;re(null!==(t=e)&&void 0!==t?t:v)},content:e=>{Q(null!=e?e:c)},html:e=>{te(null!=e?e:i)},variant:e=>{var t;ne(null!==(t=e)&&void 0!==t?t:p)},offset:e=>{ie(null===e?m:Number(e))},wrapper:e=>{var t;he(null!==(t=e)&&void 0!==t?t:f)},events:e=>{const t=null==e?void 0:e.split(\" \");be(null!=t?t:w)},\"position-strategy\":e=>{var t;Ee(null!==(t=e)&&void 0!==t?t:S)},\"delay-show\":e=>{ae(null===e?g:Number(e))},\"delay-hide\":e=>{de(null===e?_:Number(e))},float:e=>{ve(null===e?O:\"true\"===e)},hidden:e=>{fe(null===e?T:\"true\"===e)},\"class-name\":e=>{Ae(e)}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,o])=>{var r;null===(r=t[e])||void 0===r||r.call(t,o)}))};o((()=>{Q(c)}),[c]),o((()=>{te(i)}),[i]),o((()=>{re(v)}),[v]),o((()=>{ne(p)}),[p]),o((()=>{ie(m)}),[m]),o((()=>{ae(g)}),[g]),o((()=>{de(_)}),[_]),o((()=>{ve(O)}),[O]),o((()=>{fe(T)}),[T]),o((()=>{Ee(S)}),[S]),o((()=>{Te.current!==P&&console.warn(\"[react-tooltip] Do not change `disableStyleInjection` dynamically.\")}),[P]),o((()=>{\"undefined\"!=typeof window&&window.dispatchEvent(new CustomEvent(\"react-tooltip-inject-styles\",{detail:{disableCore:\"core\"===P,disableBase:P}}))}),[]),o((()=>{var e;const o=new Set(ke);let l=n;if(!l&&t&&(l=`[data-tooltip-id='${t}']`),l)try{document.querySelectorAll(l).forEach((e=>{o.add({current:e})}))}catch(e){console.warn(`[react-tooltip] \"${l}\" is not a valid CSS selector`)}const c=document.querySelector(`[id='${r}']`);if(c&&o.add({current:c}),!o.size)return()=>null;const i=null!==(e=null!=_e?_e:c)&&void 0!==e?e:Ce.current,s=new MutationObserver((e=>{e.forEach((e=>{var t;if(!i||\"attributes\"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith(\"data-tooltip-\")))return;const o=Le(i);Re(o)}))})),a={attributes:!0,childList:!1,subtree:!1};if(i){const e=Le(i);Re(e),s.observe(i,a)}return()=>{s.disconnect()}}),[ke,Ce,_e,r,n]),o((()=>{(null==z?void 0:z.border)&&console.warn(\"[react-tooltip] Do not set `style.border`. Use `border` prop instead.\"),V&&!A(\"border\",`${V}`)&&console.warn(`[react-tooltip] \"${V}\" is not a valid \\`border\\`.`),(null==z?void 0:z.opacity)&&console.warn(\"[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.\"),F&&!A(\"opacity\",`${F}`)&&console.warn(`[react-tooltip] \"${F}\" is not a valid \\`opacity\\`.`)}),[]);let xe=h;const Ne=s(null);if(a){const t=a({content:(null==_e?void 0:_e.getAttribute(\"data-tooltip-content\"))||J||null,activeAnchor:_e});xe=t?e.createElement(\"div\",{ref:Ne,className:\"react-tooltip-content-wrapper\"},t):null}else J&&(xe=J);ee&&(xe=e.createElement(q,{content:ee}));const $e={forwardRef:Z,id:t,anchorId:r,anchorSelect:n,className:y(u,ge),classNameArrow:d,content:xe,contentWrapperRef:Ne,place:oe,variant:le,offset:ce,wrapper:ye,events:we,openOnClick:b,positionStrategy:Se,middlewares:E,delayShow:se,delayHide:ue,float:pe,hidden:me,noArrow:k,clickable:C,closeOnEsc:L,closeOnScroll:R,closeOnResize:x,openEvents:N,closeEvents:$,globalCloseEvents:j,imperativeModeOnly:B,style:z,position:H,isOpen:M,defaultIsOpen:W,border:V,opacity:F,arrowColor:K,setIsOpen:U,afterShow:X,afterHide:Y,activeAnchor:_e,setActiveAnchor:e=>Oe(e),role:G};return e.createElement(D,{...$e})}));\"undefined\"!=typeof window&&window.addEventListener(\"react-tooltip-inject-styles\",(e=>{e.detail.disableCore||S({css:`:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9;--rt-transition-show-delay:0.15s;--rt-transition-closing-delay:0.15s}.core-styles-module_tooltip__3vRRp{position:absolute;top:0;left:0;pointer-events:none;opacity:0;will-change:opacity}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{opacity:var(--rt-opacity);transition:opacity var(--rt-transition-show-delay)ease-out}.core-styles-module_closing__sGnxF{opacity:0;transition:opacity var(--rt-transition-closing-delay)ease-in}`,type:\"core\"}),e.detail.disableBase||S({css:`\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*='react-tooltip__place-top']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*='react-tooltip__place-right']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*='react-tooltip__place-bottom']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*='react-tooltip__place-left']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`,type:\"base\"})}));export{H as Tooltip,$ as TooltipProvider,j as TooltipWrapper,E as removeStyle};\n","import { DEFAULT_CRITICAL_COLOR, DEFAULT_OK_COLOR, DEFAULT_WARNING_COLOR } from '../defaults';\nimport React from 'react';\n\nimport { Color } from './color';\n\nexport interface GradientProps {\n  data: any;\n  gradientId: string;\n}\nexport const Gradients: React.FC<GradientProps> = (options) => {\n  const pureLight = new Color(255, 255, 255);\n\n  const createGradients = (data: any): any => {\n    const gradients = [];\n    const pureLight = new Color(255, 255, 255);\n    for (let i = 0; i < data.length; i++) {\n      const aColorStart = new Color(0, 0, 0);\n      // color can be in hex or in rgb\n      let useColor: string = data[i].color;\n      if (useColor.startsWith('rgba')) {\n        useColor = Color.RGBAToHex(useColor);\n      }\n      aColorStart.fromHex(useColor);\n      const aColorEnd = aColorStart.Mul(pureLight, 0.7);\n      gradients.push({ start: aColorStart.asHex(), end: aColorEnd.asHex() });\n    }\n    return gradients;\n  };\n  const colorGradients = createGradients(options.data);\n  const okColorStart = DEFAULT_OK_COLOR; // '#299c46', // \"rgba(50, 172, 45, 1)\", // green\n  const okColorEnd = okColorStart.Mul(pureLight, 0.7);\n  const warningColorStart = DEFAULT_WARNING_COLOR; // #FFC837 // '#e5ac0e', // \"rgba(237, 129, 40, 1)\", // yellow\n  const warningColorEnd = warningColorStart.Mul(pureLight, 0.7);\n  const criticalColorStart = DEFAULT_CRITICAL_COLOR; // #e52d27 // '#bf1b00', // \"rgba(245, 54, 54, 1)\", // red\n  const criticalColorEnd = criticalColorStart.Mul(pureLight, 0.7);\n\n  const gradientId = options.gradientId;\n  return (\n    <>\n      <defs>\n        {colorGradients.map((aGradient: any, index: number) => {\n          return (\n            <linearGradient\n              key={index}\n              id={gradientId + '_linear_gradient_state_data_' + index}\n              x1={'30%'}\n              y1={'30%'}\n              x2={'70%'}\n              y2={'70%'}\n            >\n              <stop offset={'0%'} stopColor={aGradient.start} />\n              <stop offset={'100%'} stopColor={aGradient.end} />\n            </linearGradient>\n          );\n        })}\n        <linearGradient id={gradientId + '_linear_gradient_state_ok'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={okColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={okColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_warning'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={warningColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={warningColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient-state_critical'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={criticalColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={criticalColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_unknown'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={'#73808A'} />\n          <stop offset={'100%'} stopColor={'#73808A'} />\n        </linearGradient>\n      </defs>\n    </>\n  );\n};\n","import * as d3 from 'd3';\nimport { PolygonShapes, PolystatDiameters } from '../types';\nimport { LayoutPoint } from './types';\n/**\n * LayoutManager creates layouts for supported polygon shapes\n */\nexport class LayoutManager {\n  width: number;\n  height: number;\n  numColumns: number;\n  numRows: number;\n  radius: number;\n  autoSize: boolean;\n  maxRowsUsed: number;\n  maxColumnsUsed: number;\n  displayLimit: number;\n  shape: PolygonShapes;\n  readonly SQRT3 = 1.7320508075688772;\n\n  constructor(\n    width: number,\n    height: number,\n    numColumns: number,\n    numRows: number,\n    displayLimit: number,\n    autoSize: boolean,\n    shape: PolygonShapes\n  ) {\n    this.width = width;\n    this.height = height;\n    // check for less than 1 or NaN, force to 8\n    if (numColumns < 1 || isNaN(numColumns)) {\n      this.numColumns = 8;\n    } else {\n      this.numColumns = numColumns;\n    }\n    // check for less than 1 or NaN, force to 8\n    if (numRows < 1 || isNaN(numRows)) {\n      this.numRows = 8;\n    } else {\n      this.numRows = numRows;\n    }\n\n    this.maxColumnsUsed = 0;\n    this.maxRowsUsed = 0;\n\n    // negative or NaN limit gets set to 100, 0 is allowed for unlimited\n    if (displayLimit < 0 || isNaN(displayLimit)) {\n      this.displayLimit = 100;\n    } else {\n      this.displayLimit = displayLimit;\n    }\n    this.shape = shape;\n    this.radius = 0;\n    this.autoSize = autoSize;\n  }\n\n  /**\n   * Sets the radius to be used in all layout calculations\n   *\n   * @param radius user defined value\n   */\n  setRadius(radius: number) {\n    this.radius = radius;\n  }\n  setHeight(height: number) {\n    this.height = height;\n  }\n  setWidth(width: number) {\n    this.width = width;\n  }\n  /**\n   * returns a layout for hexagons with pointed tops\n   */\n  generateHexagonPointedTopLayout(): any {\n    const layout = {};\n    this.radius = this.getHexFlatTopRadius();\n    return layout;\n  }\n\n  /**\n   * returns a layout for square-shapes\n   */\n  generateUniformLayout(): any {\n    const layout = {};\n    this.radius = this.getUniformRadius();\n    return layout;\n  }\n\n  /**\n   * The maximum radius the hexagons can have to still fit the screen\n   * With (long) radius being R:\n   *  - Total width (rows > 1) = 1 small radius (sqrt(3) * R / 2) + columns * small diameter (sqrt(3) * R)\n   *  - Total height = 1 pointy top (1/2 * R) + rows * size of the rest (3/2 * R)\n   */\n  getHexFlatTopRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    if (hexRadius !== undefined) {\n      hexRadius = hexRadius - polygonBorderSize;\n      return this.truncateFloat(hexRadius);\n    }\n    // default to a reasonable value (should not happen though)\n    return 40;\n  }\n\n  /**\n   * Helper method to return rendered width and height of hexagon shape\n   */\n  getHexFlatTopDiameters(): PolystatDiameters {\n    const hexRadius = this.getHexFlatTopRadius();\n    const diameterX = this.truncateFloat(hexRadius * this.SQRT3);\n    const diameterY = this.truncateFloat(hexRadius * 2);\n    return { diameterX, diameterY };\n  }\n\n  /**\n   * Helper method to return rendered width and height of a circle/square shapes\n   */\n  getUniformDiameters(): PolystatDiameters {\n    const radius = this.getUniformRadius();\n    const diameterX = radius * 2;\n    const diameterY = radius * 2;\n    return { diameterX, diameterY };\n  }\n  /**\n   * Given the number of columns and rows, calculate the maximum size of a uniform shaped polygon that can be used\n   *   uniformed shapes are: square/circle\n   * width divided by the number of columns determines the max horizontal of the square\n   * height divided by the number of rows determines the max vertical size of the square\n   * the smaller of the two is used since that is the \"best fit\" for a square\n   */\n  getUniformRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    // width divided by the number of columns determines the max horizontal of the square\n    // height divided by the number of rows determines the max vertical size of the square\n    // the smaller of the two is used since that is the \"best fit\"\n    const horizontalMax = (this.width / this.maxColumnsUsed) * 0.5;\n    const verticalMax = (this.height / this.maxRowsUsed) * 0.5;\n    let uniformRadius = horizontalMax;\n    if (uniformRadius > verticalMax) {\n      // vertically limited\n      uniformRadius = verticalMax;\n    }\n    // internal border\n    uniformRadius = uniformRadius - polygonBorderSize;\n    return this.truncateFloat(uniformRadius);\n  }\n\n  generatePossibleColumnAndRowsSizes(columnAutoSize: boolean, rowAutoSize: boolean, dataSize: number) {\n    if (rowAutoSize && columnAutoSize) {\n      // sqrt of # data items\n      const squared = Math.sqrt(dataSize);\n      // favor columns when width is greater than height\n      // favor rows when width is less than height\n      if (this.width > this.height) {\n        this.numColumns = Math.ceil((this.width / this.height) * squared * 0.75);\n        // always at least 1 column and max. data.length columns\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        } else if (this.numColumns > dataSize) {\n          this.numColumns = dataSize;\n        }\n\n        // Align rows count to computed columns count\n        this.numRows = Math.ceil(dataSize / this.numColumns);\n        // always at least 1 row\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        }\n      } else {\n        this.numRows = Math.ceil((this.height / this.width) * squared * 0.75);\n        // always at least 1 row and max. data.length rows\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        } else if (this.numRows > dataSize) {\n          this.numRows = dataSize;\n        }\n        // Align columns count to computed rows count\n        this.numColumns = Math.ceil(dataSize / this.numRows);\n        // always at least 1 column\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        }\n      }\n    } else if (rowAutoSize) {\n      // Align rows count to fixed columns count\n      this.numRows = Math.ceil(dataSize / this.numColumns);\n      // always at least 1 row\n      if (this.numRows < 1) {\n        this.numRows = 1;\n      }\n    } else if (columnAutoSize) {\n      // Align columns count to fixed rows count\n      this.numColumns = Math.ceil(dataSize / this.numRows);\n      // always at least 1 column\n      if (this.numColumns < 1) {\n        this.numColumns = 1;\n      }\n    }\n  }\n\n  /**\n   * This determines how many rows and columns are going to be rendered, which can then\n   * be used to calculate the radius size (which is needed before generating points)\n   * @param data metrics\n   * @param displayLimit max number of polygons to show\n   */\n  generateActualColumnAndRowUsage(data: any, displayLimit: number) {\n    let polygonsUsed = 0;\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            polygonsUsed++;\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n  }\n\n  shapeToCoordinates(shape: PolygonShapes, radius: number, column: number, row: number) {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        let x = radius * column * this.SQRT3;\n        //Offset each uneven row by half of a \"hex-width\" to the right\n        if (row % 2 === 1) {\n          x += (radius * this.SQRT3) / 2;\n        }\n        const y = radius * row * 1.5;\n        return [x, y];\n      case PolygonShapes.CIRCLE:\n        return [radius * column * 2, radius * row * 2];\n      case PolygonShapes.SQUARE:\n        return [radius * column * 2, radius * row * 2];\n      default:\n        return [radius * column * 1.75, radius * row * 1.5];\n    }\n  }\n\n  // Builds the placeholder polygons needed to represent each metric\n  generatePoints(data: any, displayLimit: number, shape: PolygonShapes): LayoutPoint[] {\n    const points: LayoutPoint[] = [];\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            let coords = this.shapeToCoordinates(shape, this.radius, j, i);\n            const aPoint: LayoutPoint = {\n              x: coords[0],\n              y: coords[1],\n            }\n            points.push(aPoint);\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateUniformPoints(data: any, displayLimit: number): any {\n    const points = [] as any;\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    let xPos = 1;\n    let yPos = 1;\n\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            points.push({\n              x: xPos,\n              y: yPos,\n              width: this.radius * 2,\n              height: this.radius * 2,\n            });\n            xPos += this.radius * 2;\n          }\n        }\n        xPos = 1;\n        yPos += this.radius * 2;\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateRadius(shape: PolygonShapes): number {\n    if (!this.autoSize) {\n      return this.radius;\n    }\n    let radius = 0;\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        radius = this.getHexFlatTopRadius();\n        break;\n      case PolygonShapes.CIRCLE:\n        radius = this.getUniformRadius();\n        break;\n      case PolygonShapes.SQUARE:\n        radius = this.getUniformRadius();\n        break;\n      default:\n        radius = this.getHexFlatTopRadius();\n        break;\n    }\n    this.radius = radius;\n    return radius;\n  }\n\n  truncateFloat(value: number): number {\n    if (value === Infinity || isNaN(value)) {\n      return 0;\n    }\n    const matches = value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/);\n    if (matches !== null && matches.length > 0) {\n      return Number(matches[0]);\n    }\n    return 0;\n  }\n\n  getOffsets(shape: PolygonShapes, dataSize: number): any {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getOffsetsHexagonPointedTop(dataSize);\n      case PolygonShapes.SQUARE:\n        return this.getOffsetsSquare(dataSize);\n      case PolygonShapes.CIRCLE:\n        return this.getOffsetsUniform(dataSize);\n      default:\n        return this.getOffsetsUniform(dataSize);\n    }\n  }\n\n  getOffsetsHexagonPointedTop(dataSize: number): any {\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    hexRadius = this.truncateFloat(hexRadius as number);\n    const shapeWidth = this.truncateFloat(hexRadius * this.SQRT3);\n    const shapeHeight = this.truncateFloat(hexRadius * 2);\n\n    const offsetToViewY = shapeHeight * 0.5;\n    // even rows are half-sized\n    const { oddCount, evenCount } = this.getOddEvenCountForRange(1, this.maxRowsUsed);\n    // odd-numbered hexagons are full height, evens are half height\n    const actualHeightUsed = oddCount * shapeHeight + evenCount * shapeHeight * 0.5;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n\n    const offsetToViewX = shapeWidth * 0.5;\n    // columns have a half-width offset if there are more than 1 rows\n    let widthOffset = 0;\n    if (this.numRows > 1) {\n      // if the dataSize is equal to or larger than the 2*Columns, there is an additional offset needed\n      if (dataSize >= this.maxColumnsUsed * 2) {\n        widthOffset = 0.5;\n      }\n    }\n    const actualWidthUsed = (this.numColumns + widthOffset) * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsUniform(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsSquare(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = 0; // shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = 0; //shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOddEvenCountForRange(L: number, R: number): any {\n    let oddCount = (R - L) / 2;\n    // if either R or L is odd\n    if (R % 2 !== 0 || L % 2 !== 0) {\n      oddCount++;\n    }\n    const evenCount = R - L + 1 - oddCount;\n    return { oddCount, evenCount };\n  }\n\n  /**\n   * Returns diameterX and diameterY for given shape\n   */\n  getDiameters(): PolystatDiameters {\n    switch (this.shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getHexFlatTopDiameters();\n      case PolygonShapes.SQUARE:\n        return this.getUniformDiameters();\n      case PolygonShapes.CIRCLE:\n        return this.getUniformDiameters();\n      default:\n        return this.getUniformDiameters();\n    }\n  }\n}\n","import { GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nexport const getErrorMessageStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.error.shade};\n`;\n\nexport const getNoTriggerTextStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.success.shade};\n`;\n\nexport const getWrapperStyles = (theme: GrafanaTheme2) => css`\n  fill: transparent;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const getSVGStyles = (theme: GrafanaTheme2) => css`\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  fill: transparent;\n`;\n\nexport const getSVGPathStyles = (theme: GrafanaTheme2) => css`\n  outline: none !important;\n`;\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, dateTimeFormatWithAbbrevation } from '@grafana/data';\nimport { PolystatModel, SortOptions } from '../types';\n\nexport interface TooltipProps {\n  data: PolystatModel | undefined;\n  valueEnabled: boolean;\n  tooltipColumnHeadersEnabled: boolean;\n  renderTime: Date;\n  showTime: boolean;\n  primarySortByField: string;\n  primarySortDirection: number;\n  secondarySortByField: string;\n  secondarySortDirection: number;\n  displayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipFontFamily: string;\n}\n\nexport const Tooltip = ({\n  data,\n  renderTime,\n  showTime,\n  valueEnabled,\n  tooltipColumnHeadersEnabled,\n  primarySortByField,\n  primarySortDirection,\n  secondarySortByField,\n  secondarySortDirection,\n  displayMode,\n  tooltipDisplayTextTriggeredEmpty,\n  tooltipFontFamily,\n}: TooltipProps) => {\n  const styles = useStyles2(getTooltipStyles);\n\n  // check for timestamp in data, override renderTime when present\n  if (data?.timestamp) {\n    renderTime = new Date(data?.timestamp);\n  }\n  /* the name of the composite is shown at the top */\n  const getCompositeHeader = (data: PolystatModel | null) => {\n    if (data && data.members && data.members.length === 0) {\n      return '';\n    }\n    return (\n      <tr>\n        <th className={styles.tooltipCompositeHeading} colSpan={2}>\n          {data?.displayName}\n        </th>\n      </tr>\n    );\n  };\n\n  const multiSort = (\n    data: PolystatModel,\n    primarySortDirection: number,\n    primarySortByField: string,\n    secondarySortDirection: number,\n    secondarySortByField: string\n  ) => {\n    let sortSettings = getSortDirection(SortOptions[primarySortDirection].value);\n    const pUseLowercase = sortSettings.lowerCase;\n    const pDirection = sortSettings.direction as any;\n    sortSettings = getSortDirection(SortOptions[secondarySortDirection].value);\n    const sDirection = sortSettings.direction as any;\n    const sUseLowercase = sortSettings.lowerCase;\n\n    let pSortFunction = primarySortByField as any;\n    if (pUseLowercase) {\n      pSortFunction = (item: any) => {\n        let val = item[primarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    let sSortFunction = secondarySortByField as any;\n    if (sUseLowercase) {\n      sSortFunction = (item: any) => {\n        let val = item[secondarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    return lodashOrderBy(data.members, [pSortFunction, sSortFunction], [pDirection, sDirection]);\n  };\n\n  const getTriggeredCount = (data: PolystatModel) => {\n    let triggered = 0;\n    if (data.thresholdLevel !== 0) {\n      triggered++;\n    }\n    for (let j = 0; j < data.members.length; j++) {\n      if (data.members[j].thresholdLevel !== 0) {\n        triggered++;\n      }\n    }\n    return triggered;\n  };\n  const filterTriggered = (items: PolystatModel) => {\n    const triggerCount = getTriggeredCount(items);\n    if (triggerCount > 0) {\n      for (let i = 0; i < items.members.length; i++) {\n        if (items.members[i].thresholdLevel === 0) {\n          items.members.splice(i, 1);\n        }\n      }\n      return items;\n    } else {\n      return null;\n    }\n  };\n  const getCompositeMetrics = (data: PolystatModel | null) => {\n    let dataToSort = data;\n    if (dataToSort && data && displayMode === 'triggered') {\n      dataToSort = filterTriggered(data);\n    }\n    if (dataToSort === null) {\n      return <>{tooltipDisplayTextTriggeredEmpty}</>;\n    }\n    const sortedMembers = multiSort(\n      dataToSort,\n      primarySortDirection,\n      primarySortByField,\n      secondarySortDirection,\n      secondarySortByField\n    );\n    return sortedMembers.map((item: PolystatModel, index: number) => {\n      return (\n        <tr key={index} style={{ color: item.color }}>\n          <td className={styles.tooltipName}>{item.displayName}</td>\n          {valueEnabled && <td className={styles.tooltipValue}>{item.valueFormatted}</td>}\n        </tr>\n      );\n    });\n  };\n\n  const generateContent = () => {\n    return (\n      <table style={{ fontFamily: tooltipFontFamily }} className={styles.tooltipTable}>\n        <thead>\n          {data && data.isComposite && getCompositeHeader(data)}\n          <tr>\n            {tooltipColumnHeadersEnabled && <th className={styles.tooltipNameHeading}>Name</th>}\n            {tooltipColumnHeadersEnabled && valueEnabled && <th className={styles.tooltipValueHeading}>Value</th>}\n          </tr>\n        </thead>\n        <tfoot>\n          {showTime && (\n            <tr>\n              <td className={styles.tooltipTime} colSpan={2}>\n                {dateTimeFormatWithAbbrevation(renderTime)}\n              </td>\n            </tr>\n          )}\n        </tfoot>\n        <tbody>\n          {data && data.isComposite ? (\n            getCompositeMetrics(data)\n          ) : (\n            <tr style={{ color: data?.color }}>\n              <td className={styles.tooltipName}>{data?.displayName}</td>\n              {valueEnabled && <td className={styles.tooltipValue}>{data?.valueFormatted}</td>}\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  };\n\n  // Generate content\n  return generateContent();\n};\n\nconst getTooltipStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css`\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z2};\n      padding: ${theme.spacing(1)};\n    `,\n    tooltipTable: css`\n      width: 100%;\n      color: ${theme.colors.text.primary};\n      height: auto;\n      padding: 10px;\n    `,\n    tooltipTime: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipNameHeading: css`\n      text-align: left;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipValueHeading: css`\n      text-align: right;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipCompositeHeading: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipName: css`\n      text-align: left;\n    `,\n    tooltipValue: css`\n      text-align: right;\n      padding-left: 15px;\n    `,\n  };\n};\n\nconst getSortDirection = (val: number) => {\n  switch (val) {\n    case 0:\n      return { direction: null, lowerCase: false };\n    case 1:\n      return { direction: 'asc', lowerCase: false };\n    case 2:\n      return { direction: 'desc', lowerCase: false };\n    case 3:\n      return { direction: 'asc', lowerCase: false };\n    case 4:\n      return { direction: 'desc', lowerCase: false };\n    case 5:\n      return { direction: 'asc', lowerCase: true };\n    case 6:\n      return { direction: 'desc', lowerCase: true };\n    default:\n      return { direction: 'asc', lowerCase: false };\n  }\n};\n","import { sortBy as lodashSortBy, toLower as lodashToLower, isNumber as lodashIsNumber } from 'lodash';\n\nfunction GetDecimalsForValue(value: any, panelDecimals: any): { decimals: number; scaledDecimals: any } {\n  if (lodashIsNumber(panelDecimals)) {\n    return { decimals: panelDecimals, scaledDecimals: null };\n  }\n\n  const delta = value / 2;\n  let dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n  const magn = Math.pow(10, -dec);\n  const norm = delta / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  // reduce starting decimals if not needed\n  if (Math.floor(value) === value) {\n    dec = 0;\n  }\n\n  const result = {\n    decimals: 0,\n    scaledDecimals: 0,\n  };\n  result.decimals = Math.max(0, dec);\n  result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n  return result;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width width in pixels the string must fit in\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidth(text: string, font: any, width: number, minFontPx: number, maxFontPx: number) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  if (w <= width) {\n    return maxFontPx;\n  }\n  // pad width by 10px\n  width = width - 20;\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    if (w < width) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width the width in pixels the string must fit in\n * @param {number} height the height in pixels\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidthAndHeight(\n  text: string,\n  font: any,\n  width: number,\n  height: number,\n  minFontPx: number,\n  maxFontPx: number\n) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  // need to pad the width: use 80% of the space (leave 10% padding on each side)\n  width = width * 0.95;\n  if (w <= width && maxFontPx <= height) {\n    return maxFontPx;\n  }\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    // has to fit within the width of the text area, and not exceed the height\n    if (w < width && fontSize <= height) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nfunction getTextWidth(text: string, font: string) {\n  // re-use canvas object for better performance\n  // intentional use of deprecated function (no widely implemented alternative)\n  // eslint-disable-next-line deprecation/deprecation\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    const metrics = context.measureText(text);\n    return metrics.width;\n  }\n  return 40; // unknown due to context failure\n}\n\nfunction RGBToHex(text: string) {\n  // check if in rgb notation\n  if (!text.startsWith('rgb')) {\n    return text;\n  }\n  let hex = '#FFFFFF';\n  try {\n    const a = text.split('(')[1].split(')')[0];\n    const b = a.split(',');\n    const c = b.map((x) => {\n      // For each array element\n      x = parseInt(x, 10).toString(16); // Convert to a base16 string\n      return x.length === 1 ? '0' + x : x; // Add zero if we get only one character\n    });\n    hex = '#' + c.join('');\n  } catch (e) {\n    return hex;\n  }\n  return hex;\n}\n\nfunction getTextOrValue(o: any) {\n  if (isNaN(o)) {\n    return o;\n  } else {\n    return Number(o);\n  }\n}\n\nfunction SortVariableValuesByField(options: any, sortField: string, sortOrder: number) {\n  if (sortOrder === 0) {\n    return options;\n  }\n  const sortType = Math.ceil(sortOrder / 2);\n  const reverseSort = sortOrder % 2 === 0;\n\n  switch (sortType) {\n    case 1: // Alphabetical Case Sensitive\n      options = lodashSortBy(options, sortField);\n      break;\n    case 2: // Numerical with sub-match\n      options = lodashSortBy(options, (item) => {\n        // if the content of the field to sort by is textual, check if there is a numerical area to sort by\n        if (isNaN(item[sortField])) {\n          const matchField = item[sortField];\n          const matches = matchField.match(/.*?(\\d+).*/);\n          if (!matches || matches.length < 2) {\n            return -1;\n          } else {\n            return parseInt(matches[1], 10);\n          }\n        } else {\n          return getTextOrValue(item[sortField]);\n        }\n      });\n      break;\n    case 3: // Alphabetical Case Insensitive\n      options = lodashSortBy(options, (item) => {\n        const itemContent = item[sortField];\n        if (isNaN(itemContent)) {\n          return lodashToLower(item[sortField]);\n        } else {\n          return itemContent;\n        }\n      });\n      break;\n  }\n\n  if (reverseSort) {\n    options = options.reverse();\n  }\n\n  return options;\n}\n\nconst roundValue = (num: number, decimals: number): number | null => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\nexport {\n  GetDecimalsForValue,\n  getTextSizeForWidth,\n  getTextSizeForWidthAndHeight,\n  getTextWidth,\n  RGBToHex,\n  SortVariableValuesByField,\n  getTextOrValue,\n  roundValue\n};\n","import { PolystatModel } from \"./types\";\nimport { getTextSizeForWidthAndHeight } from '../utils';\n\n\nexport const AutoFontScalar = (\n  fontFamily: string,\n  textAreaWidth: number,\n  textAreaHeight: number,\n  valueEnabled: boolean,\n  showTimestamp: boolean,\n  data: PolystatModel[]\n) => {\n  // TODO: 6 is VERY small, perhaps 10 as a min?\n  // A hint from the config could be used (max characters)\n  const minFont = 6;\n  const maxFont = 240;\n  // this ensures we have space between label and value\n  const maxLinesToDisplay = 2;\n  let showEllipses = false;\n  // number of characters to show on polygon\n  let numOfChars = 0;\n\n  // find the most text that will be displayed over all items\n  // displayName will have the \"processed\" name with Global Regex applied\n  let maxLabel = getMaxLabel(data);\n  // estimate how big of a font can be used\n  // Two lines of text must fit with vertical spacing included\n  // if it is too small, hide everything\n  let activeLabelFontSize = computeTextFontSize(\n    maxLabel,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  if (activeLabelFontSize < minFont) {\n    showEllipses = true;\n    numOfChars = 18;\n    maxLabel = maxLabel.substring(0, numOfChars + 2);\n    activeLabelFontSize = computeTextFontSize(\n      maxLabel,\n      fontFamily,\n      minFont,\n      maxFont,\n      maxLinesToDisplay,\n      textAreaWidth,\n      textAreaHeight\n    );\n    if (activeLabelFontSize < minFont) {\n      numOfChars = 10;\n      maxLabel = maxLabel.substring(0, numOfChars + 2);\n      activeLabelFontSize = computeTextFontSize(\n        maxLabel,\n        fontFamily,\n        minFont,\n        maxFont,\n        maxLinesToDisplay,\n        textAreaWidth,\n        textAreaHeight\n      );\n      if (activeLabelFontSize < minFont) {\n        numOfChars = 6;\n        maxLabel = maxLabel.substring(0, numOfChars + 2);\n        activeLabelFontSize = computeTextFontSize(\n          maxLabel,\n          fontFamily,\n          minFont,\n          maxFont,\n          maxLinesToDisplay,\n          textAreaWidth,\n          textAreaHeight\n        );\n      }\n    }\n  }\n\n  // same for the value and timestamp option, also check for sub metrics size in case of composite\n  let {maxValue, maxTimestamp} = getMaxValueAndTimestamp(data);\n  // assume no timestamp\n  let activeValueFontSize = computeTextFontSize(\n    maxValue,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  if (showTimestamp) {\n    // two lines to be displayed, sharing half of the normal space for the value\n    activeValueFontSize = computeTextFontSize(\n      maxValue,\n      fontFamily,\n      minFont,\n      maxFont,\n      2,\n      textAreaWidth,\n      (textAreaHeight * 0.67)\n    );\n  }\n  // timestamp shares the same space as the value, but is always smaller\n  let activeTimestampFontSize = computeTextFontSize(\n    maxTimestamp,\n    fontFamily,\n    minFont,\n    maxFont,\n    2,\n    textAreaWidth,\n    (textAreaHeight * 0.33)\n  );\n\n  if (activeTimestampFontSize < minFont) {\n    // do not render it, too small\n    activeTimestampFontSize = 0;\n  }\n\n  // NOTE: allow different sizes, the value could be displayed larger than the label\n  // value should never be larger than the label\n  //if (activeValueFontSize > activeLabelFontSize) {\n  //  activeValueFontSize = activeLabelFontSize;\n  //}\n  if (!valueEnabled) {\n    activeValueFontSize = 0;\n  }\n  return { activeLabelFontSize, activeValueFontSize, activeTimestampFontSize, showEllipses, numOfChars };\n};\n\n/**\n * Finds the longest text that to be displayed\n *\n * @param   {PolystatModel[]}  data  [PolystatModel data]\n *\n * @return  {string}                     [longest label as a string]\n */\nconst getMaxLabel = (data: PolystatModel[]): string => {\n  let maxLabel = '';\n  for (let i = 0; i < data.length; i++) {\n    let nameToCheck = data[i].name;\n    // use the displayName since it has been formatted\n    if (data[i].displayName !== '') {\n      nameToCheck = data[i].displayName;\n    }\n    if (nameToCheck.length > maxLabel.length) {\n      maxLabel = nameToCheck;\n    }\n  }\n  return maxLabel;\n};\n\n/**\n * Finds the longest value and timestamp text to be displayed\n *\n * @param   {PolystatModel[]} data [PolystatModel data]\n *\n * @return  {string[]} [value,timestamp]\n */\nconst getMaxValueAndTimestamp = (data: PolystatModel[]) => {\n  // same for the value, also check for sub metrics size in case of composite\n  // timestamp is also calculated here\n  let maxValue = '';\n  let maxTimestamp = '';\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].valueFormatted.length > maxValue.length) {\n      maxValue = data[i].valueFormatted;\n    }\n    if (data[i].timestampFormatted.length > maxTimestamp.length) {\n      maxTimestamp = data[i].timestampFormatted;\n    }\n    const subMetricCount = data[i].members.length;\n    if (subMetricCount > 0) {\n      let counter = 0;\n      while (counter < subMetricCount) {\n        const checkContent = data[i].members[counter].displayName + ': ' + data[i].members[counter].valueFormatted;\n        if (checkContent && checkContent.length > maxValue.length) {\n          maxValue = checkContent;\n        }\n        const checkCompositeTimestamp = data[i].members[counter].timestampFormatted;\n        if (checkCompositeTimestamp && checkCompositeTimestamp.length > maxTimestamp.length) {\n          maxTimestamp = checkCompositeTimestamp;\n        }\n        counter++;\n      }\n    }\n  }\n  return {maxValue, maxTimestamp};\n};\n\nconst computeTextFontSize = (\n  text: string,\n  font: string,\n  minFont: number,\n  maxFont: number,\n  linesToDisplay: number,\n  textAreaWidth: number,\n  textAreaHeight: number\n): number => {\n  return getTextSizeForWidthAndHeight(\n    text,\n    `?px ${font}`,\n    textAreaWidth,\n    textAreaHeight / linesToDisplay, // multiple lines of text\n    minFont,\n    maxFont\n  );\n};\n","import React, { useEffect, createRef, useCallback } from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useStyles2, Portal, useTheme2 } from '@grafana/ui';\nimport { symbol as d3symbol, symbolCircle, symbolSquare } from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\n\nimport { Gradients } from './gradients/Gradients';\nimport { LayoutManager } from './layout/layoutManager';\nimport { PolystatOptions, PolygonShapes, PolystatModel, DisplayModes, TimestampPositions } from './types';\n\nimport { getErrorMessageStyles, getNoTriggerTextStyles, getSVGPathStyles, getSVGStyles, getWrapperStyles } from './styles';\nimport { Tooltip } from './tooltips/Tooltip';\nimport { AutoFontScalar } from './auto_font_scaler';\nimport { GetAlignments } from './alignment';\n\nexport const Polystat: React.FC<PolystatOptions> = (options) => {\n  const divStyles = useStyles2(getWrapperStyles);\n  const svgStyles = useStyles2(getSVGStyles);\n  const svgPathStyles = useStyles2(getSVGPathStyles);\n  const noTriggerTextStyles = useStyles2(getNoTriggerTextStyles);\n  const errorMessageStyles = useStyles2(getErrorMessageStyles);\n  const tooltipTheme = useTheme2().isDark ? 'dark' : 'light';\n  // used to change/animate text in polygon\n  const [animationRefs, setAnimationRefs] = React.useState([] as any);\n  const [animationTimestampRefs, setAnimationTimestampRefs] = React.useState([] as any);\n  // tracks which metric to display during animation of a composite\n  const [animationMetricIndexes, setAnimationMetricIndexes] = React.useState([] as any);\n  const [animatedItems, setAnimatedItems] = React.useState<number[]>([]);\n\n  const updateAnimation = (data: PolystatModel[]) => {\n    if (data.length > 0) {\n      const newAnimationRefs = [];\n      const newAnimationTimestampRefs = [];\n      const newAnimationMetricIndexes = [];\n      for (let i = 0; i < data!.length; i++) {\n        newAnimationRefs.push(createRef());\n        newAnimationTimestampRefs.push(createRef());\n        newAnimationMetricIndexes.push(0);\n      }\n      if (newAnimationRefs.length > 0) {\n        if (animationRefs.length !== newAnimationRefs.length) {\n          setAnimationRefs(newAnimationRefs);\n          setAnimationTimestampRefs(newAnimationTimestampRefs);\n          setAnimationMetricIndexes(newAnimationMetricIndexes);\n        }\n      }\n    }\n  };\n\n  /*\n    This is the animation method that will cycle through the metrics for a composite\n   */\n  const animateComposite = useCallback(() => {\n    for (let i = 0; i < animatedItems.length; i++) {\n      let index = animatedItems[i];\n      let metricIndex = animationMetricIndexes[index];\n      // TODO: future to implement per composite\n\n      if (options.globalShowValueEnabled && (animationRefs.length > 0 && animationRefs[index].current)) {\n        if (options.processedData) {\n          const item = options.processedData[index];\n          const val = formatCompositeValueAndTimestamp(metricIndex, item, options.globalDisplayTextTriggeredEmpty)[0];\n          if (animationRefs[index].current.innerHTML !== null) {\n            animationRefs[index].current.innerHTML = val;\n          }\n        }\n      }\n      if (options.globalShowTimestampEnabled && (animationTimestampRefs.length > 0 && animationTimestampRefs[index].current)) {\n        if (options.processedData) {\n          const item = options.processedData[index];\n          const ts = formatCompositeValueAndTimestamp(metricIndex, item, options.globalDisplayTextTriggeredEmpty)[1];\n          if (animationTimestampRefs[index].current.innerHTML !== null) {\n            animationTimestampRefs[index].current.innerHTML = ts;\n          }\n        }\n      }\n      metricIndex++;\n      if (options.processedData && options.processedData[index] && options.processedData[index].members.length) {\n        metricIndex %= options.processedData[index].members.length;\n      }\n      animationMetricIndexes[index] = metricIndex;\n      setAnimationMetricIndexes(animationMetricIndexes);\n    }\n  }, [\n    animationMetricIndexes,\n    animationRefs,\n    animationTimestampRefs,\n    animatedItems,\n    options.processedData,\n    options.globalDisplayTextTriggeredEmpty,\n    options.globalShowTimestampEnabled,\n    options.globalShowValueEnabled,\n  ]);\n\n  /*\n    Determine which items should be animated\n  */\n\n  useEffect(() => {\n    let shouldAnimate = false;\n    const animate: number[] = [];\n    options.processedData!.map((item, index) => {\n      if (item.isComposite && item.showValue) {\n        shouldAnimate = true;\n        animate.push(index);\n      }\n    });\n    // check array content equality\n    if (JSON.stringify(animatedItems) !== JSON.stringify(animate)) {\n      if (options.processedData) {\n        updateAnimation(options.processedData);\n        setAnimatedItems(animate);\n      }\n    }\n    let tick: NodeJS.Timeout;\n    if (shouldAnimate) {\n      let speed = parseInt(options.compositeConfig.animationSpeed, 10);\n      if (speed < 200 || isNaN(speed)) {\n        console.log(`WARNING: speed in configuration is too fast, setting to 200ms`);\n        speed = 200;\n      }\n      tick = setInterval(animateComposite, speed);\n    }\n    return () => {\n      clearInterval(tick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.compositeConfig.animationSpeed, options.processedData, animationRefs]);\n\n  if (options.processedData && options.processedData.length === 0) {\n    return <div className={noTriggerTextStyles}>{options.globalDisplayTextTriggeredEmpty}</div>;\n  }\n  if (!options.autoSizeColumns && !options.autoSizeRows) {\n    const limit = options.layoutNumColumns * options.layoutNumRows;\n    if (limit < options.processedData!.length) {\n      return (\n        <div className={errorMessageStyles}>\n          Not enough rows and columns for data. There are {options.processedData!.length} items to display, and only{' '}\n          {limit} places allocated.{' '} See the Display Limit setting in category Layout{' '}\n        </div>\n      );\n    }\n  }\n\n  const lm = new LayoutManager(\n    options.panelWidth,\n    options.panelHeight,\n    options.layoutNumColumns,\n    options.layoutNumRows,\n    options.layoutDisplayLimit,\n    options.autoSizePolygons,\n    options.globalShape\n  );\n  const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  // determine how many rows and columns are going to be generated\n  lm.generatePossibleColumnAndRowsSizes(options.autoSizeColumns, options.autoSizeRows, options.processedData!.length);\n  // to determine the radius, the actual number of rows and columns that will be used needs to be calculated\n  lm.generateActualColumnAndRowUsage(options.processedData, options.layoutDisplayLimit);\n  // next the radius can be determined from actual rows and columns being used\n  let radius = 0;\n  if (!options.autoSizePolygons && options.globalPolygonSize) {\n    if (options.globalPolygonSize < 0 || isNaN(options.globalPolygonSize)) {\n      // force min size if below zero or NaN\n      options.globalPolygonSize = 50;\n      console.log(`WARNING: polygon size is manually set to an invalid value, forcing to 50px`);\n    } else {\n      lm.setRadius(options.globalPolygonSize);\n    }\n    radius = options.globalPolygonSize;\n  } else {\n    radius = lm.generateRadius(options.globalShape);\n  }\n\n  // using the known number of columns and rows that can be used in addition to the radius,\n  // generate the points to be filled\n  const calculatedPoints = lm.generatePoints(options.processedData, options.layoutDisplayLimit, options.globalShape);\n  const aHexbin = hexbin()\n    .radius(radius)\n    .extent([\n      [0, 0],\n      [options.panelWidth, options.panelHeight],\n    ]);\n  const { diameterX, diameterY } = lm.getDiameters();\n  const { xoffset, yoffset } = lm.getOffsets(options.globalShape, options.processedData!.length);\n\n  // compute text area size (used to calculate the fontsize)\n  const textAreaWidth = diameterX;\n  const textAreaHeight = diameterY / 2; // Top and bottom of hexagon are not used\n  // symbols use the area for their size\n  let innerArea = diameterX * diameterY;\n  // use the smallest of diameterX or Y\n  if (diameterX < diameterY) {\n    innerArea = diameterX * diameterX;\n  }\n  if (diameterY < diameterX) {\n    innerArea = diameterY * diameterY;\n  }\n  // square and circle do not use this\n  const symbol = d3symbol().size(innerArea);\n\n  let customShape: any;\n  switch (options.globalShape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      customShape = aHexbin.hexagon(radius);\n      break;\n    case PolygonShapes.CIRCLE:\n      customShape = symbol.type(symbolCircle);\n      break;\n    case PolygonShapes.SQUARE:\n      customShape = symbol.type(symbolSquare);\n      break;\n    default:\n      customShape = aHexbin.hexagon(radius);\n      break;\n  }\n\n  const resolveClickThroughTarget = (d: PolystatModel): string => {\n    let clickThroughTarget = '_self';\n    if (d.newTabEnabled) {\n      clickThroughTarget = '_blank';\n    }\n    // when a custom clickthrough is enabled, override the default _self\n    if (d.customClickthroughTargetEnabled) {\n      clickThroughTarget = d.customClickthroughTarget;\n    }\n    return clickThroughTarget;\n  };\n\n  const getCoords = (i: number) => {\n    const xValue = calculatedPoints[i].x;\n    const yValue = calculatedPoints[i].y;\n    return { x: xValue, y: yValue };\n  };\n\n  // calculate the fontsize based on the shape and the text\n  let activeLabelFontSize = options.globalFontSize;\n  // font sizes are independent for label and values\n  let activeValueFontSize = options.globalFontSize;\n  // timestamp sizing\n  let activeTimestampFontSize = options.globalShowTimestampFontSize;\n  let showEllipses = false;\n  let numOfChars = options.ellipseCharacters;\n\n  let hasShowTimeStampEnabled = options.globalShowTimestampEnabled;\n  let hasShowValueEnabled = options.globalShowValueEnabled;\n\n  if (options.globalAutoScaleFonts) {\n    /*\n    // check if any item has an override with show timestamp enabled\n    if (options.processedData && !hasShowTimeStampEnabled) {\n      for (let i = 0; i < options.processedData.length; i++) {\n        const item = options.processedData[i];\n        console.log(item);\n        if (item.showTimestamp) {\n          hasShowTimeStampEnabled = true;\n          break;\n        }\n        // check members\n        if (item.members) {\n          for (let j = 0; i < item.members.length; j++) {\n            const aMember = item.members[j];\n            if (aMember.showTimestamp) {\n              hasShowTimeStampEnabled = true;\n              break;\n            }\n          }\n        }\n        // break out if it is true at any point\n        if (hasShowTimeStampEnabled) {\n          break;\n        }\n      }\n    }\n    */\n    /*\n    if (options.processedData) {\n      for (let i = 0; i < options.processedData.length; i++) {\n        const item = options.processedData[i];\n        if (item.showValue) {\n          hasShowValueEnabled = true;\n          break;\n        }\n        // check members\n        if (item.members) {\n          for (let j = 0; i < item.members.length; j++) {\n            const aMember = item.members[j];\n            if (aMember.showValue) {\n              hasShowValueEnabled = true;\n              break;\n            }\n          }\n        }\n        // break out if it is true at any point\n        if (hasShowValueEnabled) {\n          break;\n        }\n      }\n    }\n    */\n\n    const result = AutoFontScalar(\n      options.globalTextFontFamily,\n      textAreaWidth,\n      textAreaHeight,\n      hasShowValueEnabled,\n      hasShowTimeStampEnabled,\n      options.processedData!\n    );\n    activeLabelFontSize = result.activeLabelFontSize;\n    activeValueFontSize = result.activeValueFontSize;\n    activeTimestampFontSize = result.activeTimestampFontSize;\n    showEllipses = result.showEllipses;\n    numOfChars = result.numOfChars;\n  }\n\n  const alignments = GetAlignments(\n    options.globalShape,\n    diameterX,\n    diameterY,\n    textAreaHeight,\n    activeValueFontSize,\n    activeLabelFontSize,\n    activeTimestampFontSize,\n    hasShowTimeStampEnabled\n  );\n\n  let timestampLineSpacing = Math.ceil(activeValueFontSize * 0.35);\n  if (activeValueFontSize > activeTimestampFontSize) {\n    timestampLineSpacing = Math.ceil(activeTimestampFontSize * 0.35);\n  }\n\n  // this MUST be unique for gradients to work properly\n  const gradientId = `polystat_${options.panelId}_` + Math.floor(Math.random() * 10000).toString();\n\n  const drawShape = (index: number, shape: PolygonShapes) => {\n    let fillColor = options.processedData![index].color;\n    if (options.globalGradientsEnabled) {\n      // TODO: safari needs the location.href\n      fillColor = `url(#${gradientId}_linear_gradient_state_data_${index})`;\n    }\n    const useRadius = lm.generateRadius(options.globalShape);\n    const coords = getCoords(index);\n\n    switch (shape as any) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return (\n          <path\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${options.panelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n      case PolygonShapes.CIRCLE:\n        return (\n          <circle\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${options.panelId}`}\n            className={svgPathStyles}\n            cx={coords.x}\n            cy={coords.y}\n            r={useRadius}\n            fill={fillColor}\n          />\n        );\n      case PolygonShapes.SQUARE:\n        return (\n          <rect\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${options.panelId}`}\n            className={svgPathStyles}\n            x={coords.x}\n            y={coords.y}\n            height={useRadius * 2}\n            width={useRadius * 2}\n            fill={fillColor}\n          />\n        );\n      default:\n        return (\n          <path\n            data-tooltip-id={`polystat-tooltip-${options.panelId}`}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${options.panelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n    }\n  };\n\n  // allows the polygon to fill the horizontal space if the manually specified number of columns has not been used\n  let marginLeft = margin.left;\n  if ((!options.autoSizeColumns) && (radius) && (lm.maxColumnsUsed < options.layoutNumColumns)) {\n    let difference = options.layoutNumColumns - lm.maxColumnsUsed;\n    marginLeft += radius * difference;\n  }\n  // allows the polygon to fill the vertical space if the manually specified number of rows has not been used\n  let marginTop = margin.top;\n  if ((!options.autoSizeRows) && (radius) && (lm.maxRowsUsed < options.layoutNumRows)) {\n    let difference = options.layoutNumRows - lm.maxRowsUsed;\n    // always starts at zero, skip offset for first row used\n    marginTop += radius * (difference - 1);\n  }\n\n  const getLabelContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    let verticalAlignment = alignments.labelWithValueTextAlignment;\n    if (!item.showValue) {\n      verticalAlignment = alignments.labelOnlyTextAlignment;\n    }\n    return (\n      <text\n        className=\"toplabel\"\n        x={coords.x + alignments.labelTextAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeLabelFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {\n          item.showName &&\n          getTextToDisplay(\n            options.globalAutoScaleFonts,\n            options.ellipseEnabled,\n            options.ellipseCharacters,\n            showEllipses,\n            numOfChars,\n            item.name,\n            item.displayName\n          )}\n      </text>\n    );\n  };\n\n  const getValueContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    // default\n    let verticalAlignment = alignments.valueWithLabelTextAlignment;\n    // check if showTimeStamp is enabled\n    // TODO: the show value should be inside the item also\n    if (options.globalShowTimestampEnabled) {\n      // TODO: the offset should be put inside the item also to handle overrides and composites correctly\n      if (isNaN(options.globalShowTimestampYOffset)) {\n        options.globalShowTimestampYOffset = 0;\n      }\n      switch (options.globalShowTimestampPosition) {\n        case TimestampPositions.ABOVE_VALUE:\n          verticalAlignment = alignments.valueWithLabelTextAlignment;\n          break;\n        case TimestampPositions.BELOW_VALUE:\n          verticalAlignment = alignments.timestampAlignment + timestampLineSpacing;\n          break;\n      }\n    }\n    return (\n      <text\n        ref={animationRefs[index]}\n        className={`valueLabel${index}`}\n        x={coords.x + alignments.labelValueAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeValueFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {(options.globalShowValueEnabled) &&\n          (item.isComposite\n            ? formatCompositeValueAndTimestamp(0, item, options.globalDisplayTextTriggeredEmpty)[0]\n            : item.valueFormatted)}\n      </text>\n    );\n  };\n\n  const getTimestampForValueContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    // TODO: the offset should be put inside the item also to handle overrides and composites correctly\n    if (isNaN(options.globalShowTimestampYOffset)) {\n      options.globalShowTimestampYOffset = 0;\n    }\n    let verticalAlignment = alignments.timestampAlignment - timestampLineSpacing + options.globalShowTimestampYOffset;\n    switch (options.globalShowTimestampPosition) {\n      case TimestampPositions.ABOVE_VALUE:\n        if (item.showValue) {\n          verticalAlignment = alignments.timestampAlignment - timestampLineSpacing + options.globalShowTimestampYOffset;\n        } else {\n          // the below calc can be used when value is not displayed\n          verticalAlignment = alignments.valueWithLabelTextAlignment + options.globalShowTimestampYOffset;\n        }\n        break;\n      case TimestampPositions.BELOW_VALUE:\n        verticalAlignment = alignments.valueWithLabelTextAlignment + options.globalShowTimestampYOffset;\n        break;\n    }\n    return (\n      <text\n        ref={animationTimestampRefs[index]}\n        className={`timestampLabel${index}`}\n        x={coords.x + alignments.labelValueAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeTimestampFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {options.globalShowTimestampEnabled &&\n          (item.isComposite\n            ? formatCompositeValueAndTimestamp(0, item, options.globalDisplayTextTriggeredEmpty)[1]\n            : item.timestampFormatted)}\n      </text>\n    )\n  };\n\n  return (\n    <div className={divStyles}>\n      <svg\n        className={svgStyles}\n        width={options.panelWidth}\n        height={options.panelHeight}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`${xoffset},${yoffset},${options.panelWidth},${options.panelHeight}`}\n      >\n\n        <g transform={`translate(${marginLeft},${marginTop})`}>\n          <Gradients gradientId={gradientId} data={options.processedData} />\n\n          {options.processedData!.map((item, index) => {\n            const coords = getCoords(index);\n            const useUrl = item.sanitizeURLEnabled ? item.sanitizedURL : item.clickThrough;\n            // determine if a target is required\n            const resolvedClickthroughTarget = resolveClickThroughTarget(item);\n            let clickableUrl: JSX.Element;\n            // only add target attribute when there is one specified\n            if ((resolvedClickthroughTarget.length > 0) && (useUrl.length > 0)) {\n              clickableUrl = <a target={resolvedClickthroughTarget} href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            } else {\n              clickableUrl = <a href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            }\n            return (\n              <>\n                {useUrl.length > 0 && clickableUrl ? (\n                  clickableUrl\n                ) : (\n                  drawShape(index, options.globalShape)\n                )}\n                {getLabelContent(item, index, coords)}\n                {getValueContent(item, index, coords)}\n                {getTimestampForValueContent(item, index, coords)}\n\n              </>\n            );\n          })}\n        </g>\n      </svg>\n      {options.globalTooltipsEnabled && (\n        <Portal>\n          <ReactTooltip\n            style={{\n              boxShadow: 'rgba(1, 4, 9, 0.75) 0px 4px 8px 0px',\n            }}\n            id={`polystat-tooltip-${options.panelId}`}\n            place={'bottom'} // TODO: make this configurable\n            float={true}\n            variant={tooltipTheme} // TODO: this could be made configurable (auto, or specified)\n            opacity={1} // TODO: make this configurable\n            clickable={false} // TODO: make this configurable, extend with per-line clickthrough\n            render={({ content }) => {\n              // generate tooltip for item\n              if (content) {\n                const contentIndex = parseInt(content, 10);\n                return (\n                  <Tooltip\n                    data={options.processedData![contentIndex]}\n                    renderTime={options.renderTime!}\n                    showTime={options.globalTooltipsShowTimestampEnabled}\n                    valueEnabled={options.globalShowValueEnabled}\n                    tooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n                    primarySortByField={options.tooltipPrimarySortByField}\n                    primarySortDirection={options.tooltipPrimarySortDirection}\n                    secondarySortByField={options.tooltipSecondarySortByField}\n                    secondarySortDirection={options.tooltipSecondarySortDirection}\n                    displayMode={options.tooltipDisplayMode}\n                    tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n                    tooltipFontFamily={options.globalTooltipsFontFamily}\n                  />\n                )\n              }\n              return (<></>)\n            }} />\n        </Portal>\n\n      )}\n    </div>\n  );\n};\n\nexport const getTextToDisplay = (\n  autoSizeFonts: boolean,\n  ellipseEnabled: boolean,\n  ellipseCharacters: number,\n  showEllipses: boolean,\n  numOfChars: number,\n  text: string,\n  displayName: string\n) => {\n  if (displayName !== '') {\n    text = displayName;\n  }\n  if (showEllipses) {\n    if (text.length > numOfChars) {\n      return text.substring(0, numOfChars) + '...';\n    }\n  }\n  if (!autoSizeFonts && ellipseEnabled && text.length > ellipseCharacters) {\n    return text.substring(0, ellipseCharacters) + '...';\n  }\n  return text;\n};\n\n/*\n              The element #{content} is currently not active.\n              <br />\n              Relevant attribute: {activeAnchor?.getAttribute('data-some-relevant-attr') || 'not set'}\n            </span>\n*/\n\nconst buildTriggerCache = (item: any) => {\n  let triggerCache = [];\n  for (let i = 0; i < item.members.length; i++) {\n    const aMember = item.members[i];\n    if (aMember.thresholdLevel > 0) {\n      // add to list\n      const cachedMemberState = {\n        index: i,\n        name: aMember.name,\n        value: aMember.value,\n        thresholdLevel: aMember.thresholdLevel,\n      };\n      triggerCache.push(cachedMemberState);\n    }\n  }\n  // sort it\n  triggerCache = lodashOrderBy(triggerCache, ['thresholdLevel', 'value', 'name'], ['desc', 'desc', 'asc']);\n  return triggerCache;\n};\n\nconst formatCompositeValueAndTimestamp = (frames: number, item: PolystatModel, globalDisplayTextTriggeredEmpty: string) => {\n  // TODO: if just one value, could speed this up\n  let content = item.valueFormatted;\n  let timestampContent = item.timestampFormatted;\n  const len = item.members.length;\n  if (len > 0) {\n    let triggeredIndex = -1;\n    if (item.displayMode === DisplayModes[0].value) {\n      triggeredIndex = frames % len;\n    } else {\n      if (typeof item.triggerCache === 'undefined') {\n        item.triggerCache = buildTriggerCache(item);\n      }\n      if (item.triggerCache.length > 0) {\n        const z = frames % item.triggerCache.length;\n        triggeredIndex = item.triggerCache[z].index;\n      } else {\n        // nothing triggered        //triggeredIndex = frames % len;\n        return [globalDisplayTextTriggeredEmpty, ''];\n      }\n    }\n    const aMember = Object.assign({}, item.members[triggeredIndex]);\n    content = aMember.name + ': ' + aMember.valueFormatted;\n    timestampContent = aMember.timestampFormatted;\n  }\n  return [textUtil.sanitize(content), timestampContent];\n};\n","import { PolygonShapes } from \"./types\";\n\nexport const GetAlignments = (\n  shape: PolygonShapes,\n  diameterX: number,\n  diameterY: number,\n  textAreaHeight: number,\n  activeValueFontSize: number,\n  activeLabelFontSize: number,\n  activeTimestampFontSize: number,\n  showTimestampEnabled: boolean,\n) => {\n  let valueWithLabelTextAlignment = textAreaHeight / 2 / 2 + activeValueFontSize / 2;\n  let valueOnlyTextAlignment = activeValueFontSize / 2;\n  let labelWithValueTextAlignment = -(textAreaHeight / 2 / 2) + activeLabelFontSize / 2;\n  let labelOnlyTextAlignment = activeLabelFontSize / 2;\n  let labelTextAlignmentX = 0;\n  let labelValueAlignmentX = 0;\n  let valueWithTimestampAlignment = valueWithLabelTextAlignment / 2;\n  let timestampAlignment = textAreaHeight * 0.33 / 2 + activeTimestampFontSize / 2;\n  switch (shape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // adjust value down\n        valueWithLabelTextAlignment = textAreaHeight * 0.67 / 2 + activeValueFontSize / 2;\n      }\n      break;\n    case PolygonShapes.CIRCLE:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // adjust value down\n        valueWithLabelTextAlignment = textAreaHeight * 0.67 / 2 + activeValueFontSize / 2;\n      }\n      break;\n    case PolygonShapes.SQUARE:\n      // square is \"centered\" at top left, not the center\n\n      // compute alignment for each text element, base coordinate is in the top left corner (text is anchored at its bottom):\n      // - Value text (bottom text) will be aligned (positively i.e. lower) in the middle of the bottom half of the text area\n      // - Label text (top text) will be aligned in the middle of the top half of the text area\n      valueWithLabelTextAlignment = diameterY / 1.5 + activeValueFontSize / 2;\n      valueOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      labelWithValueTextAlignment = diameterY / 4 + activeLabelFontSize / 2;\n      // alignment is equal to the half of height plus a fraction of the fontSize\n      labelOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      //\n      labelTextAlignmentX = diameterX / 2;\n      labelValueAlignmentX = diameterX / 2;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // line spacing offset is needed\n        timestampAlignment = diameterY / 1.5 - (activeTimestampFontSize * 0.67);\n      }\n      break;\n  }\n  return {\n    valueWithLabelTextAlignment,\n    valueOnlyTextAlignment,\n    valueWithTimestampAlignment,\n    labelWithValueTextAlignment,\n    labelOnlyTextAlignment,\n    labelTextAlignmentX,\n    labelValueAlignmentX,\n    timestampAlignment,\n  };\n};\n","import { DataFrame, Field, FieldType, FieldConfig, ArrayVector, Labels } from '@grafana/data';\n\n// Inserts a \"Time\" field into each dataframe if it is missing\n// the value of the timestamp is \"now\"\n// any field without a numeric type is considered a label\nexport function InsertTime(data: DataFrame[]): DataFrame[] {\n  // TODO: time to insert can be taken from the first row if there are timeseries already\n  // for now, just insert now\n  const timeToInsert = Date.now();\n  const newData: DataFrame[] = [];\n  for (const frame of data) {\n    const newFrame: DataFrame = {\n      ...frame,\n      meta: {...frame.meta},\n      fields: [], // clear the fields\n    };\n    const hasTimestamp = frameHasTimestamp(frame);\n    // rebuild a new frame with labels on the numerical fields\n    for (const aField of frame.fields) {\n      if (aField.type === FieldType.number) {\n        if (!hasTimestamp) {\n          const copiedField = Object.assign({}, aField);\n          // need to get the number of rows of data for this frame\n          const aFieldValues = copiedField.values.toArray();\n          const rowsOfField = aFieldValues.length;\n          for (let rowNum = 0; rowNum < rowsOfField; rowNum++) {\n            // only create a new field when the rowValue is not null\n            if (aFieldValues[rowNum] !== null) {\n              if (aField.state) {\n                copiedField.state = Object.assign({}, aField.state);\n              }\n              newFrame.fields.push({\n                ...copiedField,\n                labels: flattenLabels(frame, rowNum),\n                values: new ArrayVector([getValueOfField(copiedField, rowNum)]),\n              });\n            }\n          }\n        } else {\n          // copy the object\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    if (!hasTimestamp) {\n      const z = new ArrayVector();\n      z.add(timeToInsert);\n      const fc: FieldConfig = {};\n      const timeField: Field = {\n        name: 'Time',\n        type: FieldType.time,\n        values: z,\n        config: fc,\n      };\n      // insert it\n      newFrame.fields.push(timeField);\n    } else {\n      // time field already exists\n      // copy all non-number fields from original frame\n      for (const aField of frame.fields) {\n        if (aField.type !== FieldType.number) {\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    newData.push(newFrame);\n  }\n\n  return newData;\n}\n\nfunction frameHasTimestamp(frame: DataFrame): boolean {\n  for (let j = 0; j < frame.fields.length; j++) {\n    const aField = frame.fields[j];\n    if (aField.type === FieldType.time) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction flattenLabels(frame: DataFrame, rowNum: number) {\n  let labelIndexes = [];\n  const numFields = frame.fields.length;\n\n  // first get the fields of type string\n  for (let j = 0; j < numFields; j++) {\n    if (frame.fields[j].type === FieldType.string) {\n      labelIndexes.push(j);\n    }\n  }\n  let labelWithValues = getLabelValues(frame, labelIndexes, rowNum);\n  return labelWithValues;\n}\n\nfunction getValueOfField(field: Field, index: number) {\n  const bufferValue = field.values.toArray()[index];\n  return bufferValue;\n}\n\nfunction getLabelValues(frame: DataFrame, indexes: any[], rowNum: number) {\n  let labelAndValue = {};\n  for (let index = 0; index < indexes.length; index++) {\n    let indexValue = indexes[index];\n    let aField = frame.fields[indexValue];\n    if (aField.type !== FieldType.number) {\n      let value = getValueOfField(aField, rowNum);\n      // TODO: fix this...\n      // @ts-ignore\n      labelAndValue[aField.name] = value;\n    }\n  }\n  return labelAndValue;\n}\n","import { DEFAULT_NO_DATA_COLOR_HEX } from '../components/defaults';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { PolystatModel } from '../components/types';\n/*\n\nThis supports ranged states\n\nThresholds are expected to be sorted by ascending value, where\n  T0 = lowest decimal value, any state\n  TN = highest decimal value, any state\n\nInitial state is set to \"ok\"\n\nA comparison is made using \"greater than or equal to\" against the value\n  If value >= thresholdValue state = X\n\nComparisons are made in reverse order, using the range between the Nth (inclusive) threshold and N+1 (exclusive)\n  InclusiveValue = T(n).value\n  ExclusiveValue = T(n+1).value\n\nWhen there is no n+1 threshold, the highest value threshold T(n), a simple inclusive >= comparison is made\n\n  Example 1: (typical linear)\n    T0 - 5, ok\n    T1 - 10, warning\n    T2 - 20, critical\n\n  Value >= 20 (Value >= T2)\n  10 <= Value < 20  (T1 <= Value < T2)\n  5 <= Value < 10   (T0 <= Value < T1)\n\n  Example 2: (reverse linear)\n    T0 - 50, critical\n    T1 - 90, warning\n    T2 - 100, ok\n\n  Value >= 100\n  90 <= value < 100\n  50 <= value < 90\n\n  Example 3: (bounded)\n    T0 - 50, critical\n    T1 - 60, warning\n    T2 - 70, ok\n    T3 - 80, warning\n    T4 - 90, critical\n\n    Value >= 90\n    80 <= Value < 90\n    70 <= Value < 80\n    60 <= Value < 70\n    50 <= Value < 60\n\nThe \"worst\" state is returned after checking every threshold range\n\n*/\nfunction getWorstSeries(series1: PolystatModel, series2: PolystatModel): any {\n  let worstSeries = series1;\n  const series1ThresholdLevel = series1.thresholdLevel;\n  const series2ThresholdLevel = series2.thresholdLevel;\n\n  if (series1ThresholdLevel === undefined || series2ThresholdLevel === undefined) {\n    return worstSeries;\n  }\n\n  // State 3 is Unknown and is not be worse than CRITICAL (state 2)\n  if (series2ThresholdLevel > series1ThresholdLevel) {\n    // series2 has higher threshold violation\n    worstSeries = series2;\n  }\n  if (series1ThresholdLevel === 3) {\n    // series1 is in state unknown, check if series2 is in state 1 or 2\n    switch (series2ThresholdLevel) {\n      case 1:\n        worstSeries = series2;\n        break;\n      case 2:\n        worstSeries = series2;\n        break;\n    }\n  }\n  return worstSeries;\n}\n\nfunction getThresholdLevelForValue(\n  thresholds: PolystatThreshold[] | undefined,\n  value: number | null,\n  defaultColor: string\n): { thresholdLevel: number; color: string } {\n  let currentColor = defaultColor;\n  if (value === null) {\n    return { thresholdLevel: 3, color: DEFAULT_NO_DATA_COLOR_HEX }; // No Data\n  }\n  // assume UNKNOWN state\n  let currentState = -1;\n  // skip evaluation when there are no thresholds\n  if (typeof thresholds === 'undefined') {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  // test \"Nth\" threshold\n  const thresholdCount = thresholds.length;\n  if (thresholdCount === 0) {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  const aThreshold = thresholds[thresholdCount - 1];\n  if (value >= aThreshold.value) {\n    currentState = aThreshold.state;\n    currentColor = aThreshold.color;\n  }\n  // if there's one threshold, just return the result\n  if (thresholds.length === 1) {\n    return { thresholdLevel: currentState, color: currentColor };\n  }\n  // now test in reverse\n  for (let i = thresholdCount - 1; i > 0; i--) {\n    const upperThreshold = thresholds[i];\n    const lowerThreshold = thresholds[i - 1];\n    if (lowerThreshold.value <= value && value < upperThreshold.value) {\n      if (currentState < lowerThreshold.state) {\n        currentState = lowerThreshold.state;\n        currentColor = lowerThreshold.color;\n      }\n    }\n  }\n  // last check, if currentState is not set, and there is a lower threshold, use that value (inclusive range up to T1)\n  if (currentState === -1) {\n    currentState = thresholds[0].state;\n    currentColor = thresholds[0].color;\n  }\n  return { thresholdLevel: currentState, color: currentColor };\n}\n\nexport { getWorstSeries, getThresholdLevelForValue };\n","/**\n * Convert model data to url params\n */\nimport { stringToJsRegex } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nclass ClickThroughTransformer {\n  static cellName = /\\${__cell_name}/;\n  static cellValue = /\\${__cell}/;\n  static cellRawValue = /\\${__cell:raw}/;\n\n  static nthCellName = /\\${__cell_name_(\\d+)}/;\n  static nthCellValue = /\\${__cell_(\\d+)}/;\n  static nthCellRawValue = /\\${__cell_(\\d+):raw}/;\n\n  static compositeNameRegex = /\\${__composite_name}/;\n\n  static transformSingleMetric(index: number, url: string, data: PolystatModel[]): string {\n    if (isNaN(index)) {\n      return url;\n    }\n    const item = data[index];\n    // check if url contains any dereferencing\n    while (url.match(this.cellName)) {\n      // replace with series name\n      url = url.replace(this.cellName, item.name);\n    }\n    while (url.match(this.cellValue)) {\n      // replace with formatted value, and encoded\n      url = url.replace(this.cellValue, encodeURIComponent(item.valueFormatted));\n    }\n    while (url.match(this.cellRawValue)) {\n      // replace with value\n      url = url.replace(this.cellRawValue, item.value.toString());\n    }\n    return url;\n  }\n\n  static transformNthMetric(url: string, data: PolystatModel[]) {\n    while (url.match(this.nthCellName)) {\n      const matched = url.match(this.nthCellName);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthName = data[captureIndex].name;\n        // replace with series name\n        url = url.replace(this.nthCellName, nthName);\n      }\n    }\n    while (url.match(this.nthCellValue)) {\n      const matched = url.match(this.nthCellValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].valueFormatted;\n        // replace with formatted value encoded\n        url = url.replace(this.nthCellValue, encodeURIComponent(nthValue));\n      }\n    }\n    while (url.match(this.nthCellRawValue)) {\n      const matched = url.match(this.nthCellRawValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].value;\n        // replace with raw value\n        url = url.replace(this.nthCellRawValue, nthValue.toString());\n      }\n    }\n    return url;\n  }\n\n  static transformComposite(name: string, url: string) {\n    // check if url contains any dereferencing\n    while (url.match(this.compositeNameRegex)) {\n      // replace with series name\n      url = url.replace(this.compositeNameRegex, name);\n    }\n    return url;\n  }\n\n  static transformByRegex(pattern: string, item: PolystatModel, url: string) {\n    // detect regex capture groups from override.metricName and replace any occurrences in the click-through\n    const regex = stringToJsRegex(pattern);\n    const matches = item.name.match(regex);\n    if (matches && matches.length > 0) {\n      matches.forEach((aMatch, index) => {\n        const value = matches[index];\n        // console.log(`a match ${aMatch} index ${index} value ${value}`);\n        const matchType1 = `\\$\\{${index}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${index}`;\n        url = url.replace(matchType2, value);\n      });\n    }\n    if (matches && matches.groups) {\n      for (const key in matches.groups) {\n        const value = matches.groups[key];\n        // console.log(`key = ${key} value = ${value}`);\n        // support $CAPTURE and ${CAPTURE}\n        const matchType1 = `\\$\\{${key}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${key}`;\n        url = url.replace(matchType2, value);\n      }\n    }\n    return url;\n  }\n}\n\nexport { ClickThroughTransformer };\n","export const CUSTOM_SPLIT_DELIMITER = '#️⃣🔠🆗🆗🔠#️⃣';\n","import { dateTime } from '@grafana/data';\n\nexport const TimeFormatter = (timeZone: string, timestamp: number, timestampFormat: string): string => {\n  const timestampFormatted =\n    timeZone === 'utc'\n      ? dateTime(timestamp)\n        .utc()\n        .format(timestampFormat)\n      : dateTime(timestamp).format(timestampFormat);\n  return timestampFormatted;\n}\n","import { includes as lodashIncludes } from 'lodash';\nimport { PolystatModel } from '../components/types';\nimport { getWorstSeries } from './threshold_processor';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { stringToJsRegex, escapeStringForRegex, ScopedVars, InterpolateFunction, textUtil } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { CompositeItemType, CompositeMetric } from '../components/composites/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { ApplyGlobalRegexPattern } from './processor';\nimport { TimeFormatter } from './time_formatter';\n\nexport const resolveCompositeTemplates = (\n  metricComposites: CompositeItemType[],\n  replaceVariables: InterpolateFunction\n): CompositeItemType[] => {\n  const ret: CompositeItemType[] = [];\n  metricComposites.forEach((item: CompositeItemType) => {\n    const resolved = replaceVariables(item.name, undefined, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n    // if the composite name has template syntax, mark it as isTemplated true\n    const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n    const matchResult = item.name.match(variableRegex);\n    if (matchResult && matchResult.length > 0) {\n      item.isTemplated = true;\n    }\n    resolved.forEach((newName: string) => {\n      ret.push({\n        ...item,\n        name: newName,\n        isTemplated: item.isTemplated,\n      });\n    });\n  });\n\n  return ret;\n};\n\nexport const customFormatter = (value: any) => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nexport const resolveMemberTemplates = (\n  compositeName: string,\n  members: CompositeMetric[],\n  replaceVariables: InterpolateFunction\n): CompositeMetric[] => {\n  const ret: CompositeMetric[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  members.forEach((member) => {\n    // Resolve templates in series names\n    if (member.seriesMatch) {\n      const matchResult = member.seriesMatch.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((aMatch) => {\n          // expand the templatedName (append compositeName to the variables first)\n          const scopedVars: ScopedVars = {\n            compositeName: { text: 'compositeName', value: compositeName },\n          };\n          // template variables can be multi-select, or \"all\", iterate over each match\n          const resolvedSeriesNames = replaceVariables(aMatch, scopedVars, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n          // iterate over the array of names\n          if (resolvedSeriesNames && resolvedSeriesNames.length) {\n            resolvedSeriesNames.forEach((aName) => {\n              if (aName.includes(compositeName)) {\n                const newName = member.seriesMatch.replace(aMatch, aName);\n                const escapedName = escapeStringForRegex(aName);\n                const newNameEscaped = member.seriesMatch.replace(aMatch, escapedName);\n                ret.push({\n                  ...member,\n                  seriesName: newName,\n                  seriesNameEscaped: newNameEscaped,\n                });\n              }\n            });\n          }\n        });\n      } else {\n        ret.push(member);\n      }\n    }\n  });\n\n  return ret;\n};\n\nconst resolveMemberAliasTemplates = (name: string, matches: any): string => {\n  const scopedVars: ScopedVars = {};\n  matches.forEach((name: string, i: number) => {\n    scopedVars[i] = { text: i, value: name };\n  });\n  if (matches.groups) {\n    Object.keys(matches.groups).forEach((key) => {\n      scopedVars[key.replace(/\\s+/g, '_')] = { text: key, value: matches.groups[key] };\n    });\n  }\n  return getTemplateSrv().replace(name, scopedVars);\n};\n\n/**\n * Copies values, leaves members empty\n */\nconst shallowClone = (item: PolystatModel): PolystatModel => {\n  const clone: PolystatModel = {\n    value: item.value,\n    valueFormatted: item.valueFormatted,\n    valueRounded: item.valueRounded,\n    stats: item.stats,\n    name: item.name,\n    displayName: item.displayName,\n    timestamp: item.timestamp,\n    timestampFormatted: item.timestampFormatted,\n    prefix: item.prefix,\n    suffix: item.suffix,\n    color: item.color,\n    clickThrough: item.clickThrough,\n    operatorName: item.operatorName,\n    newTabEnabled: item.newTabEnabled,\n    sanitizedURL: item.sanitizedURL,\n    sanitizeURLEnabled: item.sanitizeURLEnabled,\n    customClickthroughTargetEnabled: false,\n    customClickthroughTarget: '',\n    showName: item.showName,\n    showValue: item.showValue,\n    showTimestamp: item.showTimestamp,\n    isComposite: item.isComposite,\n    members: []\n  };\n  return clone;\n};\n\nexport const ApplyComposites = (\n  composites: CompositeItemType[],\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction,\n  compositesGlobalAliasingEnabled: boolean,\n  timeZone: string,\n  globalRegexPattern?: string,\n): PolystatModel[] => {\n  if (!composites) {\n    return data;\n  }\n\n  const filteredMetrics: number[] = [];\n  const keepMetrics: number[] = [];\n  const clonedComposites: PolystatModel[] = [];\n  // the composite Name can be a template variable\n  // the composite should only match specific metrics or expanded templated metrics that use the composite name\n  const resolvedComposites = resolveCompositeTemplates(composites, replaceVariables);\n  for (let i = 0; i < resolvedComposites.length; i++) {\n    const matchedMetrics: number[] = [];\n    const aComposite = resolvedComposites[i];\n    if (!aComposite.showComposite) {\n      continue;\n    }\n    let currentWorstSeries = null;\n    // this should filter the members that are matches for the composite name\n    const templatedMembers = resolveMemberTemplates(aComposite.name, aComposite.metrics, replaceVariables);\n    for (let j = 0; j < templatedMembers.length; j++) {\n      const aMetric = templatedMembers[j];\n      // look for the matches to the pattern in the data\n      for (let index = 0; index < data.length; index++) {\n        // match regex\n        // seriesName may not be defined yet, skip\n        if (typeof aMetric.seriesMatch === 'undefined') {\n          continue;\n        }\n        // name may not be escaped, check both\n        let metricName = aMetric.seriesMatch;\n        if (aMetric.seriesNameEscaped !== undefined) {\n          metricName = aMetric.seriesNameEscaped;\n        }\n        const regex = stringToJsRegex(metricName);\n        const matches = regex.exec(data[index].name);\n        if (matches && matches.length > 0) {\n          const seriesItem = data[index];\n          // Template out the name of the metric using the alias\n          if (aMetric.alias && aMetric.alias.length > 0) {\n            seriesItem.displayName = resolveMemberAliasTemplates(aMetric.alias, matches);\n          }\n\n          // keep index of the matched metric\n          matchedMetrics.push(index);\n          // only hide if requested\n          if (!aComposite.showMembers) {\n            filteredMetrics.push(index);\n          } else {\n            keepMetrics.push(index);\n          }\n          if (aComposite.clickThrough && aComposite.clickThrough.length > 0) {\n            let url = aComposite.clickThrough;\n            // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n            url = ClickThroughTransformer.transformComposite(aComposite.name, url);\n            url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n            url = ClickThroughTransformer.transformNthMetric(url, data);\n            // lastly apply template variables\n            url = replaceVariables(url);\n            seriesItem.clickThrough = url;\n            seriesItem.sanitizedURL = textUtil.sanitizeUrl(url);\n            seriesItem.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n            seriesItem.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n          }\n          // process the timestamp display\n          if (aComposite.showTimestampEnabled) {\n            seriesItem.timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, aComposite.showTimestampFormat);\n            seriesItem.showTimestamp = true;\n          }\n        }\n      }\n    }\n    if (matchedMetrics.length === 0) {\n      continue;\n    }\n    // now determine the most triggered threshold\n\n    for (let k = 0; k < matchedMetrics.length; k++) {\n      const itemIndex = matchedMetrics[k];\n      const seriesItem = data[itemIndex];\n      // check thresholds\n      if (currentWorstSeries === null) {\n        currentWorstSeries = seriesItem;\n      } else {\n        currentWorstSeries = getWorstSeries(currentWorstSeries, seriesItem);\n      }\n    }\n    // Prefix the valueFormatted with the actual metric name\n    if (currentWorstSeries !== null) {\n      const clone = shallowClone(currentWorstSeries);\n      clone.name = aComposite.name;\n      clone.displayName = aComposite.name;\n      // tooltip/legend uses this to expand what values are inside the composite\n      for (let index = 0; index < matchedMetrics.length; index++) {\n        const itemIndex = matchedMetrics[index];\n        clone.members.push({\n          ...data[itemIndex],\n          name: data[itemIndex].displayName || data[itemIndex].name,\n        });\n      }\n      clone.thresholdLevel = currentWorstSeries.thresholdLevel;\n      // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      // now push the composite into data\n      // add the composite setting for showing the name/value to the new cloned model\n      clone.showName = aComposite.showName;\n      clone.showValue = aComposite.showValue;\n      clone.showTimestamp = aComposite.showTimestampEnabled;\n      clone.displayMode = aComposite.displayMode;\n      clone.newTabEnabled = aComposite.clickThroughOpenNewTab;\n      clone.sanitizeURLEnabled = aComposite.clickThroughSanitize;\n      clone.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n      clone.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n      // mark this series as a composite\n      clone.isComposite = true;\n      clonedComposites.push(clone);\n    }\n  }\n  // now merge the clonedComposites into data\n  if(compositesGlobalAliasingEnabled && globalRegexPattern) {\n    Array.prototype.push.apply(data, ApplyGlobalRegexPattern(clonedComposites, globalRegexPattern))\n  } else {\n    Array.prototype.push.apply(data, clonedComposites);\n  }\n  // remove the keepMetrics from the filteredMetrics list\n  // these have been marked by at least one composite to be displayed\n  for (let i = 0; i < keepMetrics.length; i++) {\n    const keptMetric = keepMetrics[i];\n    const location = filteredMetrics.indexOf(keptMetric);\n    if (location >= 0) {\n      filteredMetrics.splice(location, 1);\n    }\n  }\n  // sort by value descending\n  filteredMetrics.sort((a, b) => {\n    return b - a;\n  });\n  // now remove the filtered metrics from final list\n  // remove filtered metrics, use splice in reverse order\n  for (let i = data.length; i >= 0; i--) {\n    if (lodashIncludes(filteredMetrics, i)) {\n      data.splice(i, 1);\n    }\n  }\n  return data;\n};\n","import { FieldCalcs } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nexport function GetValueByOperator(\n  metricName: string,\n  data: PolystatModel | null,\n  operatorName: string,\n  calcs: FieldCalcs\n) {\n  switch (operatorName) {\n    case 'name':\n      return metricName;\n    case 'last_time':\n      if (data) {\n        return data.timestamp;\n      } else {\n        return Date.now();\n      }\n    default:\n      let aValue = calcs[operatorName];\n      return aValue;\n  }\n}\n","export enum MappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\ninterface BaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: MappingType;\n}\n\nexport type ValueMapping = ValueMap | RangeMap;\n\nexport interface ValueMap extends BaseMap {\n  value: string;\n}\n\nexport interface RangeMap extends BaseMap {\n  from: string;\n  to: string;\n}\ntype TimeSeriesValue = string | number | null;\n\nconst addValueToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  valueToTextMapping: ValueMap,\n  value: TimeSeriesValue\n) => {\n  if (valueToTextMapping.value === undefined) {\n    return allValueMappings;\n  }\n\n  if (value === null && isNullValueMap(valueToTextMapping)) {\n    return allValueMappings.concat(valueToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const valueToTextMappingAsNumber = parseFloat(valueToTextMapping.value as string);\n\n  if (isNaN(valueAsNumber) || isNaN(valueToTextMappingAsNumber)) {\n    if (value === valueToTextMapping.value) {\n      return allValueMappings.concat(valueToTextMapping);\n    }\n  }\n\n  if (valueAsNumber !== valueToTextMappingAsNumber) {\n    return allValueMappings;\n  }\n\n  return allValueMappings.concat(valueToTextMapping);\n};\n\nconst addRangeToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  rangeToTextMapping: RangeMap,\n  value: TimeSeriesValue\n) => {\n  if (rangeToTextMapping.from === undefined || rangeToTextMapping.to === undefined || value === undefined) {\n    return allValueMappings;\n  }\n\n  if (\n    value === null &&\n    rangeToTextMapping.from &&\n    rangeToTextMapping.to &&\n    rangeToTextMapping.from.toLowerCase() === 'null' &&\n    rangeToTextMapping.to.toLowerCase() === 'null'\n  ) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const fromAsNumber = parseFloat(rangeToTextMapping.from as string);\n  const toAsNumber = parseFloat(rangeToTextMapping.to as string);\n\n  if (isNaN(valueAsNumber) || isNaN(fromAsNumber) || isNaN(toAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber >= fromAsNumber && valueAsNumber <= toAsNumber) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  return allValueMappings;\n};\n\nconst getAllFormattedValueMappings = (valueMappings: ValueMapping[], value: TimeSeriesValue) => {\n  const allFormattedValueMappings = valueMappings.reduce((allValueMappings, valueMapping) => {\n    if (valueMapping.type === MappingType.ValueToText) {\n      allValueMappings = addValueToTextMappingText(allValueMappings, valueMapping as ValueMap, value);\n    } else if (valueMapping.type === MappingType.RangeToText) {\n      allValueMappings = addRangeToTextMappingText(allValueMappings, valueMapping as RangeMap, value);\n    }\n\n    return allValueMappings;\n  }, [] as ValueMapping[]);\n\n  allFormattedValueMappings.sort((t1, t2) => {\n    return t1.id - t2.id;\n  });\n\n  return allFormattedValueMappings;\n};\n\nexport const getMappedValue = (valueMappings: ValueMapping[], value: TimeSeriesValue): ValueMapping => {\n  return getAllFormattedValueMappings(valueMappings, value)[0];\n};\n\nconst isNullValueMap = (mapping: ValueMap): boolean => {\n  if (!mapping || !mapping.value) {\n    return false;\n  }\n  return mapping.value.toLowerCase() === 'null';\n};\n","/**\n * @public\n */\nexport enum FieldColorModeId {\n  Thresholds = 'thresholds',\n  PaletteClassic = 'palette-classic',\n  PaletteSaturated = 'palette-saturated',\n  ContinuousGrYlRd = 'continuous-GrYlRd',\n  Fixed = 'fixed',\n}\n\n/**\n * @public\n */\nexport interface FieldColor {\n  /** The main color scheme mode */\n  mode: FieldColorModeId | string;\n  /** Stores the fixed color value if mode is fixed */\n  fixedColor?: string;\n  /** Some visualizations need to know how to assign a series color from by value color schemes */\n  seriesBy?: FieldColorSeriesByMode;\n}\n\n/**\n * @beta\n */\nexport type FieldColorSeriesByMode = 'min' | 'max' | 'last';\n\nexport const FALLBACK_COLOR = 'gray';\n","export interface Threshold {\n  value: number;\n  color: string;\n  /**\n   *  Warning, Error, LowLow, Low, OK, High, HighHigh etc\n   */\n  state?: string;\n}\n\n/**\n *  Display mode\n */\nexport enum ThresholdsMode {\n  Absolute = 'absolute',\n  /**\n   *  between 0 and 1 (based on min/max)\n   */\n  Percentage = 'percentage',\n}\n\n/**\n *  Config that is passed to the ThresholdsEditor\n */\nexport interface ThresholdsConfig {\n  mode: ThresholdsMode;\n\n  /**\n   *  Must be sorted by 'value', first value is always -Infinity\n   */\n  steps: Threshold[];\n}\n","/**\n * @alpha\n */\nexport enum MappingType {\n  ValueToText = 'value', // was 1\n  RangeToText = 'range', // was 2\n  RegexToText = 'regex',\n  SpecialValue = 'special',\n}\n\n/**\n * @alpha\n */\nexport interface ValueMappingResult {\n  text?: string;\n  color?: string;\n  icon?: string;\n  index?: number;\n}\n\n/**\n * @alpha\n */\ninterface BaseValueMap<T> {\n  type: MappingType;\n  options: T;\n}\n\n/**\n * @alpha\n */\nexport interface ValueMap extends BaseValueMap<Record<string, ValueMappingResult>> {\n  type: MappingType.ValueToText;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMapOptions {\n  from: number | null; // changed from string\n  to: number | null;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMap extends BaseValueMap<RangeMapOptions> {\n  type: MappingType.RangeToText;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMapOptions {\n  pattern: string;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMap extends BaseValueMap<RegexMapOptions> {\n  type: MappingType.RegexToText;\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueOptions {\n  match: SpecialValueMatch;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport enum SpecialValueMatch {\n  True = 'true',\n  False = 'false',\n  Null = 'null',\n  NaN = 'nan',\n  NullAndNaN = 'null+nan',\n  Empty = 'empty',\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueMap extends BaseValueMap<SpecialValueOptions> {\n  type: MappingType.SpecialValue;\n}\n\n/**\n * @alpha\n */\nexport type ValueMapping = ValueMap | RangeMap | RegexMap | SpecialValueMap;\n","import { getActiveThreshold } from './thresholds';\nimport { stringToJsRegex } from '@grafana/data';\nimport {\n  MappingType,\n  SpecialValueMatch,\n  ValueMap,\n  ValueMapping,\n  ValueMappingResult,\n  SpecialValueOptions,\n} from './types/valueMappings';\nimport { ThresholdsConfig } from './types/thresholds';\n\nexport function getValueMappingResult(valueMappings: ValueMapping[], value: any): ValueMappingResult | null {\n  for (const vm of valueMappings) {\n    switch (vm.type) {\n      case MappingType.ValueToText:\n        if (value == null) {\n          continue;\n        }\n\n        const result = vm.options[value];\n        if (result) {\n          return result;\n        }\n\n        break;\n\n      case MappingType.RangeToText:\n        if (value == null) {\n          continue;\n        }\n\n        const valueAsNumber = parseFloat(value as string);\n        if (isNaN(valueAsNumber)) {\n          continue;\n        }\n\n        const isNumFrom = !isNaN(vm.options.from!);\n        if (isNumFrom && valueAsNumber < vm.options.from!) {\n          continue;\n        }\n\n        const isNumTo = !isNaN(vm.options.to!);\n        if (isNumTo && valueAsNumber > vm.options.to!) {\n          continue;\n        }\n\n        return vm.options.result;\n\n      case MappingType.RegexToText:\n        if (value == null) {\n          continue;\n        }\n\n        if (typeof value !== 'string') {\n          continue;\n        }\n\n        const regex = stringToJsRegex(vm.options.pattern);\n        if (value.match(regex)) {\n          const res = { ...vm.options.result };\n\n          if (res.text != null) {\n            res.text = value.replace(regex, vm.options.result.text || '');\n          }\n\n          return res;\n        }\n\n      case MappingType.SpecialValue:\n        switch ((vm.options as SpecialValueOptions).match) {\n          case SpecialValueMatch.Null: {\n            if (value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NaN: {\n            if (isNaN(value as any)) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NullAndNaN: {\n            if (isNaN(value as any) || value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.True: {\n            if (value === true || value === 'true') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.False: {\n            if (value === false || value === 'false') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.Empty: {\n            if (value === '') {\n              return vm.options.result;\n            }\n            break;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Ref https://stackoverflow.com/a/58550111\nexport function isNumeric(num: any) {\n  return (typeof num === 'number' || (typeof num === 'string' && num.trim() !== '')) && !isNaN(num as number);\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport enum LegacyMappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport interface LegacyBaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  // intentional use of deprecated function for v8 compat\n  // eslint-disable-next-line deprecation/deprecation\n  type: LegacyMappingType;\n}\n\n/**\n * @deprecated use ValueMapping instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport type LegacyValueMapping = LegacyValueMap | LegacyRangeMap;\n\n/**\n * @deprecated use ValueMap instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport interface LegacyValueMap extends LegacyBaseMap {\n  value: string;\n}\n\n/**\n * @deprecated use RangeMap instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport interface LegacyRangeMap extends LegacyBaseMap {\n  from: string;\n  to: string;\n}\n\n/**\n * @deprecated use getValueMappingResult instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport function getMappedValue(valueMappings: LegacyValueMapping[], value: any): LegacyValueMapping {\n  // intentional use of deprecated function for v8 compat\n  // eslint-disable-next-line deprecation/deprecation\n  const emptyResult = { type: LegacyMappingType.ValueToText, value: '', text: '', from: '', to: '', id: 0 };\n  if (!valueMappings?.length) {\n    return emptyResult;\n  }\n\n  const upgraded: ValueMapping[] = [];\n  for (const vm of valueMappings) {\n    if (isValueMapping(vm)) {\n      upgraded.push(vm);\n      continue;\n    }\n    upgraded.push(upgradeOldAngularValueMapping(vm));\n  }\n\n  if (!upgraded?.length) {\n    return emptyResult;\n  }\n\n  const result = getValueMappingResult(upgraded, value);\n  if (!result) {\n    return emptyResult;\n  }\n\n  return {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    type: LegacyMappingType.ValueToText,\n    value: result.text,\n    text: result.text ?? '',\n    from: '',\n    to: '',\n    id: result.index ?? 0,\n  };\n}\n\n/**\n * @alpha\n * Converts the old Angular value mappings to new react style\n */\nexport function convertOldAngularValueMappings(panel: any, migratedThresholds?: ThresholdsConfig): ValueMapping[] {\n  const mappings: ValueMapping[] = [];\n\n  // Guess the right type based on options\n  let mappingType = panel.mappingType;\n  if (!panel.mappingType) {\n    if (panel.valueMaps && panel.valueMaps.length) {\n      mappingType = 1;\n    } else if (panel.rangeMaps && panel.rangeMaps.length) {\n      mappingType = 2;\n    }\n  }\n  if (mappingType === 1) {\n    for (let i = 0; i < panel.valueMaps.length; i++) {\n      const map = panel.valueMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.ValueToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  } else if (mappingType === 2) {\n    for (let i = 0; i < panel.rangeMaps.length; i++) {\n      const map = panel.rangeMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.RangeToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  }\n\n  return mappings;\n}\n\nfunction upgradeOldAngularValueMapping(old: any, thresholds?: ThresholdsConfig): ValueMapping {\n  const valueMaps: ValueMap = { type: MappingType.ValueToText, options: {} };\n  const newMappings: ValueMapping[] = [];\n\n  // Use the color we would have picked from thresholds\n  let color: string | undefined = undefined;\n  const numeric = parseFloat(old.text);\n  if (thresholds && !isNaN(numeric)) {\n    const level = getActiveThreshold(numeric, thresholds.steps);\n    if (level && level.color) {\n      color = level.color;\n    }\n  }\n\n  switch (old.type) {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    case LegacyMappingType.ValueToText:\n    case MappingType.ValueToText:\n      if (old.value != null) {\n        if (old.value === 'null') {\n          newMappings.push({\n            type: MappingType.SpecialValue,\n            options: {\n              match: SpecialValueMatch.Null,\n              result: { text: old.text, color },\n            },\n          });\n        } else {\n          valueMaps.options[String(old.value)] = {\n            text: old.text,\n            color,\n          };\n        }\n      }\n      break;\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    case LegacyMappingType.RangeToText:\n    case MappingType.RangeToText:\n      if (old.from === 'null' || old.to === 'null') {\n        newMappings.push({\n          type: MappingType.SpecialValue,\n          options: {\n            match: SpecialValueMatch.Null,\n            result: { text: old.text, color },\n          },\n        });\n      } else {\n        newMappings.push({\n          type: MappingType.RangeToText,\n          options: {\n            from: +old.from,\n            to: +old.to,\n            result: { text: old.text, color },\n          },\n        });\n      }\n      break;\n  }\n\n  if (Object.keys(valueMaps.options).length > 0) {\n    newMappings.unshift(valueMaps);\n  }\n\n  return newMappings[0];\n}\n\nfunction isValueMapping(map: any): map is ValueMapping {\n  if (!map) {\n    return false;\n  }\n\n  return map.hasOwnProperty('options') && typeof map.options === 'object';\n}\n","import { getMappedValue } from './v7/valueMappings';\nimport { getValueMappingResult } from './v8/valueMappings';\n\n//\n// To maintain compatibility back to Grafana >=v7.3, this wrapper is needed\n// to process the value mappings based on the object passed in.\n//\n// the method `getMappedValue()` function was removed in v9\n// the replacement `getValueMappingResult()` only appears in v8.1.0+\n//\n// At runtime, this cannot be determined so the legacy function and the new function are both provided\n// here, to allow this to work work across all versions (7.3 > 9.x)\n//\nexport const GetMappedValue = (valueMappings: any[], value: any): any => {\n  let mappedValue = getMappedValue(valueMappings, value);\n  if (typeof mappedValue === 'undefined') {\n    return getValueMappingResult(valueMappings, value);\n  }\n  return mappedValue;\n};\n","import {\n  getValueFormat,\n  stringToJsRegex,\n  ScopedVars,\n  InterpolateFunction,\n  textUtil,\n  getColorForTheme,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { getThresholdLevelForValue } from './threshold_processor';\nimport { GetValueByOperator } from './stats';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { PolystatModel } from '../components/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from 'components/thresholds/types';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { roundValue } from 'utils';\nimport { TimeFormatter } from './time_formatter';\n\nconst customFormatter = (value: any): string => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nconst resolveOverrideTemplates = (overrides: OverrideItemType[], replaceVariables: InterpolateFunction): OverrideItemType[] => {\n  const ret: OverrideItemType[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  overrides.forEach((override) => {\n    // Resolve templates in series names\n    if (override.metricName) {\n      const matchResult = override.metricName.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((template: any) => {\n          const scopedVars: ScopedVars = {};\n          const resolvedSeriesNames = replaceVariables(\n            template, scopedVars, customFormatter)\n            .split(CUSTOM_SPLIT_DELIMITER);\n\n          resolvedSeriesNames.forEach((seriesName) => {\n            const newName = override.metricName.replace(template, seriesName);\n            ret.push({\n              ...override,\n              metricName: newName,\n            });\n          });\n        });\n      } else {\n        // does not match template, but can match a simple regex\n        ret.push(override);\n      }\n    }\n  });\n\n  return ret;\n};\n\nexport const MatchOverride = (pattern: string, overrides: OverrideItemType[], replaceVariables: InterpolateFunction): OverrideItemType | null => {\n  const resolvedOverrides = resolveOverrideTemplates(overrides, replaceVariables);\n  for (let index = 0; index < resolvedOverrides.length; index++) {\n    const anOverride = resolvedOverrides[index];\n    const regex = stringToJsRegex(anOverride.metricName);\n    const matches = pattern.match(regex);\n    if (matches && matches.length > 0 && anOverride.enabled) {\n      return resolvedOverrides[index];\n    }\n  }\n  return null;\n};\n\nexport const ApplyOverrides = (\n  overrides: OverrideItemType[],\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  replaceVariables: InterpolateFunction,\n  timeZone: string,\n  themeV1: GrafanaTheme, // V8\n  themeV2: GrafanaTheme2 // V9+\n) => {\n  // determine real color\n  let realGlobalFillColor = '';\n  if (typeof themeV2.visualization !== 'undefined') {\n    realGlobalFillColor = themeV2.visualization.getColorByName(globalFillColor);\n  } else {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    realGlobalFillColor = getColorForTheme(globalFillColor, themeV1);\n  }\n\n  if (!overrides) {\n    return data;\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    const anOverride = MatchOverride(data[index].name, overrides, replaceVariables);\n    if (anOverride) {\n      const aSeries = data[index];\n      // set the operators\n      aSeries.operatorName = anOverride.operatorName;\n      const dataValue = GetValueByOperator(aSeries.name, aSeries, aSeries.operatorName, aSeries.stats);\n      // Use defaults or the specific threshold\n      const thresholds =\n        anOverride.thresholds && anOverride.thresholds.length ? anOverride.thresholds : globalThresholds;\n      const result = getThresholdLevelForValue(thresholds, dataValue, globalFillColor);\n      let useColor = result.color;\n      if (typeof themeV2.visualization !== 'undefined') {\n        useColor = themeV2.visualization.getColorByName(result.color);\n      } else {\n        // intentional use of deprecated function for v8 compat\n        // eslint-disable-next-line deprecation/deprecation\n        useColor = getColorForTheme(result.color, themeV1);\n      }\n      // set value to what was returned\n      data[index].value = dataValue;\n      data[index].color = useColor;\n      data[index].thresholdLevel = result.thresholdLevel;\n      // format it\n      // TODO: fix me!\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = themeV2.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n        // override the timestamp format also\n        if (anOverride.showTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, anOverride.showTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n      } else {\n        const formatFunc = getValueFormat(anOverride.unitFormat);\n        if (formatFunc) {\n          // put the value in quotes to escape \"most\" special characters\n          const decimals: number = +anOverride.decimals;\n          const formatted = formatFunc(data[index].value, decimals, anOverride.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          // spaces are included with the formatFunc\n          if (formatted.suffix) {\n            data[index].valueFormatted += formatted.suffix;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = formatted.prefix + data[index].valueFormatted;\n          }\n          data[index].valueRounded = roundValue(data[index].value, decimals) || data[index].value;\n        }\n        // process the timestamp display\n        if (anOverride.showTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, anOverride.showTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n\n      }\n      // add prefix/suffix to formatted value\n      if (anOverride.prefix !== '') {\n        data[index].valueFormatted = anOverride.prefix + ' ' + data[index].valueFormatted;\n      }\n      if (anOverride.suffix !== '') {\n        data[index].valueFormatted = data[index].valueFormatted + ' ' + anOverride.suffix;\n      }\n      if (anOverride.alias !== '') {\n        data[index].displayName = anOverride.alias;\n      }\n      data[index].prefix = anOverride.prefix;\n      data[index].suffix = anOverride.suffix;\n      // set the url, replace template vars\n      if (anOverride.clickThrough && anOverride.clickThrough.length > 0) {\n        let url = anOverride.clickThrough;\n        // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n        url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n        url = ClickThroughTransformer.transformNthMetric(url, data);\n        url = ClickThroughTransformer.transformByRegex(anOverride.metricName, data[index], url);\n        if (replaceVariables) {\n          url = replaceVariables(url);\n        }\n        data[index].clickThrough = url;\n        data[index].newTabEnabled = anOverride.clickThroughOpenNewTab;\n        data[index].sanitizeURLEnabled = anOverride.clickThroughSanitize;\n        // provide both versions, what is displayed is determined later\n        data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n        data[index].customClickthroughTargetEnabled = anOverride.clickThroughCustomTargetEnabled;\n        data[index].customClickthroughTarget = anOverride.clickThroughCustomTarget;\n      }\n    } else if (globalThresholds && globalThresholds.length) {\n      const result = getThresholdLevelForValue(globalThresholds, data[index].value, globalFillColor);\n      // set value to what was returned\n      data[index].color = result.color;\n      data[index].thresholdLevel = result.thresholdLevel;\n    }\n  }\n  return data;\n};\n","import { InsertTime } from './deframer';\nimport {\n  Field,\n  FieldType,\n  reduceField,\n  textUtil,\n  DataFrame,\n  PanelData,\n  getFieldDisplayName,\n  dateTime,\n  formattedValueToString,\n  getValueFormat,\n  stringToJsRegex,\n  InterpolateFunction,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { includes as lodashIncludes } from 'lodash';\nimport { DisplayModes, OperatorOptions, PolystatModel } from '../components/types';\nimport { GLOBAL_FILL_COLOR_RGBA } from '../components/defaults';\nimport { GetDecimalsForValue, SortVariableValuesByField, roundValue } from '../utils';\nimport { ApplyComposites } from './composite_processor';\nimport { CompositeItemType } from 'components/composites/types';\nimport { ApplyOverrides } from './override_processor';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { GetValueByOperator } from './stats';\nimport { TimeFormatter } from './time_formatter';\n\n/**\n * Converts dataframes to internal model\n *\n * @param   {DataFrame[]}    data                [data description]\n * @param   {string[]}     globalRegexPattern  [globalRegexPattern description]\n *\n * @return  {DataFrame[]}                      [return description]\n */\nexport function ProcessDataFrames(\n  compositesEnabled: boolean,\n  composites: CompositeItemType[],\n  overrides: OverrideItemType[],\n  data: PanelData,\n  replaceVariables: InterpolateFunction,\n  fieldConfig: FieldConfigSource<any>,\n  globalClickthrough: string,\n  globalClickthroughTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  globalOperator: string,\n  globalDecimals: number,\n  globalDisplayMode: string,\n  globalRegexPattern: string,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  globalUnitFormat: string,\n  globalShowLabel: boolean,\n  globalShowValue: boolean,\n  globalShowTimestamp: boolean,\n  globalShowTimestampFormat: string,\n  sortByDirection: number,\n  sortByField: string,\n  compositesGlobalAliasingEnabled: boolean,\n  timeZone: string,\n  themeV1: GrafanaTheme,\n  themeV2: GrafanaTheme2,\n): PolystatModel[] {\n\n  // check if data contains a field called Time of type time\n  let processedData = InsertTime(data.series);\n  let internalData = [] as PolystatModel[];\n\n  processedData.map((item) => {\n    const models = DataFrameToPolystat(item, globalOperator);\n    for (const aModel of models) {\n      internalData.push(aModel);\n    }\n  });\n  internalData = ApplyGlobalRegexPattern(internalData, globalRegexPattern);\n  // formatting can change colors due to value maps\n  internalData = ApplyGlobalFormatting(\n    internalData,\n    fieldConfig,\n    globalUnitFormat,\n    globalDecimals,\n    globalFillColor,\n    globalShowLabel,\n    globalShowValue,\n    globalShowTimestamp,\n    globalShowTimestampFormat,\n    timeZone,\n    themeV2);\n  // applies overrides and global thresholds (and mappings)\n  internalData = ApplyOverrides(\n    overrides,\n    internalData,\n    fieldConfig,\n    globalFillColor,\n    globalThresholds,\n    replaceVariables,\n    timeZone,\n    themeV1,\n    themeV2\n  );\n  // composites\n  if (compositesEnabled) {\n    internalData = ApplyComposites(\n      composites,\n      internalData,\n      replaceVariables,\n      compositesGlobalAliasingEnabled,\n      timeZone,\n      globalRegexPattern);\n  }\n  // clickthroughs\n  internalData = ApplyGlobalClickThrough(\n    internalData,\n    globalClickthrough,\n    globalClickthroughTabEnabled,\n    globalClickthroughSanitizedEnabled,\n    globalClickthroughCustomTargetEnabled,\n    globalClickthroughCustomTarget,\n    replaceVariables\n  );\n  // filter by global display mode\n  internalData = FilterByGlobalDisplayMode(internalData, globalDisplayMode);\n  // final step sorting\n  internalData = SortVariableValuesByField(internalData, sortByField, sortByDirection);\n  return internalData;\n}\n\n/**\n * renames according to a global regex pattern\n * @param {PolystatModel[]} data [series description]\n * @param {string[]} regexPattern [regexPattern description]\n * @return {PolystatModel[]} [return description]\n */\nexport const ApplyGlobalRegexPattern = (data: PolystatModel[], regexPattern: string): PolystatModel[] => {\n  for (let i = 0; i < data.length; i++) {\n    if (regexPattern !== '') {\n      const regexVal = stringToJsRegex(regexPattern);\n      if (data[i].name && regexVal.test(data[i].name.toString())) {\n        const temp = regexVal.exec(data[i].name.toString());\n        if (!temp) {\n          continue;\n        }\n        let extractedTxt = '';\n        if (temp.length > 1) {\n          temp.slice(1).forEach((value, i) => {\n            if (value) {\n              extractedTxt += extractedTxt.length > 0 ? ' ' + value.toString() : value.toString();\n            }\n          });\n          data[i].displayName = extractedTxt;\n        }\n      }\n    }\n  }\n  return data;\n};\n\nexport const ApplyGlobalClickThrough = (\n  data: PolystatModel[],\n  globalClickthrough: string,\n  globalClickthroughNewTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  replaceVariables: InterpolateFunction\n): PolystatModel[] => {\n  for (let index = 0; index < data.length; index++) {\n    if (data[index].clickThrough.length === 0) {\n      data[index].clickThrough = processDefaultClickThrough(index, globalClickthrough, data, replaceVariables);\n      data[index].newTabEnabled = globalClickthroughNewTabEnabled;\n      data[index].sanitizeURLEnabled = globalClickthroughSanitizedEnabled;\n      // always provide both versions and overrides and composites can specify which one to use\n      data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n      data[index].customClickthroughTargetEnabled = globalClickthroughCustomTargetEnabled;\n      data[index].customClickthroughTarget = globalClickthroughCustomTarget;\n    }\n  }\n  return data;\n};\n\n/**\n * Only called for dataframes that do not have a clickthrough specified via overrides or composites.\n * @param {number}              index\n * @param {string}              globalClickthrough string containing the GlobalClickthrough text\n * @param {PolystatModel[]}     data array of data\n * @param {InterpolateFunction} replaceVariables function from template server\n * @return {string} New URL with default clickthrough processed replacements and template variables\n */\nexport const processDefaultClickThrough = (\n  index: number,\n  globalClickthrough: string,\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction): string => {\n  let url = globalClickthrough;\n  // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n  url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n  url = ClickThroughTransformer.transformNthMetric(url, data);\n  // process template variables inside clickthrough\n  url = replaceVariables(url);\n  return url;\n};\n\nexport const ApplyGlobalFormatting = (\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalUnitFormat: string,\n  globalDecimals: number,\n  globalFillColor: string,\n  globalShowLabel: boolean,\n  globalShowValue: boolean,\n  globalShowTimestampEnabled: boolean,\n  globalShowTimestampFormat: string,\n  timeZone: string,\n  theme: GrafanaTheme2\n): PolystatModel[] => {\n  let realGlobalFillColor = theme.visualization.getColorByName(globalFillColor);\n  const formatFunc = getValueFormat(globalUnitFormat);\n  for (let index = 0; index < data.length; index++) {\n    // Check for mapped value, if nothing set, format value\n    if (data[index].value !== null) {\n      data[index].showName = globalShowLabel;\n      data[index].showValue = globalShowValue;\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        if (globalShowTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, globalShowTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n        // set color also\n        if (mappedValue.color) {\n          let realColor = theme.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        if (formatFunc) {\n          const result = GetDecimalsForValue(data[index].value, globalDecimals);\n          const formatted = formatFunc(data[index].value, result.decimals, result.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          if (formatted.suffix) {\n            data[index].valueFormatted += ` ${formatted.suffix}`;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = `{$formatted.prefix} ${data[index].valueFormatted}`;\n          }\n          const valueRounded = roundValue(data[index].value, result.decimals);\n          if (valueRounded !== null) {\n            data[index].valueRounded = valueRounded;\n          }\n          if (globalShowTimestampEnabled) {\n            data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, globalShowTimestampFormat);\n            data[index].showTimestamp = true;\n          }\n        }\n        data[index].color = realGlobalFillColor;\n      }\n    }\n  }\n  return data;\n};\n\nconst FilterByGlobalDisplayMode = (data: any, globalDisplayMode: string): PolystatModel[] => {\n  const filteredMetrics: number[] = [];\n  const compositeMetrics: PolystatModel[] = [];\n  if (globalDisplayMode !== 'all') {\n    const dataLen = data.length;\n    for (let i = 0; i < dataLen; i++) {\n      const item = data[i];\n      // keep if composite\n      if (item.isComposite) {\n        compositeMetrics.push(item);\n      }\n      if (item.thresholdLevel < 1) {\n        // push the index number\n        filteredMetrics.push(i);\n      }\n    }\n    // remove filtered metrics, use splice in reverse order\n    for (let i = data.length; i >= 0; i--) {\n      if (lodashIncludes(filteredMetrics, i)) {\n        data.splice(i, 1);\n      }\n    }\n    if (data.length === 0) {\n      if (compositeMetrics.length > 0) {\n        // set data to be all of the composites\n        data = compositeMetrics;\n      }\n    }\n  }\n  return data;\n};\n\nexport const DataFrameToPolystat = (frame: DataFrame, globalOperator: string): PolystatModel[] => {\n\n  const valueFields: Field[] = [];\n  let newestTimestamp = 0;\n\n  for (const aField of frame.fields) {\n    if (aField.type === FieldType.number) {\n      valueFields.push(aField);\n    }\n    else if (aField.type === FieldType.time) {\n      // get the \"newest\" timestamp from data\n      // check if timestamp is 0\n      const aTimestamp = aField.values.get(frame.length - 1)\n      if (newestTimestamp === 0) {\n        newestTimestamp = aTimestamp;\n      }\n      // check if data timestamp is newer\n      if (aTimestamp > newestTimestamp) {\n        newestTimestamp = aTimestamp;\n      }\n    }\n  }\n  if (newestTimestamp === 0) {\n    // use current time if none is found\n    newestTimestamp = new Date().getTime()\n  }\n  const models: PolystatModel[] = [];\n\n  for (const valueField of valueFields) {\n    const valueFieldName = getFieldDisplayName(valueField!, frame);\n    const standardCalcs = reduceField({ field: valueField!, reducers: ['bogus'] });\n    //\n    // side effect of getFieldDisplayName: it modifies content of valueField.state by adding a displayName\n    // file a bug? deframer has been fixed to clone the the field.state to work around the issue\n    //\n    //if (valueField.state?.displayName !== undefined) {\n    //  delete valueField.state?.displayName;\n    //}\n    const operatorValue = GetValueByOperator(valueFieldName, null, globalOperator, standardCalcs);\n\n    let maxDecimals = 4;\n    if (valueField!.config.decimals !== undefined && valueField!.config.decimals !== null) {\n      maxDecimals = valueField!.config.decimals;\n    }\n    const result = getValueFormat(valueField!.config.unit)(operatorValue, maxDecimals, undefined, undefined);\n    const valueFormatted = formattedValueToString(result);\n    const model: PolystatModel = {\n      displayMode: DisplayModes[0].value,\n      thresholdLevel: 0,\n      value: operatorValue,\n      valueFormatted: valueFormatted,\n      valueRounded: roundValue(operatorValue, maxDecimals) || operatorValue,\n      stats: standardCalcs,\n      name: valueFieldName,\n      displayName: valueFieldName,\n      timestamp: newestTimestamp,\n      timestampFormatted: '',\n      prefix: '',\n      suffix: '',\n      color: GLOBAL_FILL_COLOR_RGBA,\n      clickThrough: '',\n      operatorName: OperatorOptions[0].value,\n      newTabEnabled: true,\n      sanitizedURL: '',\n      sanitizeURLEnabled: true,\n      showName: true,\n      showValue: true,\n      showTimestamp: false,\n      isComposite: false,\n      members: [],\n      customClickthroughTargetEnabled: false,\n      customClickthroughTarget: ''\n    };\n    models.push(model);\n  }\n  return models;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { PanelProps, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { PolystatOptions, PolystatModel } from './types';\nimport { Polystat } from './Polystat';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2, useTheme, useTheme2 } from '@grafana/ui';\nimport { ProcessDataFrames } from '../data/processor';\n\ninterface Props extends PanelProps<PolystatOptions> {}\n\nconst getComponentStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    container: css`\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      height: 100%;\n      width: 100%;\n      & svg > g > polygon {\n        fill: transparent;\n      }\n    `,\n  };\n};\n\n\nexport const PolystatPanel: React.FC<Props> = ({ options, data, id, width, height, replaceVariables, fieldConfig, timeZone }) => {\n  const styles = useStyles2(getComponentStyles);\n  const currentThemeV1 = useTheme(); // V8\n  const currentThemeV2 = useTheme2(); // V9+\n  let [cachedProcessedData, setCachedProcessedData] = useState<PolystatModel[]>();\n  useEffect(() => {\n    if (data.state === LoadingState.Done) {\n      // each series is a converted to a model we can use\n      const processedData = ProcessDataFrames(\n        options.compositeConfig.enabled,\n        options.compositeConfig.composites,\n        options.overrideConfig.overrides,\n        data,\n        replaceVariables,\n        fieldConfig,\n        options.globalClickthrough,\n        options.globalClickthroughNewTabEnabled,\n        options.globalClickthroughSanitizedEnabled,\n        options.globalClickthroughCustomTargetEnabled,\n        options.globalClickthroughCustomTarget,\n        options.globalOperator,\n        options.globalDecimals,\n        options.globalDisplayMode,\n        options.globalRegexPattern,\n        options.globalFillColor,\n        options.globalThresholdsConfig,\n        options.globalUnitFormat,\n        true, // TODO: future configurable global option to not display label\n        options.globalShowValueEnabled,\n        options.globalShowTimestampEnabled,\n        options.globalShowTimestampFormat,\n        options.sortByDirection,\n        options.sortByField,\n        options.compositeGlobalAliasingEnabled,\n        timeZone,\n        currentThemeV1,\n        currentThemeV2,\n      );\n      setCachedProcessedData(processedData);\n\n    }\n  }, [data, fieldConfig, options, replaceVariables, currentThemeV1, currentThemeV2, timeZone]);\n\n  if (cachedProcessedData === undefined) {\n    return (\n      <>Loading... please wait</>\n    )\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <div className={cx(styles.container)}>\n        <Polystat\n          compositeConfig={options.compositeConfig}\n          overrideConfig={options.overrideConfig}\n          autoSizePolygons={options.autoSizePolygons}\n          globalAutoScaleFonts={options.globalAutoScaleFonts}\n          globalClickthrough={options.globalClickthrough}\n          globalClickthroughNewTabEnabled={options.globalClickthroughNewTabEnabled}\n          globalClickthroughSanitizedEnabled={options.globalClickthroughSanitizedEnabled}\n          globalClickthroughCustomTargetEnabled={options.globalClickthroughCustomTargetEnabled}\n          globalClickthroughCustomTarget={options.globalClickthroughCustomTarget}\n          globalOperator={options.globalOperator}\n          globalDecimals={options.globalDecimals}\n          globalDisplayMode={options.globalDisplayMode}\n          globalDisplayTextTriggeredEmpty={options.globalDisplayTextTriggeredEmpty}\n          globalFontSize={options.globalFontSize}\n          globalPolygonSize={options.globalPolygonSize}\n          ellipseCharacters={options.ellipseCharacters}\n          ellipseEnabled={options.ellipseEnabled}\n          globalFillColor={options.globalFillColor}\n          globalRegexPattern={options.globalRegexPattern}\n          globalGradientsEnabled={options.globalGradientsEnabled}\n          globalShowTimestampEnabled={options.globalShowTimestampEnabled}\n          globalShowTimestampFormat={options.globalShowTimestampFormat}\n          globalShowTimestampPosition={options.globalShowTimestampPosition}\n          globalShowTimestampFontSize={options.globalShowTimestampFontSize}\n          globalShowTimestampYOffset={options.globalShowTimestampYOffset}\n          globalTextFontAutoColor={options.globalTextFontAutoColorEnabled ? currentThemeV2.colors.text.primary : '#000000'}\n          globalTextFontAutoColorEnabled={options.globalTextFontAutoColorEnabled}\n          globalTextFontColor={options.globalTextFontColor}\n          globalTextFontFamily={options.globalTextFontFamily}\n          globalThresholdsConfig={options.globalThresholdsConfig}\n          globalTooltipsEnabled={options.globalTooltipsEnabled}\n          globalTooltipsShowTimestampEnabled={options.globalTooltipsShowTimestampEnabled}\n          globalTooltipsFontFamily={options.globalTooltipsFontFamily}\n          globalUnitFormat={options.globalUnitFormat}\n          autoSizeColumns={options.autoSizeColumns}\n          autoSizeRows={options.autoSizeRows}\n          layoutDisplayLimit={options.layoutDisplayLimit}\n          layoutNumColumns={options.layoutNumColumns}\n          layoutNumRows={options.layoutNumRows}\n          processedData={cachedProcessedData}\n          panelId={id}\n          panelWidth={width}\n          panelHeight={height}\n          radius={options.radius}\n          renderTime={new Date()}\n          globalShape={options.globalShape}\n          sortByDirection={options.sortByDirection}\n          sortByField={options.sortByField}\n          globalPolygonBorderColor={options.globalPolygonBorderColor}\n          globalPolygonBorderSize={options.globalPolygonBorderSize}\n          globalShowValueEnabled={options.globalShowValueEnabled}\n          globalShowTooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n          tooltipPrimarySortDirection={options.tooltipPrimarySortDirection}\n          tooltipPrimarySortByField={options.tooltipPrimarySortByField}\n          tooltipSecondarySortDirection={options.tooltipSecondarySortDirection}\n          tooltipSecondarySortByField={options.tooltipSecondarySortByField}\n          tooltipDisplayMode={options.tooltipDisplayMode}\n          tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n          compositeGlobalAliasingEnabled={options.compositeGlobalAliasingEnabled}\n        />\n      </div>\n    </div>\n  );\n};\n","import { SelectableValue } from '@grafana/data';\n\nexport const DisplayModes: SelectableValue[] = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport interface CompositeMetric {\n  seriesMatch: string;\n  compositeMatch?: CompositeItemType[];\n  alias?: string;\n  ID?: string;\n  order: number;\n  seriesName?: string;\n  seriesNameEscaped?: string;\n}\n\nexport interface CompositeItemType {\n  name: string;\n  label: string;\n  order: number;\n  isTemplated: boolean;\n  displayMode: string;\n  enabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showComposite: boolean;\n  showMembers: boolean;\n  showTimestampEnabled: boolean;\n  showTimestampFormat: string;\n  showTimestampYOffset: number;\n  metrics: CompositeMetric[];\n  clickThrough: string | '';\n  clickThroughSanitize: boolean;\n  clickThroughOpenNewTab: boolean;\n  clickThroughCustomTargetEnabled: boolean;\n  clickThroughCustomTarget: string;\n}\n\nexport interface CompositeItemTracker {\n  composite: CompositeItemType;\n  order: number;\n  ID: string;\n}\n\nexport interface CompositeItemProps {\n  composite: CompositeItemType;\n  ID: string;\n  enabled: boolean;\n  setter: any;\n  remover: any;\n  moveUp: any;\n  moveDown: any;\n  createDuplicate: any;\n  context: any;\n}\n\nexport interface CompositeMetricItemProps {\n  metric: CompositeMetric;\n  index: number;\n  disabled: boolean;\n  removeMetric: any;\n  updateMetric: any;\n  updateMetricAlias: any;\n  context: any;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Input, Field, IconButton, HorizontalGroup, Cascader, CascaderOption, FieldSet } from '@grafana/ui';\nimport { CompositeMetricItemProps } from './types';\nimport { getMetricHints } from '../metric_hints';\n\nexport const CompositeMetricItem: React.FC<CompositeMetricItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n\n  async function copySelectedMetricToClipboard(index: number) {\n    if (props.metric.seriesMatch) {\n      const aValue = props.metric.seriesMatch;\n      if ('clipboard' in navigator) {\n        if (aValue) {\n          return await navigator.clipboard.writeText(aValue);\n        }\n      } else {\n        if (aValue) {\n          // use the old method if clipboard is not available\n          // eslint-disable-next-line deprecation/deprecation\n          return document.execCommand('copy', true, aValue);\n        }\n      }\n    }\n  }\n\n  const updateMetric = (v: string) => {\n    props.updateMetric(props.index, v);\n  };\n  const updateMetricAlias = (alias: string) => {\n    props.updateMetricAlias(props.index, alias);\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <FieldSet>\n      <HorizontalGroup>\n        <IconButton\n          key=\"deleteMetric\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete this metric\"\n          onClick={() => props.removeMetric(props.index)}\n        />\n        <IconButton\n          key=\"copyMetric\"\n          variant=\"secondary\"\n          name=\"copy\"\n          tooltip=\"Copy Metric/Regex\"\n          onClick={() => copySelectedMetricToClipboard(props.index)}\n        />\n        <Field label=\"Metric/RegEx\" style={{ minWidth: '175px' }} disabled={props.disabled}>\n          <Cascader\n            key={`cmi-index-${props.index}`}\n            initialValue={props.metric.seriesMatch}\n            allowCustomValue\n            placeholder=\"\"\n            options={metricHints}\n            onSelect={(val: string) => updateMetric(val)}\n          />\n        </Field>\n        <Field label=\"Alias\" disabled={props.disabled}>\n          <Input value={props.metric.alias} placeholder=\"\" onChange={(e) => updateMetricAlias(e.currentTarget.value)} />\n        </Field>\n      </HorizontalGroup>\n    </FieldSet>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { IconName, Button, Input, Select, Field, FieldSet, Switch, Card, IconButton, Cascader } from '@grafana/ui';\nimport { DisplayModes, CompositeItemProps, CompositeMetric, CompositeItemType } from './types';\nimport { CompositeMetricItem } from './CompositeMetricItem';\nimport { v4 as UUIDv4 } from 'uuid';\nimport { SelectableValue } from '@grafana/data';\nimport { ShowTimestampFormats } from 'components/types';\n\nexport const CompositeItem: React.FC<CompositeItemProps> = (props: CompositeItemProps) => {\n  const [composite, _setComposite] = useState(props.composite);\n  const getDisplayMode = (displayMode: string) => {\n    const keys = DisplayModes.keys();\n    for (const aKey of keys) {\n      if (DisplayModes[aKey].value === displayMode) {\n        return DisplayModes[aKey];\n      }\n    }\n    // no match, return all by default\n    return DisplayModes[0];\n  };\n  const [displayMode, setDisplayMode] = useState<SelectableValue>(getDisplayMode(props.composite.displayMode));\n  const setComposite = (value: CompositeItemType) => {\n    _setComposite(value);\n    props.setter(composite.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n  const removeItem = () => {\n    //alert('high');\n    props.remover(composite.order);\n    // call parent remove function\n  };\n\n  const toggleShowName = () => {\n    const currentState = composite.showName;\n    //setShowName(!currentState);\n    setComposite({ ...composite, showName: !currentState });\n  };\n\n  const removeMetric = (index: number) => {\n    let allMetrics = [...props.composite.metrics];\n    allMetrics.splice(index, 1);\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n  const moveUp = () => {\n    props.moveUp(composite.order);\n  };\n  const moveDown = () => {\n    props.moveDown(composite.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(composite.order);\n  };\n\n  const updateMetric = (index: number, value: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].seriesMatch = value;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const updateMetricAlias = (index: number, alias: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].alias = alias;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const addMetric = () => {\n    const newMetric: CompositeMetric = {\n      seriesMatch: '',\n      ID: UUIDv4(),\n      order: 0,\n    };\n    if (!composite.metrics) {\n      const currentMetrics: CompositeMetric[] = [];\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    } else {\n      const currentMetrics: CompositeMetric[] = composite.metrics;\n      newMetric.order = currentMetrics.length;\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    }\n  };\n\n  return (\n    <Card key={`composite-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field label=\"Composite Name\" description=\"Name or Regular Expression\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.name}\n              placeholder=\"\"\n              onChange={(e) => setComposite({ ...composite, name: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Show Name\" description=\"Toggle Display of composite name\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showName}\n              disabled={!composite.showComposite}\n              onChange={toggleShowName}\n            ></Switch>\n          </Field>\n          <Field label=\"Show Value\" description=\"Toggle Display of composite value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showValue}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showValue: !composite.showValue })}\n            />\n          </Field>\n          {/*\n          <Field label=\"Show Timestamp\" description=\"Toggle Display of Timestamp for each value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showTimestampEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showTimestampEnabled: !composite.showTimestampEnabled })}\n            />\n          </Field>\n          <Field label=\"Timestamp Format\" description=\"Format of timestamp to display\" disabled={!composite.showComposite} hidden={!composite.showTimestampEnabled}>\n            <Cascader\n              initialValue={composite.showTimestampFormat}\n              allowCustomValue\n              placeholder=\"\"\n              options={ShowTimestampFormats}\n              onSelect={(val: string) => setComposite({ ...composite, showTimestampFormat: val })}\n            />\n          </Field>\n          <Field label=\"Timestamp Y Offset\" description=\"Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down\" disabled={!composite.showComposite} hidden={!composite.showTimestampEnabled}>\n            <Input\n              value={composite.showTimestampYOffset}\n              type=\"number\"\n              step={1}\n              placeholder=\"0\"\n              onChange={(v) => setComposite({ ...composite, showTimestampYOffset: v.currentTarget.valueAsNumber })}\n            />\n          </Field>\n          */}\n          <Field\n            label=\"Show Members\"\n            description=\"Toggle Display of composite members\"\n            disabled={!composite.showComposite}\n          >\n            <Switch\n              transparent={true}\n              value={composite.showMembers}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showMembers: !composite.showMembers })}\n            />\n          </Field>\n          <Field\n            label=\"Display Mode\"\n            description=\"All will display all members, Triggered will only display those meeting threshold settings\"\n            disabled={!composite.showComposite}\n          >\n            <Select\n              menuShouldPortal={true}\n              value={displayMode}\n              onChange={(v) => {\n                setDisplayMode(v);\n                setComposite({ ...composite, displayMode: v.value });\n              }}\n              options={DisplayModes}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setComposite({ ...composite, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              disabled={!composite.showComposite}\n              value={composite.clickThroughSanitize}\n              onChange={() => setComposite({ ...composite, clickThroughSanitize: !composite.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughOpenNewTab}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, clickThroughOpenNewTab: !composite.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!composite.showComposite} hidden={composite.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughCustomTargetEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite,\n                clickThroughCustomTargetEnabled: !composite.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: composite.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!composite.showComposite} hidden={!composite.clickThroughCustomTargetEnabled}>\n            <Input\n              value={composite.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!composite.showComposite}\n              onChange={(e) => setComposite({ ...composite, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n          <Field disabled={!composite.showComposite}>\n            <Button\n              key=\"addMetric\"\n              variant=\"primary\"\n              icon=\"plus\"\n              disabled={!composite.showComposite}\n              onClick={addMetric}\n            >\n              Add Metric\n            </Button>\n          </Field>\n          {composite.metrics &&\n            composite.metrics.map((item: CompositeMetric, index: number) => {\n              // generate ID if it doesn't exist\n              if (!item.ID) {\n                item.ID = UUIDv4();\n              }\n              return (\n                <CompositeMetricItem\n                  key={`composite-metric-id-${item.ID}`}\n                  metric={item}\n                  index={index}\n                  disabled={!composite.showComposite}\n                  updateMetric={updateMetric}\n                  updateMetricAlias={updateMetricAlias}\n                  removeMetric={removeMetric}\n                  context={props.context}\n                />\n              );\n            })}\n        </FieldSet>\n      </Card.Meta>\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"showComposite\"\n          name={composite.showComposite ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Composite\"\n          onClick={() => setComposite({ ...composite, showComposite: !composite.showComposite })}\n        />\n        <IconButton key=\"copyComposite\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteComposite\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Composite\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, {useState} from 'react';\nimport {StandardEditorProps} from '@grafana/data';\nimport {Button, Collapse, Field, FieldSet, Input, Switch} from '@grafana/ui';\n\nimport {CompositeItem} from './CompositeItem';\nimport {CompositeItemTracker, CompositeItemType, CompositeMetric, DisplayModes} from './types';\nimport {v4 as UUIdv4} from 'uuid';\nimport { ShowTimestampFormats } from 'components/types';\n\nexport interface CompositeEditorSettings {\n  composites: CompositeItemType[];\n  enabled: boolean;\n  animationSpeed: string;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, CompositeEditorSettings> {}\n\nexport const CompositeEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [settings] = useState(context.options.compositeConfig);\n  const [animationSpeed, _setAnimationSpeed] = useState(context.options.compositeConfig.animationSpeed);\n  const [compositesEnabled, _setCompositesEnabled] = useState(context.options.compositeConfig.enabled);\n  const [tracker, _setTracker] = useState((): CompositeItemTracker[] => {\n    if (settings.composites) {\n      const items: CompositeItemTracker[] = [];\n      settings.composites.forEach((value: CompositeItemType, index: number) => {\n        items[index] = {\n          composite: value,\n          order: index,\n          ID: UUIdv4(),\n        };\n      });\n      return items;\n    } else {\n      return [] as CompositeItemTracker[];\n    }\n  });\n\n  const setAnimationSpeed = (val: any) => {\n    _setAnimationSpeed(val);\n    settings.animationSpeed = val;\n    onChange(settings);\n  };\n  const setCompositesEnabled = (val: any) => {\n    _setCompositesEnabled(val);\n    settings.enabled = val;\n    onChange(settings);\n  };\n  const setTracker = (v: CompositeItemTracker[]) => {\n    _setTracker(v);\n    // update the panel config (only the composites themselves, not the tracker)\n    const allComposites: CompositeItemType[] = [];\n    v.forEach((element) => {\n      allComposites.push(element.composite);\n    });\n    const compositeConfig = {\n      composites: allComposites,\n      animationSpeed: settings.animationSpeed,\n      enabled: settings.enabled,\n    };\n    onChange(compositeConfig as any);\n  };\n\n  // tracks composite card collapse state\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].composite;\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `${original.name} Copy`,\n      label: `${original.name} Copy`,\n      order: order,\n      isTemplated: original.isTemplated,\n      displayMode: original.displayMode,\n      enabled: original.enabled,\n      showName: original.showName,\n      showValue: original.showValue,\n      showComposite: original.showComposite,\n      showMembers: original.showMembers,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      metrics: original.metrics,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  const updateComposite = (index: number, value: CompositeItemType) => {\n    tracker[index].composite = value;\n    setTracker([...tracker]);\n  };\n\n  const removeComposite = (compositeIndex: number) => {\n    // find the composite by the compositeIndex\n    const allComposites = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allComposites.length; i++) {\n      if (allComposites[i].order === compositeIndex) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allComposites.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allComposites.length; i++) {\n      allComposites[i].order = i;\n    }\n    setTracker([...allComposites]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const toggleState = [...isOpen];\n    toggleState[index] = !toggleState[index];\n    setIsOpen([...toggleState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `Composite-${order}`,\n      label: `Composite-${order}`,\n      showName: true,\n      showValue: true,\n      showMembers: false,\n      showComposite: true,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      isTemplated: false,\n      enabled: true,\n      metrics: [] as CompositeMetric[],\n      displayMode: DisplayModes[0].value,\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      order: order\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <FieldSet>\n        <Field label=\"Enable Composites\" description=\"Enable/Disable Composites Globally\">\n          <Switch\n            transparent={true}\n            value={compositesEnabled}\n            onChange={() => setCompositesEnabled(!compositesEnabled)}\n          />\n        </Field>\n        <Field label=\"Animation Speed (ms)\" description=\"Animation Speed in milliseconds\" disabled={!settings.enabled}>\n          <Input\n            value={animationSpeed}\n            placeholder=\"500\"\n            onChange={(e: any) => setAnimationSpeed(e.currentTarget.value)}\n          />\n        </Field>\n      </FieldSet>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" disabled={!settings.enabled} onClick={addItem}>\n        Add Composite\n      </Button>\n      {tracker &&\n        tracker.map((item: CompositeItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${item.ID}`}\n              label={item.composite.name}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <CompositeItem\n                key={`composite-item-index-${item.ID}`}\n                ID={item.ID}\n                composite={item.composite}\n                enabled={item.composite.enabled}\n                setter={updateComposite}\n                remover={removeComposite}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Field } from '@grafana/ui';\n\nimport { PolystatThreshold } from './types';\nimport { ThresholdsEditor } from './ThresholdsEditor';\n\nexport interface GlobalThresholdEditorSettings {}\n\ninterface Props extends StandardEditorProps<string | string[] | null, GlobalThresholdEditorSettings> {}\n\nexport const GlobalThresholdEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [globalThresholds, setGlobalThresholds] = useState(context.options.globalThresholdsConfig);\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setGlobalThresholds(val);\n    onChange(val as any);\n  };\n\n  return (\n    <>\n      <Field>\n        <ThresholdsEditor thresholds={globalThresholds} setter={setThresholds} />\n      </Field>\n    </>\n  );\n};\n","import { PanelModel, convertOldAngularValueMappings, ValueMapping } from '@grafana/data';\nimport { config } from \"@grafana/runtime\";\nimport { satisfies, coerce } from \"semver\";\nimport { CompositeItemType, CompositeMetric } from 'components/composites/types';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatThreshold } from './components/thresholds/types';\n\nimport { DisplayModes, FontFamilies, PolygonShapes, PolystatOptions, ShowTimestampFormats, ShowTimestampPositions } from './components/types';\ninterface AngularPolystatOptions {\n  animationSpeed: number;\n  columnAutoSize: boolean;\n  columns: string;\n  defaultClickThrough: string;\n  defaultClickThroughNewTab: boolean;\n  defaultClickThroughSanitize: boolean;\n  displayLimit: number;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  fontAutoColor: boolean;\n  fontAutoScale: boolean;\n  fontSize: number;\n  fontType: string,\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalOperatorName: string;\n  globalThresholds: AngularThreshold[];\n  globalUnitFormat: string;\n  gradientEnabled: boolean;\n  hexagonSortByDirection: number;\n  hexagonSortByField: string;\n  maxMetrics: number;\n  polygonBorderColor: string;\n  polygonBorderSize: number;\n  polygonGlobalFillColor: string;\n  radius: string;\n  radiusAutoSize: boolean;\n  regexPattern: string;\n  rowAutoSize: boolean;\n  rows: string;\n  shape: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipEnabled: boolean;\n  tooltipFontSize: number;\n  tooltipFontType: string,\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortField: string;\n  tooltipTimestampEnabled: boolean;\n  valueEnabled: boolean;\n}\n\nexport interface AngularThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface AngularOverride {\n  clickThrough: string;\n  colors: string[];\n  decimals: number;\n  enabled: true;\n  label: string;\n  metricName: string;\n  newTabEnabled: boolean;\n  operatorName: string;\n  prefix: string;\n  sanitizeURLEnabled: boolean;\n  suffix: string;\n  unitFormat: string;\n  thresholds: AngularThreshold[];\n}\nexport interface AngularSavedOverrides {\n  savedOverrides: AngularOverride[];\n}\n\nexport interface CompositeMembers {\n  seriesName: string;\n}\nexport interface CompositeItem {\n  animateMode: string;\n  clickThrough: string;\n  compositeName: string;\n  displayName: string;\n  enabled: boolean;\n  hideMembers: boolean;\n  label: string;\n  members: CompositeMembers[];\n  newTabEnabled: boolean;\n  sanitizeURLEnabled: boolean;\n  sanitizedURL: string;\n  showName: boolean;\n  showValue: boolean;\n  thresholdLevel: number;\n}\n\nexport interface AngularSavedComposites {\n  savedComposites: CompositeItem[];\n}\n\n/**\n * This is called when the panel is imported or reloaded\n */\nexport const PolystatPanelMigrationHandler = (panel: PanelModel<PolystatOptions>): Partial<PolystatOptions> => {\n  //@ts-ignore\n  if (!panel.polystat) {\n    // not angular, just return the options if currently set\n    if (!panel.options) {\n      // This happens on the first load or when migrating from angular\n      return {} as any;\n    }\n    // have settings, return them unchanged\n    return panel.options;\n  }\n  //@ts-ignore\n  const newDefaults = migrateDefaults(panel.polystat);\n  let options = newDefaults;\n  //@ts-ignore\n  delete panel.polystat;\n  //@ts-ignore\n  const migratedOverrides = migrateOverrides(panel);\n  //@ts-ignore\n  const migratedComposites = migrateComposites(panel, newDefaults.compositeConfig.animationSpeed);\n  //console.log(JSON.stringify(newDefaults, null, 2));\n  options.compositeConfig = migratedComposites.compositeConfig;\n  options.overrideConfig = migratedOverrides.overrideConfig;\n  // convert range and value maps\n  const newMaps = migrateValueAndRangeMaps(panel);\n  panel.fieldConfig = {\n    defaults: {\n      mappings: newMaps,\n    },\n    overrides: [],\n  };\n  //@ts-ignore\n  delete panel.mappingType;\n  //@ts-ignore\n  delete panel.rangeMaps;\n  //@ts-ignore\n  delete panel.valueMaps;\n  // merge defaults\n  //@ts-ignore\n  delete panel.savedComposites;\n  //@ts-ignore\n  delete panel.savedOverrides;\n  //@ts-ignore\n  delete panel.colors;\n\n  // clean up undefined\n  // @ts-ignore\n  Object.keys(panel).forEach((key) => (panel[key] === undefined ? delete panel[key] : {}));\n  // @ts-ignore\n  Object.keys(options).forEach((key) => (options[key] === undefined ? delete options[key] : {}));\n\n  return options;\n};\n\n// split into three parts\n// config normally found in \"polystat\" section\n// then \"savedOverrides\" and \"savedComposites\"\n// a \"good\" react config just has an \"options\" section\nexport const migrateDefaults = (angular: AngularPolystatOptions) => {\n  let options: PolystatOptions = {\n    autoSizeColumns: true,\n    autoSizeRows: true,\n    autoSizePolygons: true,\n    ellipseCharacters: 18,\n    ellipseEnabled: false,\n    globalAutoScaleFonts: true,\n    globalClickthrough: '',\n    globalClickthroughNewTabEnabled: false,\n    globalClickthroughSanitizedEnabled: false,\n    globalClickthroughCustomTargetEnabled: false,\n    globalClickthroughCustomTarget: '',\n    globalDecimals: 2,\n    globalDisplayMode: 'all',\n    globalDisplayTextTriggeredEmpty: '',\n    globalFillColor: '',\n    globalFontSize: 8,\n    globalGradientsEnabled: false,\n    globalOperator: 'mean',\n    globalPolygonBorderSize: 1,\n    globalPolygonBorderColor: '',\n    globalPolygonSize: 50,\n    globalRegexPattern: '',\n    globalShape: PolygonShapes.HEXAGON_POINTED_TOP,\n    globalShowValueEnabled: true,\n    globalShowTooltipColumnHeadersEnabled: true,\n    globalShowTimestampEnabled: false,\n    globalShowTimestampFormat: ShowTimestampFormats[0].value,\n    globalShowTimestampPosition: ShowTimestampPositions[0].value,\n    globalShowTimestampFontSize: 12,\n    globalShowTimestampYOffset: 0,\n    globalTextFontColor: '#000000',\n    globalTextFontAutoColor: '#000000',\n    globalTextFontAutoColorEnabled: false,\n    globalTextFontFamily: FontFamilies.INTER,\n    globalThresholdsConfig: [],\n    globalTooltipsEnabled: true,\n    globalTooltipsShowTimestampEnabled: true,\n    globalTooltipsFontFamily: FontFamilies.INTER,\n    globalUnitFormat: '',\n    layoutDisplayLimit: 100,\n    layoutNumColumns: 8,\n    layoutNumRows: 8,\n    panelHeight: undefined,\n    panelWidth: undefined,\n    panelId: 0,\n    radius: 100,\n    renderTime: undefined,\n    sortByField: '',\n    sortByDirection: 0,\n    overrideConfig: {\n      overrides: [],\n    },\n    compositeGlobalAliasingEnabled: false,\n    compositeConfig: {\n      animationSpeed: '',\n      composites: [],\n      enabled: false,\n    },\n    tooltipPrimarySortDirection: 0,\n    tooltipPrimarySortByField: '',\n    tooltipSecondarySortDirection: 0,\n    tooltipSecondarySortByField: '',\n    tooltipDisplayMode: 'all',\n    tooltipDisplayTextTriggeredEmpty: '',\n  };\n\n  if (angular.animationSpeed) {\n    if (options.compositeConfig) {\n      options.compositeConfig.animationSpeed = angular.animationSpeed.toString();\n    }\n  }\n  if (angular.columnAutoSize) {\n    options.autoSizeColumns = angular.columnAutoSize;\n  }\n  if (angular.columns) {\n    let numColumns = parseInt(angular.columns, 10);\n    if (isNaN(numColumns) || numColumns < 1) {\n      numColumns = 8;\n    }\n    options.layoutNumColumns = numColumns;\n  }\n  if (angular.defaultClickThrough) {\n    options.globalClickthrough = angular.defaultClickThrough;\n  }\n  if (angular.defaultClickThroughNewTab) {\n    options.globalClickthroughNewTabEnabled = angular.defaultClickThroughNewTab;\n  }\n  if (angular.defaultClickThroughSanitize) {\n    options.globalClickthroughSanitizedEnabled = angular.defaultClickThroughSanitize;\n  }\n  if (angular.displayLimit) {\n    options.layoutDisplayLimit = angular.displayLimit;\n  }\n  if (angular.ellipseCharacters) {\n    options.ellipseCharacters = angular.ellipseCharacters;\n  }\n  if (angular.ellipseEnabled) {\n    options.ellipseEnabled = angular.ellipseEnabled;\n  }\n  if (angular.fontAutoColor) {\n    options.globalTextFontAutoColorEnabled = angular.fontAutoColor;\n  }\n  if (angular.fontAutoScale) {\n    options.globalAutoScaleFonts = angular.fontAutoScale;\n  }\n  if (angular.fontSize) {\n    options.globalFontSize = angular.fontSize;\n  }\n  options.globalTextFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTextFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.globalDecimals) {\n    options.globalDecimals = angular.globalDecimals;\n  }\n  if (angular.globalDisplayMode) {\n    options.globalDisplayMode = angular.globalDisplayMode;\n  }\n  if (angular.globalDisplayTextTriggeredEmpty) {\n    options.globalDisplayTextTriggeredEmpty = angular.globalDisplayTextTriggeredEmpty;\n  }\n  if (angular.globalOperatorName) {\n    options.globalOperator = convertOperators(angular.globalOperatorName);\n  }\n  if (angular.globalThresholds) {\n    options.globalThresholdsConfig = [];\n    for (const threshold of angular.globalThresholds) {\n      const migratedThreshold: PolystatThreshold = {\n        value: threshold.value,\n        state: threshold.state,\n        color: threshold.color,\n      };\n      options.globalThresholdsConfig.push(migratedThreshold);\n    }\n  }\n\n  if (angular.globalUnitFormat) {\n    options.globalUnitFormat = angular.globalUnitFormat;\n  }\n  if (angular.gradientEnabled) {\n    options.globalGradientsEnabled = angular.gradientEnabled;\n  }\n  if (angular.hexagonSortByDirection) {\n    options.sortByDirection = angular.hexagonSortByDirection;\n  }\n  if (angular.hexagonSortByField) {\n    options.sortByField = angular.hexagonSortByField;\n  }\n  if (angular.polygonBorderColor) {\n    options.globalPolygonBorderColor = angular.polygonBorderColor;\n  }\n  if (angular.polygonBorderSize) {\n    options.globalPolygonBorderSize = angular.polygonBorderSize;\n  }\n  if (angular.polygonGlobalFillColor) {\n    options.globalFillColor = angular.polygonGlobalFillColor;\n  }\n  if (angular.radius) {\n    let radius = parseFloat(angular.radius);\n    if (isNaN(radius) || radius < 0) {\n      radius = 0;\n    }\n    options.radius = radius;\n  }\n  if (angular.radiusAutoSize) {\n    options.autoSizePolygons = angular.radiusAutoSize;\n  }\n  if (angular.regexPattern) {\n    options.globalRegexPattern = angular.regexPattern;\n  }\n  if (angular.rowAutoSize) {\n    options.autoSizeRows = angular.rowAutoSize;\n  }\n  if (angular.rows) {\n    let numRows = parseInt(angular.rows, 10);\n    if (isNaN(numRows) || numRows < 1) {\n      numRows = 8;\n    }\n    options.layoutNumRows = numRows;\n  }\n\n  if (angular.shape) {\n    switch (angular.shape) {\n      case 'circle':\n        options.globalShape = PolygonShapes.CIRCLE;\n        break;\n      case 'square':\n        options.globalShape = PolygonShapes.SQUARE;\n        break;\n      case 'hexagon_pointed_top':\n      default:\n        options.globalShape = PolygonShapes.HEXAGON_POINTED_TOP;\n    }\n  }\n  if (angular.tooltipDisplayMode) {\n    options.tooltipDisplayMode = angular.tooltipDisplayMode;\n  }\n  if (angular.tooltipDisplayTextTriggeredEmpty) {\n    options.tooltipDisplayTextTriggeredEmpty = angular.tooltipDisplayTextTriggeredEmpty;\n  }\n  if (angular.tooltipEnabled) {\n    options.globalTooltipsEnabled = angular.tooltipEnabled;\n  }\n  if (angular.tooltipPrimarySortDirection) {\n    options.tooltipPrimarySortDirection = angular.tooltipPrimarySortDirection;\n  }\n  if (angular.tooltipPrimarySortField) {\n    options.tooltipPrimarySortByField = angular.tooltipPrimarySortField;\n  }\n  if (angular.tooltipSecondarySortDirection) {\n    options.tooltipSecondarySortDirection = angular.tooltipSecondarySortDirection;\n  }\n  if (angular.tooltipSecondarySortField) {\n    options.tooltipSecondarySortByField = angular.tooltipSecondarySortField;\n  }\n  if (angular.tooltipTimestampEnabled) {\n    options.globalTooltipsShowTimestampEnabled = angular.tooltipTimestampEnabled;\n  }\n  options.globalTooltipsFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTooltipsFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.valueEnabled) {\n    options.globalShowValueEnabled = angular.valueEnabled;\n  }\n\n  return options;\n};\n\nexport const migrateOverrides = (angular: AngularSavedOverrides) => {\n  let options = {} as any;\n\n  options.overrideConfig = {\n    overrides: [],\n  };\n  // Overrides\n  if (angular.savedOverrides?.length) {\n    let order = 0;\n    for (const seriesOverride of angular.savedOverrides) {\n      let anOverride: OverrideItemType = {\n        label: '',\n        metricName: '',\n        alias: '',\n        thresholds: [],\n        colors: [],\n        unitFormat: '',\n        decimals: '',\n        scaledDecimals: 0,\n        enabled: true,\n        operatorName: 'avg',\n        prefix: '',\n        suffix: '',\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: '',\n        order: order,\n        showTimestampEnabled: false,\n        showTimestampFormat: ShowTimestampFormats[0].value,\n        showTimestampYOffset: 0,\n      };\n      for (const p of Object.keys(seriesOverride)) {\n        // @ts-ignore\n        const v = seriesOverride[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'clickThrough':\n            anOverride.clickThrough = v;\n            break;\n          case 'colors':\n            anOverride.colors = v;\n            break;\n          case 'decimals':\n            anOverride.decimals = v;\n            break;\n          case 'enabled':\n            anOverride.enabled = v;\n            break;\n          case 'label':\n            anOverride.label = v;\n            break;\n          case 'metricName':\n            anOverride.metricName = v;\n            break;\n          case 'newTabEnabled':\n            anOverride.clickThroughOpenNewTab = v;\n            break;\n          case 'operatorName':\n            anOverride.operatorName = convertOperators(v);\n            break;\n          case 'prefix':\n            anOverride.prefix = v;\n            break;\n          case 'sanitizeURLEnabled':\n            anOverride.clickThroughSanitize = v;\n            break;\n          case 'suffix':\n            anOverride.suffix = v;\n            break;\n          case 'thresholds':\n            /*\n              \"color\": \"#e5ac0e\",\n              \"state\": 1,\n              \"value\": 78\n              */\n            anOverride.thresholds = [];\n            for (const threshold of v) {\n              const migratedThreshold: PolystatThreshold = {\n                value: threshold.value,\n                state: threshold.state,\n                color: threshold.color,\n              };\n              anOverride.thresholds.push(migratedThreshold);\n            }\n            break;\n          case 'unitFormat':\n            anOverride.unitFormat = v;\n            break;\n          default:\n            console.log('Ignore override migration:', p, v);\n        }\n      }\n      options.overrideConfig.overrides.push(anOverride);\n      order++;\n    }\n  }\n  return options;\n};\n\nexport const convertOperators = (operator: string) => {\n  switch (operator) {\n    case 'avg':\n      return 'mean';\n    case 'current':\n      return 'last'; // lastNotNull?\n    case 'time_step':\n      return 'step';\n    case 'total':\n      return 'sum';\n    default:\n      return operator;\n  }\n};\n\nexport const migrateValueAndRangeMaps = (panel: any) => {\n  // value maps first\n  panel.mappingType = 1;\n  let newValueMappings: ValueMapping[] = [];\n  if (panel.valueMaps !== undefined) {\n    newValueMappings = convertOldAngularValueMappings(panel);\n  }\n  // range maps second\n  panel.mappingType = 2;\n  let newRangeMappings: ValueMapping[] = [];\n  if (panel.rangeMaps !== undefined) {\n    newRangeMappings = convertOldAngularValueMappings(panel);\n  }\n  // append together\n  const newMappings = newValueMappings.concat(newRangeMappings);\n  // get uniques only\n  return [...new Map(newMappings.map((v) => [JSON.stringify(v), v])).values()];\n};\n\nexport const migrateComposites = (angular: AngularSavedComposites, animationSpeed: string) => {\n  let options = {} as any;\n  // Composites\n  options.compositeConfig = {\n    composites: [],\n    enabled: true,\n    animationSpeed: animationSpeed,\n  };\n\n  if (angular.savedComposites?.length) {\n    let index = 0;\n    for (const composite of angular.savedComposites) {\n      let aComposite: CompositeItemType = {\n        name: `COMPOSITE-${index}`,\n        label: `COMPOSITE-${index}`,\n        order: index,\n        isTemplated: false,\n        displayMode: DisplayModes[0].value,\n        enabled: true,\n        showName: true,\n        showValue: true,\n        showComposite: true,\n        showMembers: false,\n        showTimestampEnabled: false,\n        showTimestampFormat: ShowTimestampFormats[0].value,\n        showTimestampYOffset: 0,\n        metrics: [],\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: ''\n      };\n      index++;\n      for (const p of Object.keys(composite)) {\n        // @ts-ignore\n        const v = composite[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'animateMode':\n            if (v !== 'all') {\n              aComposite.displayMode = DisplayModes[1].value;\n            }\n            break;\n          case 'clickThrough':\n            aComposite.clickThrough = v;\n            break;\n          case 'compositeName':\n            aComposite.name = v;\n            break;\n          // Ignore\n          case 'displayName':\n            break;\n          case 'enabled':\n            // this is now .showComposite\n            aComposite.showComposite = v;\n            break;\n          case 'hideMembers':\n            aComposite.showMembers = !v;\n            break;\n          case 'label':\n            aComposite.label = v;\n            break;\n          case 'members':\n            /*\n              {\n                \"$$hashKey\": \"object:150\",\n                \"seriesName\": \"/P2/\"\n              }\n              */\n            let memberIndex = 0;\n            let members: CompositeMetric[] = [];\n            // not sure about this...\n            for (const aMember of Object.keys(v)) {\n              const x = v[aMember];\n              let member: CompositeMetric = {\n                seriesMatch: x.seriesName,\n                order: memberIndex,\n              };\n              members.push(member);\n              memberIndex++;\n            }\n            aComposite.metrics = members;\n            break;\n          case 'newTabEnabled':\n            aComposite.clickThroughOpenNewTab = v;\n            break;\n          case 'sanitizeURLEnabled':\n            aComposite.clickThroughSanitize = v;\n            break;\n          // Ignore\n          case 'sanitizedURL':\n            break;\n          case 'showName':\n            aComposite.showName = v;\n            break;\n          case 'showValue':\n            aComposite.showValue = v;\n            break;\n          default:\n            console.log('Ignore composite migration:', p, v);\n        }\n      }\n      options.compositeConfig.composites.push(aComposite);\n    }\n  }\n  return options;\n};\n\n/**\n * This is called when the panel changes from another panel\n *\n * not currently used\n */\nexport const PolystatPanelChangedHandler = (\n  panel: PanelModel<Partial<PolystatOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // Changing from angular polystat panel\n  if (prevPluginId === 'polystat' && prevOptions.angular) {\n    console.log('detected old panel');\n    const oldOpts = prevOptions.angular;\n    console.log(JSON.stringify(oldOpts));\n  }\n\n  return {};\n};\n\n// Roboto font was removed Dec 1, 2022, and releases after that date should not attempt to use it\nexport const hasRobotoFont = () => {\n  const version = coerce(config.buildInfo.version);\n  if (version !== null) {\n    if (satisfies(version, \"<9.4.0\")) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\n\nimport {\n  DisplayModes,\n  FontFamilyOptions,\n  FontFamilyOptionsLegacy,\n  OperatorOptions,\n  PolygonNamedShapes,\n  PolystatOptions,\n  ShowTimestampFormats,\n  ShowTimestampPositions,\n  SortByFieldOptions,\n  SortOptions,\n} from './components/types';\nimport { CompositeItemType } from './components/composites/types';\nimport { OverrideEditor } from './components/overrides/OverrideEditor';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatPanel } from './components/PolystatPanel';\nimport {\n  GLOBAL_FILL_COLOR_RGBA,\n  GLOBAL_BORDER_COLOR_RGBA,\n  GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n  GLOBAL_TEXT_FONT_FAMILY,\n  GLOBAL_TOOLTIP_FONT_FAMILY,\n  GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n  GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n} from './components/defaults';\nimport { CompositeEditor } from './components/composites/CompositeEditor';\nimport { PolystatThreshold } from './components/thresholds/types';\nimport { GlobalThresholdEditor } from './components/thresholds/GlobalThresholdEditor';\nimport { PolystatDataSuggestionsSupplier } from './components/suggestions';\nimport { hasRobotoFont, PolystatPanelMigrationHandler } from './migrations';\n\n\nexport const plugin = new PanelPlugin<PolystatOptions>(PolystatPanel)\n  .setMigrationHandler(PolystatPanelMigrationHandler)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.DisplayName,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Links,\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Unit,\n    ],\n    standardOptions: {\n      [FieldConfigProperty.Mappings]: {},\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder\n      .addBooleanSwitch({\n        name: 'Auto Size Columns',\n        path: 'autoSizeColumns',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set columns based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumColumns',\n        name: 'Columns',\n        description: 'Use specific number of columns',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeColumns,\n      })\n      .addBooleanSwitch({\n        name: 'Auto Size Rows',\n        path: 'autoSizeRows',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set rows based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumRows',\n        name: 'Rows',\n        description: 'Use specific number of rows',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeRows,\n      })\n      .addNumberInput({\n        path: 'layoutDisplayLimit',\n        name: 'Display Limit',\n        description: 'Maximum number of polygons to display (0 for unlimited)',\n        defaultValue: 100,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Layout'],\n      })\n\n      .addBooleanSwitch({\n        name: 'Auto Size Polygons',\n        path: 'autoSizePolygons',\n        defaultValue: true,\n        category: ['Sizing'],\n        description: 'Automatically sets size of polygon for best fit',\n      })\n      .addNumberInput({\n        name: 'Polygon Size in pixels',\n        path: 'globalPolygonSize',\n        description: 'Use specific size for polygons',\n        defaultValue: 25,\n        settings: {\n          placeHolder: 'Auto',\n          min: 1,\n        },\n        category: ['Sizing'],\n        showIf: (c) => !c.autoSizePolygons,\n      })\n      .addNumberInput({\n        name: 'Border Size',\n        path: 'globalPolygonBorderSize',\n        description: 'Border size for each polygon',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n        },\n        category: ['Sizing'],\n      })\n      // font selection\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Auto Scale Fonts',\n        path: 'globalAutoScaleFonts',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Automatically sets label and value font size based on size of polygon',\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Text'],\n        description: 'Default font size to use when Auto is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // font color\n      // auto set font color\n      .addBooleanSwitch({\n        name: 'Automate Font Color',\n        path: 'globalTextFontAutoColorEnabled',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Sets font color to match theme',\n      })\n      .addColorPicker({\n        name: 'Font Color',\n        path: 'globalTextFontColor',\n        category: ['Text'],\n        defaultValue: '#000000',\n        description: 'Font color to use for all text on polygon',\n        showIf: (c) => !c.globalTextFontAutoColorEnabled,\n      })\n\n      // ellipse enabled\n      .addBooleanSwitch({\n        name: 'Use Ellipses',\n        path: 'ellipseEnabled',\n        defaultValue: false,\n        category: ['Text'],\n        description: 'Use Ellipses when character count is exceeded',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // ellipse num chars\n      .addNumberInput({\n        name: 'Ellipse Characters',\n        path: 'ellipseCharacters',\n        defaultValue: 18,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Text'],\n        description: 'Default number of characters to display before showing ellipses',\n        showIf: (c) => c.ellipseEnabled && !c.globalAutoScaleFonts,\n      })\n\n      // Sorting\n      .addSelect({\n        path: 'sortByDirection',\n        name: 'Sort By Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Sorting'],\n        defaultValue: 1,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'sortByField',\n        name: 'Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'name',\n        category: ['Sorting'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // tooltips\n      .addBooleanSwitch({\n        name: 'Enable Tooltips',\n        path: 'globalTooltipsEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Provides tooltips for each polygon',\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Show timestamp',\n        path: 'globalTooltipsShowTimestampEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show timestamp at bottom of tooltip',\n      })\n      // show tooltip column headers\n      .addBooleanSwitch({\n        name: 'Show Column Headers',\n        path: 'globalShowTooltipColumnHeadersEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show Column headers on tooltip'\n      })\n      // display modes\n      .addSelect({\n        path: 'tooltipDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Tooltips'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'tooltipDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed by tooltip when there are no triggered thresholds and tooltip display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Tooltips'],\n      })\n      // primary sort direction\n      .addSelect({\n        path: 'tooltipPrimarySortDirection',\n        name: 'Primary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipPrimarySortByField',\n        name: 'Primary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'thresholdLevel',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // secondary sort direction\n      .addSelect({\n        path: 'tooltipSecondarySortDirection',\n        name: 'Secondary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipSecondarySortByField',\n        name: 'Secondary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'value',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // globals generic\n      //\n      // display mode\n      .addSelect({\n        path: 'globalDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Global'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'globalDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed in polygon when there are no triggered thresholds and global display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Global'],\n      })\n\n      // show value\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalShowValueEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Show value on the polygon',\n      })\n\n      // displays timestamp on polygons\n      .addBooleanSwitch({\n        name: 'Show Timestamp',\n        path: 'globalShowTimestampEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Show timestamp of metric on the polygon',\n      })\n      .addSelect({\n        name: 'Timestamp Format',\n        path: 'globalShowTimestampFormat',\n        description: 'Format of timestamp to display',\n        category: ['Global'],\n        defaultValue: ShowTimestampFormats[2].value,\n        settings: {\n          options: ShowTimestampFormats,\n          allowCustomValue: true,\n        },\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalShowTimestampFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Global'],\n        description: 'Default font size to use when Global Auto Scale Fonts is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      .addSelect({\n        name: 'Timestamp Position',\n        path: 'globalShowTimestampPosition',\n        description: 'Position of Timestamp',\n        category: ['Global'],\n        defaultValue: ShowTimestampPositions[1].value,\n        settings: {\n          options: ShowTimestampPositions,\n          allowCustomValue: false,\n        },\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n      .addNumberInput({\n        name: 'Timestamp Y-Offset',\n        path: 'globalShowTimestampYOffset',\n        description: 'Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down',\n        defaultValue: 0,\n        settings: {\n          integer: true,\n        },\n        category: ['Global'],\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n\n      // shape\n      .addSelect({\n        name: 'Shape',\n        path: 'globalShape',\n        description: 'Shape of polygon',\n        category: ['Global'],\n        defaultValue: PolygonNamedShapes[0].value,\n        settings: {\n          options: PolygonNamedShapes,\n        },\n      })\n\n      // gradient colors enabled\n      .addBooleanSwitch({\n        name: 'Use Color Gradients',\n        path: 'globalGradientsEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Applies gradient color effect to all polygons',\n      })\n      .addColorPicker({\n        name: 'Global Fill Color',\n        path: 'globalFillColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_FILL_COLOR_RGBA,\n        description: 'Color to use when no overrides or thresholds apply to polygon',\n      })\n\n      // border color\n      .addColorPicker({\n        name: 'Global Border Color',\n        path: 'globalPolygonBorderColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_BORDER_COLOR_RGBA,\n        description: 'Color of polygon border',\n      })\n      // unit\n      .addUnitPicker({\n        name: 'Unit',\n        path: 'globalUnitFormat',\n        defaultValue: 'short',\n        category: ['Global'],\n        description: 'Use this unit format when it is not specified in overrides or detected in data',\n      })\n      // stat (global operator)\n      .addSelect({\n        name: 'Stat',\n        path: 'globalOperator',\n        description: 'Statistic to display',\n        category: ['Global'],\n        defaultValue: OperatorOptions[0].value,\n        settings: {\n          options: OperatorOptions,\n        },\n      })\n      // decimals\n      .addNumberInput({\n        name: 'Decimals',\n        path: 'globalDecimals',\n        description: 'Display specified number of decimals',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Global'],\n      })\n      .addCustomEditor({\n        name: 'Global Thresholds',\n        id: 'globalThresholdsConfig',\n        path: 'globalThresholdsConfig',\n        description: 'Default thresholds to be applied to all metrics that do not have an override',\n        editor: GlobalThresholdEditor,\n        defaultValue: [] as PolystatThreshold[],\n        category: ['Global'],\n      })\n      // default clickthrough\n      .addTextInput({\n        name: 'Default Clickthrough',\n        path: 'globalClickthrough',\n        description: 'URL to use when none are defined by overrides or composites',\n        category: ['Global'],\n        defaultValue: '',\n      })\n      // sanitize clickthrough\n      .addBooleanSwitch({\n        name: 'Sanitize URL',\n        path: 'globalClickthroughSanitizedEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Sanitizes clickthrough url',\n      })\n      // open in new tab\n      .addBooleanSwitch({\n        name: 'Open URL In New Tab',\n        path: 'globalClickthroughNewTabEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Opens clickthrough in a new tab',\n      })\n      .addBooleanSwitch({\n        name: 'Enable Custom URL Target',\n        path: 'globalClickthroughCustomTargetEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Use custom target for global clickthrough (this overrides the new tab setting above). Typical values are: _blank|_self|_parent|_top|framename',\n        showIf: (c) => !c.globalClickthroughNewTabEnabled,\n      })\n      .addTextInput({\n        name: 'Custom URL Target',\n        path: 'globalClickthroughCustomTarget',\n        description:\n          'Provide a different target to be set in the target attribute of the clickthrough. Typical values are: _blank|_self|_parent|_top|framename',\n        category: ['Global'],\n        defaultValue: '',\n        showIf: (c) => c.globalClickthroughCustomTargetEnabled,\n      })\n\n      // aliasing\n      .addTextInput({\n        name: 'Global Regex',\n        path: 'globalRegexPattern',\n        description:\n          'The values in the specified column are filtered and displayed according to this regular expression. Ex: String: Url|broadcom.com|mirror|location-1 regex: /Url&#92;|(.*?)&#92;|/ Output: broadcom.com',\n        category: ['Global Aliasing'],\n        defaultValue: '',\n      })\n      .addCustomEditor({\n        name: 'Overrides',\n        id: 'overrideConfig',\n        path: 'overrideConfig',\n        description: 'Overrides for multiple metrics',\n        editor: OverrideEditor,\n        defaultValue: {\n          overrides: [] as OverrideItemType[],\n        },\n        category: ['Overrides'],\n      })\n      // allow enabling / disabling global aliasing for composite hexagon names\n      .addBooleanSwitch({\n        name: 'Composite Global Aliasing',\n        path: 'compositeGlobalAliasingEnabled',\n        defaultValue: false,\n        description: 'Enable / Disable composite global aliasing',\n        category: ['Composites'],\n      })\n      .addCustomEditor({\n        name: 'Composites',\n        id: 'compositeConfig',\n        path: 'compositeConfig',\n        description: 'Composites allow you to roll up multiple metrics into a single polygon',\n        editor: CompositeEditor,\n        defaultValue: {\n          composites: [] as CompositeItemType[],\n          enabled: true,\n          animationSpeed: '1500',\n        },\n        category: ['Composites'],\n      });\n  })\n  .setSuggestionsSupplier(new PolystatDataSuggestionsSupplier());\n","import { VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { PolystatOptions } from './types';\n\nexport class PolystatDataSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary: ds } = builder;\n\n    if (!ds.hasData) {\n      return;\n    }\n    if (!ds.hasNumberField) {\n      return;\n    }\n\n    const list = builder.getListAppender<PolystatOptions, {}>({\n      name: 'Polystat',\n      pluginId: 'grafana-polystat-panel',\n      options: {},\n    });\n\n    list.append({\n      name: 'Polystat',\n    });\n  }\n}\n"],"names":["Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","get","self","key","doUse","node","hit","value","isStale","del","now","Date","unshiftNode","maxAge","diff","trim","walker","tail","prev","length","delete","removeNode","Entry","constructor","this","forEachStep","fn","thisp","undefined","call","module","exports","options","max","TypeError","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","head","next","keys","toArray","map","k","values","Map","dump","v","e","filter","h","dumpLru","set","len","has","item","unshift","peek","pop","load","arr","l","expiresAt","prune","prototype","iterator","list","push","arguments","i","Node","create","Error","pushNode","res","shift","forEachReverse","n","getReverse","mapReverse","reduce","initial","acc","reduceReverse","Array","toArrayReverse","slice","from","to","ret","sliceReverse","splice","start","deleteCount","nodes","inserted","reverse","p","er","ANY","Comparator","comp","parseOptions","loose","split","join","debug","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","SemVer","toString","test","cmp","intersects","Range","includePrerelease","startsWith","includes","safeRe","range","raw","format","parseRange","c","first","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","comparators","size","result","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","b","compareBuild","inc","release","identifier","identifierBase","base","Number","isNaN","s","eq","neq","gt","gte","lt","lte","op","String","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","exec","index","lastIndex","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","sort","internalRe","constants","identifiers","valid","clean","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","env","NODE_DEBUG","args","console","error","numeric","anum","bnum","looseOption","Object","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__4201__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__5959__","hasOwn","hasOwnProperty","classNames","classes","arg","appendClass","parseValue","isArray","apply","newClass","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","obj","prop","toStringTag","PolygonShapes","PolygonNamedShapes","label","OperatorOptions","SortOptions","SortByFieldOptions","DisplayModes","FontFamilies","FontFamilyOptions","FontFamilyOptionsLegacy","ShowTimestampFormats","TimestampPositions","ShowTimestampPositions","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","byteToHex","substr","offset","uuid","buf","rnds","random","ThresholdStates","ThresholdItem","styles","useStyles2","getThresholdStyles","threshold","setThreshold","useState","thresholdId","aKey","getThreshold","state","Input","disabled","type","step","ID","onChange","valueSetter","currentTarget","div","className","inputPrefix","colorPicker","ColorPicker","color","colorSetter","enableNamedColors","suffix","Select","menuShouldPortal","stateSetter","IconButton","variant","tooltip","onClick","remover","theme","css","spacing","Color","asHex","g","asRGB","blendWith","col","Math","round","Mul","RGBToHex","rgb","sep","indexOf","RGBAToHex","orig","alpha","hex","parseInt","parseFloat","fromHex","substring","bigint","GLOBAL_FILL_COLOR_RGBA","DEFAULT_OK_COLOR_HEX","DEFAULT_OK_COLOR","DEFAULT_WARNING_COLOR_HEX","DEFAULT_WARNING_COLOR","DEFAULT_CRITICAL_COLOR_HEX","DEFAULT_CRITICAL_COLOR","GLOBAL_TEXT_FONT_FAMILY","INTER","GLOBAL_TOOLTIP_FONT_FAMILY","GLOBAL_TEXT_FONT_FAMILY_LEGACY","ROBOTO","GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY","ThresholdsEditor","tracker","_setTracker","thresholds","items","order","UUIdv4","theme2","useTheme2","oldTheme","useTheme","setTracker","allThresholds","element","setter","updateThresholdValue","orderedThresholds","orderBy","updateThresholdColor","useColor","visualization","getColorByName","getColorForTheme","updateThresholdState","colorForThresholdState","removeThreshold","removeIndex","Button","fill","icon","aTracker","getMetricHints","frames","metricHints","hintValue","aField","fields","FieldType","number","labels","appendLabels","aLabel","config","displayNameFromDS","OverrideItem","props","setMetricHints","override","_setOverride","setOverride","visibleIcon","hiddenIcon","operatorName","setOperatorName","getOperator","useEffect","context","data","hints","metricName","Card","Meta","FieldSet","Field","description","enabled","placeholder","Cascader","initialValue","allowCustomValue","onSelect","val","hidden","alias","decimals","UnitPicker","unitFormat","span","clickThrough","Switch","transparent","clickThroughSanitize","clickThroughOpenNewTab","clickThroughCustomTargetEnabled","clickThroughCustomTarget","Actions","moveUp","moveDown","createDuplicate","OverrideEditor","settings","overrideConfig","overrides","allOverrides","isOpen","setIsOpen","openStates","updateOverride","showTimestampEnabled","showTimestampFormat","showTimestampYOffset","scaledDecimals","colors","arrayMove","oldIndex","newIndex","removeOverride","Collapse","onToggle","currentState","toggleOpener","collapsible","thirdPi","PI","angles","pointX","pointY","floor","createCoords","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","end","clamp","param","placement","axis","getAxisLength","getAlignmentAxis","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","isRTL","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","getNodeName","isNode","nodeName","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","isTableElement","isContainingBlock","webkit","isWebKit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","concat","visualViewport","frameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","topLayer","clippingAncestors","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","getClientRects","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","isStart","lr","rl","bt","getSideList","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","sides","mainAlignmentSide","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","_overflowsData$map$so","mergedOptions","platformWithCache","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","core","S","ref","REACT_TOOLTIP_DISABLE_CORE_STYLES","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","warn","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","elementReference","tooltipReference","tooltipArrowReference","place","middlewares","border","tooltipStyles","tooltipArrowStyles","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","then","u","borderBottom","borderRight","A","setTimeout","clearTimeout","cancel","O","T","SVGElement","getPropertyValue","C","parentElement","scrollingElement","L","anchorRefs","activeAnchor","current","attach","detach","setActiveAnchor","N","getTooltipData","I","B","fixed","noArrow","clickable","show","closing","dark","light","success","warning","info","D","forwardRef","classNameArrow","anchorId","anchorSelect","events","openOnClick","w","positionStrategy","wrapper","E","delayShow","delayHide","float","closeOnEsc","closeOnScroll","j","closeOnResize","openEvents","q","closeEvents","H","globalCloseEvents","imperativeModeOnly","W","style","P","V","afterShow","F","afterHide","K","content","U","contentWrapperRef","X","Y","defaultIsOpen","G","Z","J","Q","ee","opacity","te","arrowColor","oe","role","le","ne","ce","ie","se","ae","ue","de","pe","ve","me","fe","ye","he","we","be","Se","Ee","ge","Ae","_e","Oe","Te","ke","click","dblclick","mousedown","Ce","mouseenter","focus","assign","Le","mouseleave","blur","mouseup","Re","escape","resize","clickOutsideAnchor","xe","Ne","$e","Ie","je","target","isConnected","Be","ze","De","clientX","clientY","qe","contains","querySelector","He","Me","We","Pe","Ve","addEventListener","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","disconnect","refresh","skip","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","event","listener","MutationObserver","attributeName","getAttribute","oldValue","removedNodes","nodeType","flatMap","querySelectorAll","addedNodes","childList","subtree","attributes","attributeFilter","attributeOldValue","Fe","Ke","open","delay","close","onTransitionEnd","propertyName","background","dangerouslySetInnerHTML","__html","render","f","children","disableStyleInjection","getAttributeNames","dispatchEvent","CustomEvent","detail","disableCore","disableBase","Gradients","pureLight","colorGradients","gradients","aColorStart","aColorEnd","createGradients","okColorStart","okColorEnd","warningColorStart","warningColorEnd","criticalColorStart","criticalColorEnd","gradientId","defs","aGradient","linearGradient","x1","y1","x2","y2","stop","stopColor","LayoutManager","setRadius","radius","setHeight","setWidth","generateHexagonPointedTopLayout","getHexFlatTopRadius","generateUniformLayout","getUniformRadius","hexRadius","d3","numColumns","SQRT3","numRows","truncateFloat","getHexFlatTopDiameters","diameterX","diameterY","getUniformDiameters","horizontalMax","maxColumnsUsed","verticalMax","maxRowsUsed","uniformRadius","generatePossibleColumnAndRowsSizes","columnAutoSize","rowAutoSize","dataSize","squared","sqrt","ceil","generateActualColumnAndRowUsage","displayLimit","polygonsUsed","columnsUsed","shapeToCoordinates","shape","column","row","HEXAGON_POINTED_TOP","CIRCLE","SQUARE","generatePoints","points","aPoint","generateUniformPoints","xPos","yPos","generateRadius","autoSize","getOffsets","getOffsetsHexagonPointedTop","getOffsetsSquare","getOffsetsUniform","shapeWidth","shapeHeight","offsetToViewY","oddCount","evenCount","getOddEvenCountForRange","actualHeightUsed","yoffset","offsetToViewX","widthOffset","actualWidthUsed","xoffset","getDiameters","getErrorMessageStyles","typography","h1","fontSize","shade","getNoTriggerTextStyles","getWrapperStyles","getSVGStyles","getSVGPathStyles","Tooltip","renderTime","showTime","valueEnabled","tooltipColumnHeadersEnabled","primarySortByField","primarySortDirection","secondarySortByField","secondarySortDirection","displayMode","tooltipDisplayTextTriggeredEmpty","tooltipFontFamily","getTooltipStyles","timestamp","table","fontFamily","tooltipTable","thead","isComposite","members","tr","th","tooltipCompositeHeading","colSpan","displayName","getCompositeHeader","tooltipNameHeading","tooltipValueHeading","tfoot","td","tooltipTime","dateTimeFormatWithAbbrevation","tbody","dataToSort","triggerCount","triggered","thresholdLevel","getTriggeredCount","filterTriggered","sortedMembers","sortSettings","getSortDirection","pUseLowercase","lowerCase","pDirection","sDirection","sUseLowercase","pSortFunction","sSortFunction","lodashOrderBy","multiSort","tooltipName","tooltipValue","valueFormatted","getCompositeMetrics","borderRadius","primary","shadows","z2","text","GetDecimalsForValue","panelDecimals","lodashIsNumber","delta","dec","log","LN10","magn","pow","norm","getTextWidth","font","getContext","measureText","roundValue","formatted","toFixed","computeTextFontSize","minFont","maxFont","linesToDisplay","textAreaWidth","textAreaHeight","minFontPx","maxFontPx","getTextSizeForWidthAndHeight","Polystat","divStyles","svgStyles","svgPathStyles","noTriggerTextStyles","errorMessageStyles","tooltipTheme","isDark","animationRefs","setAnimationRefs","React","animationTimestampRefs","setAnimationTimestampRefs","animationMetricIndexes","setAnimationMetricIndexes","animatedItems","setAnimatedItems","animateComposite","useCallback","metricIndex","globalShowValueEnabled","processedData","formatCompositeValueAndTimestamp","globalDisplayTextTriggeredEmpty","innerHTML","globalShowTimestampEnabled","ts","shouldAnimate","animate","tick","showValue","JSON","stringify","newAnimationRefs","newAnimationTimestampRefs","newAnimationMetricIndexes","createRef","updateAnimation","speed","compositeConfig","animationSpeed","setInterval","clearInterval","autoSizeColumns","autoSizeRows","limit","layoutNumColumns","layoutNumRows","lm","panelWidth","panelHeight","layoutDisplayLimit","autoSizePolygons","globalShape","globalPolygonSize","calculatedPoints","aHexbin","dx","dy","x0","y0","hexbin","binsById","bins","px","point","py","pj","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","centers","mesh","fragment","extent","innerArea","symbol","d3symbol","customShape","symbolCircle","symbolSquare","getCoords","activeLabelFontSize","globalFontSize","activeValueFontSize","activeTimestampFontSize","globalShowTimestampFontSize","showEllipses","numOfChars","ellipseCharacters","hasShowTimeStampEnabled","hasShowValueEnabled","globalAutoScaleFonts","showTimestamp","maxLabel","nameToCheck","getMaxLabel","maxValue","maxTimestamp","timestampFormatted","subMetricCount","counter","checkContent","checkCompositeTimestamp","getMaxValueAndTimestamp","AutoFontScalar","globalTextFontFamily","alignments","valueWithLabelTextAlignment","valueOnlyTextAlignment","labelWithValueTextAlignment","labelOnlyTextAlignment","labelTextAlignmentX","labelValueAlignmentX","valueWithTimestampAlignment","timestampAlignment","GetAlignments","timestampLineSpacing","panelId","drawShape","fillColor","globalGradientsEnabled","useRadius","path","data-tooltip-id","data-tooltip-content","data-tooltip-position-strategy","stroke","globalPolygonBorderColor","strokeWidth","globalPolygonBorderSize","circle","cx","cy","marginLeft","marginTop","svg","xmlns","xmlnsXlink","viewBox","useUrl","sanitizeURLEnabled","sanitizedURL","resolvedClickthroughTarget","clickThroughTarget","newTabEnabled","customClickthroughTargetEnabled","customClickthroughTarget","resolveClickThroughTarget","clickableUrl","href","verticalAlignment","textAnchor","globalTextFontAutoColorEnabled","globalTextFontAutoColor","globalTextFontColor","pointerEvents","showName","getTextToDisplay","ellipseEnabled","getLabelContent","globalShowTimestampYOffset","globalShowTimestampPosition","ABOVE_VALUE","BELOW_VALUE","getValueContent","getTimestampForValueContent","globalTooltipsEnabled","Portal","ReactTooltip","boxShadow","contentIndex","globalTooltipsShowTimestampEnabled","globalShowTooltipColumnHeadersEnabled","tooltipPrimarySortByField","tooltipPrimarySortDirection","tooltipSecondarySortByField","tooltipSecondarySortDirection","tooltipDisplayMode","globalTooltipsFontFamily","autoSizeFonts","timestampContent","triggeredIndex","triggerCache","aMember","cachedMemberState","buildTriggerCache","textUtil","sanitize","frameHasTimestamp","frame","time","flattenLabels","rowNum","labelIndexes","numFields","string","labelWithValues","indexes","labelAndValue","indexValue","getValueOfField","getLabelValues","field","getWorstSeries","series1","series2","worstSeries","series1ThresholdLevel","series2ThresholdLevel","getThresholdLevelForValue","defaultColor","currentColor","thresholdCount","aThreshold","upperThreshold","lowerThreshold","ClickThroughTransformer","transformSingleMetric","url","cellName","cellValue","encodeURIComponent","cellRawValue","transformNthMetric","nthCellName","matched","nthName","nthCellValue","nthValue","nthCellRawValue","transformComposite","compositeNameRegex","transformByRegex","pattern","regex","stringToJsRegex","aMatch","matchType1","matchType2","groups","CUSTOM_SPLIT_DELIMITER","TimeFormatter","timeZone","timestampFormat","dateTime","utc","customFormatter","resolveMemberTemplates","compositeName","replaceVariables","variableRegex","member","seriesMatch","matchResult","resolvedSeriesNames","aName","newName","escapedName","escapeStringForRegex","newNameEscaped","seriesName","seriesNameEscaped","resolveMemberAliasTemplates","scopedVars","getTemplateSrv","GetValueByOperator","calcs","MappingType","isNullValueMap","mapping","ThresholdsMode","SpecialValueMatch","FieldColorModeId","LegacyMappingType","GetMappedValue","valueMappings","mappedValue","allFormattedValueMappings","allValueMappings","valueMapping","valueToTextMapping","valueAsNumber","valueToTextMappingAsNumber","addValueToTextMappingText","rangeToTextMapping","fromAsNumber","toAsNumber","addRangeToTextMappingText","t1","t2","getAllFormattedValueMappings","getMappedValue","vm","ValueToText","RangeToText","RegexToText","SpecialValue","Null","NaN","NullAndNaN","True","False","Empty","getValueMappingResult","resolveOverrideTemplates","template","MatchOverride","resolvedOverrides","anOverride","ProcessDataFrames","compositesEnabled","composites","fieldConfig","globalClickthrough","globalClickthroughTabEnabled","globalClickthroughSanitizedEnabled","globalClickthroughCustomTargetEnabled","globalClickthroughCustomTarget","globalOperator","globalDecimals","globalDisplayMode","globalRegexPattern","globalFillColor","globalThresholds","globalUnitFormat","globalShowLabel","globalShowValue","globalShowTimestamp","globalShowTimestampFormat","sortByDirection","sortByField","compositesGlobalAliasingEnabled","themeV1","themeV2","timeToInsert","newData","newFrame","meta","hasTimestamp","copiedField","aFieldValues","rowsOfField","ArrayVector","fc","timeField","InsertTime","series","internalData","models","DataFrameToPolystat","aModel","ApplyGlobalRegexPattern","ApplyGlobalFormatting","realGlobalFillColor","aSeries","dataValue","stats","defaults","mappings","realColor","formatFunc","getValueFormat","valueRounded","ApplyOverrides","filteredMetrics","keepMetrics","clonedComposites","resolvedComposites","metricComposites","resolved","isTemplated","resolveCompositeTemplates","matchedMetrics","aComposite","showComposite","currentWorstSeries","templatedMembers","metrics","aMetric","seriesItem","showMembers","sanitizeUrl","clone","itemIndex","keptMetric","location","lodashIncludes","ApplyComposites","ApplyGlobalClickThrough","FilterByGlobalDisplayMode","sortField","sortOrder","reverseSort","lodashSortBy","itemContent","lodashToLower","SortVariableValuesByField","regexPattern","regexVal","temp","extractedTxt","globalClickthroughNewTabEnabled","processDefaultClickThrough","compositeMetrics","dataLen","valueFields","newestTimestamp","aTimestamp","getTime","valueField","valueFieldName","getFieldDisplayName","standardCalcs","reduceField","reducers","operatorValue","maxDecimals","unit","formattedValueToString","model","getComponentStyles","container","CompositeMetricItem","copySelectedMetricToClipboard","metric","aValue","navigator","clipboard","writeText","execCommand","HorizontalGroup","removeMetric","minWidth","updateMetric","updateMetricAlias","CompositeItem","composite","_setComposite","setDisplayMode","getDisplayMode","setComposite","allMetrics","newMetric","UUIDv4","currentMetrics","CompositeEditor","_setAnimationSpeed","_setCompositesEnabled","allComposites","updateComposite","removeComposite","compositeIndex","setCompositesEnabled","setAnimationSpeed","toggleState","GlobalThresholdEditor","setGlobalThresholds","globalThresholdsConfig","convertOperators","hasRobotoFont","buildInfo","plugin","PanelPlugin","currentThemeV1","currentThemeV2","cachedProcessedData","setCachedProcessedData","LoadingState","Done","compositeGlobalAliasingEnabled","setMigrationHandler","panel","polystat","newDefaults","angular","columns","defaultClickThrough","defaultClickThroughNewTab","defaultClickThroughSanitize","fontAutoColor","fontAutoScale","globalOperatorName","migratedThreshold","gradientEnabled","hexagonSortByDirection","hexagonSortByField","polygonBorderColor","polygonBorderSize","polygonGlobalFillColor","radiusAutoSize","rows","tooltipEnabled","tooltipPrimarySortField","tooltipSecondarySortField","tooltipTimestampEnabled","migrateDefaults","migratedOverrides","savedOverrides","seriesOverride","migrateOverrides","migratedComposites","savedComposites","memberIndex","migrateComposites","newMaps","mappingType","newValueMappings","valueMaps","convertOldAngularValueMappings","newRangeMappings","rangeMaps","newMappings","migrateValueAndRangeMaps","useFieldConfig","disableStandardOptions","FieldConfigProperty","Thresholds","Decimals","DisplayName","Max","Min","Links","NoValue","Unit","standardOptions","Mappings","setPanelOptions","builder","addBooleanSwitch","defaultValue","category","addNumberInput","placeHolder","integer","showIf","addSelect","addColorPicker","addTextInput","addUnitPicker","addCustomEditor","editor","setSuggestionsSupplier","getSuggestionsForData","dataSummary","ds","hasData","hasNumberField","getListAppender","pluginId","append"],"sourceRoot":""}